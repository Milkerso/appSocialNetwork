[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a72ca69]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59a6d302]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d56f817]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ffbc99]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224d67bd]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ae37f9]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e04de7d]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ba77cc1]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc6d11c]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e88058]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fcee87f]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2632b190]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568a2d6a]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66261ec3]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4232ccf5]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d48cd7b]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e386ed4]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea3ad2b]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1309c2f2]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94d9900]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7861b625]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@624600cd]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25026dfd]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40641c0a]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fbbada9]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 15:28:48 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 15:28:48 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3d8e5c]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35e577ac]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c67dc8]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b95482]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee5d141]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10a39f26]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60fb88c7]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595fdd1e]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75469a06]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@494789d9]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ed71ac2]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14389aad]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@556fa486]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2013f6b3]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76c4e979]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e1a3333]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3183fa2d]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@605d5245]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@90a68b8]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56564101]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@782a9b74]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726f314e]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c40ca54]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601d0993]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bf3b19f]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15b756b2]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fef2c3a]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b6e7c5]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21bfdbe5]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28ba78a2]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d22abf]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@176db0b3]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bc46d3]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72b8402e]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be60b14]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f4cef3]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a9c1e9c]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11391a70]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66cdddf2]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c8526b]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1acada10]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4379b9a3]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd3ce73]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35ecc905]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b56daba]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e232bf5]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4387698f]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1070341b]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7eafa5]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af5537c]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@307aa13]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bec2e51]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bc2eee3]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d87ec53]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33ee98c2]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39fab648]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f3f262]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@704bd545]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cef75f2]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@695f4ef]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ba646d]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cf57a82]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd2c80b]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72496d12]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2427abb0]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69f8bdaf]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50e07c7f]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c7ce07f]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@759fac6b]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59a672b2]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a76fe7d]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@97690eb]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632f4095]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e97df9b]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b42bc35]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@760e9c7e]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3c51c2]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@590a252b]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7278f5b3]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e628724]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17593e79]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@799eb487]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34aca87c]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208f261a]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11334660]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d4540c8]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ce0f46]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bc96cc6]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373b1e84]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@501f5bab]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@661ddad1]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@538a187e]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b499b8c]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3050e405]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27529c78]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2951dd97]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a532599]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a207478]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79dcf948]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@245d1b73]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c56439a]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@552c71dc]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba4c488]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f2e3192]
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c3207b]
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:28:48 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:28:48 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 15:28:48 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 15:28:48 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 15:28:48 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 15:28:48 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@747e56e7
[2019-06-05 15:28:48 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: 3dc54efa-925c-4a01-be5d-68ecee684b2c (<unnamed>)
[2019-06-05 15:28:48 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 15:28:48 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:28:48 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@686633c1
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@59930c57}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@59930c57}

[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:48 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@23b0baaa}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@23b0baaa}

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@23b0baaa}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@59930c57}

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@59930c57}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@23b0baaa}

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@23b0baaa}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@23b0baaa}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@59930c57}

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@6e9f7ff3
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@23b0baaa}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@59930c57}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@23b0baaa}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@6e9f7ff3}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@59930c57}

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@59930c57}

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@23b0baaa
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@62e8f74
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@23b0baaa}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@23b0baaa}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@62e8f74}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@59930c57}

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@59930c57
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@59930c57}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:49 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:28:50 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 15:28:50 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 15:28:50 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 15:28:50 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 15:28:50 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 15:28:50 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
[2019-06-05 15:28:50 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52b054fd, org.springframework.security.web.context.SecurityContextPersistenceFilter@44fa0995, org.springframework.security.web.header.HeaderWriterFilter@1ceddae4, org.springframework.security.web.authentication.logout.LogoutFilter@14ca3718, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2062511a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78d4348c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f4ee876, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72100123, org.springframework.security.web.session.SessionManagementFilter@56a9eaee, org.springframework.security.web.access.ExceptionTranslationFilter@730c964d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7085d61b]
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:28:50 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [148] [DEBUG] Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [180] [DEBUG] Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [194] [DEBUG] Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [53] [DEBUG] Trying to load META-INF/validation.xml via user class loader
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:28:50 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6c2a1b66: startup date [Wed Jun 05 15:28:43 CEST 2019]; root of context hierarchy
[2019-06-05 15:28:50 ] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] [main] [235] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminMainPage()
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminAllUsersPage(int,org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/search/{searchWord}/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openSearchUsersPage(java.lang.String,int,org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/importusers]}" onto public java.lang.String dawid.app.admin.AdminPageController.showUploadPageFromXML(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/upload]}" onto public java.lang.String dawid.app.admin.AdminPageController.importUsersFromXML(org.springframework.web.multipart.MultipartFile)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/updateuser/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.updateUser(int,dawid.app.user.User)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/delete/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.deleteUser(int)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/edit/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.getUserToEdit(int,org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/error]}" onto public java.lang.String dawid.app.mainController.ErrorPageController.showErrorPage()
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/login]}" onto public java.lang.String dawid.app.mainController.LoginPageController.showLoginPage()
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || /index]}" onto public java.lang.String dawid.app.mainController.MainPageController.showMainPage(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/comment]}" onto public java.lang.String dawid.app.post.PostController.commentView(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addnewpost]}" onto public java.lang.String dawid.app.post.PostController.addNewPost(dawid.app.post.Post,org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addpost]}" onto public java.lang.String dawid.app.post.PostController.addComment(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profil]}" onto public java.lang.String dawid.app.user.ProfilController.showUserProfilePage(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updatepass]}" onto public java.lang.String dawid.app.user.ProfilController.changeUSerPassword(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updateprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserDataAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwoend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwoEnd(dawid.app.user.userProfile.UserProfile,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthree]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepthree(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editpassword]}" onto public java.lang.String dawid.app.user.ProfilController.editUserPassword(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserData(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwo]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwo(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/changephoto]}" onto public java.lang.String dawid.app.user.ProfilController.changePhoto(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthreeend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepThreeEnd(dawid.app.user.userProfile.UserProfile,dawid.app.user.photo.Photo,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourth]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourth(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourthend]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourthend(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/register]}" onto public java.lang.String dawid.app.user.RegisterController.registerForm(org.springframework.ui.Model)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/activatelink/{activationCode}]}" onto public java.lang.String dawid.app.user.RegisterController.activateAccount(java.lang.String,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/adduser]}" onto public java.lang.String dawid.app.user.RegisterController.registerAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:28:50 ] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [main] [288] [INFO ] Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[2019-06-05 15:28:51 ] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [main] [61] [INFO ] Adding welcome page template: index
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6c2a1b66: startup date [Wed Jun 05 15:28:43 CEST 2019]; root of context hierarchy
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[2019-06-05 15:28:51 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:28:51 ] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] [main] [86] [INFO ] 

Using generated security password: 8e0d468f-9e0c-4e38-819b-9f688c8ef5c0

[2019-06-05 15:28:51 ] [org.springframework.jmx.export.MBeanExporter] [main] [433] [INFO ] Registering beans for JMX exposure on startup
[2019-06-05 15:28:51 ] [org.springframework.jmx.export.MBeanExporter] [main] [895] [INFO ] Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-06-05 15:28:51 ] [org.springframework.jmx.export.MBeanExporter] [main] [668] [INFO ] Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[2019-06-05 15:28:51 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:28:51 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Using a shared selector for servlet write/read
[2019-06-05 15:28:51 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [206] [INFO ] Tomcat started on port(s): 8080 (http) with context path ''
[2019-06-05 15:28:51 ] [org.springframework.boot.StartupInfoLogger] [main] [59] [INFO ] Started Application in 8.65 seconds (JVM running for 12.34)
[2019-06-05 15:29:06 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-1] [180] [INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-06-05 15:29:06 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-1] [494] [INFO ] FrameworkServlet 'dispatcherServlet': initialization started
[2019-06-05 15:29:06 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-1] [509] [INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
[2019-06-05 15:31:33 ] [org.springframework.context.support.AbstractApplicationContext] [Thread-4] [993] [INFO ] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6c2a1b66: startup date [Wed Jun 05 15:28:43 CEST 2019]; root of context hierarchy
[2019-06-05 15:31:33 ] [org.springframework.jmx.export.MBeanExporter] [Thread-4] [451] [INFO ] Unregistering JMX-exposed beans on shutdown
[2019-06-05 15:31:33 ] [org.springframework.jmx.support.MBeanRegistrationSupport] [Thread-4] [185] [INFO ] Unregistering JMX-exposed beans
[2019-06-05 15:31:33 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-4] [597] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:31:33 ] [org.hibernate.internal.SessionFactoryImpl] [Thread-4] [741] [DEBUG] HHH000031: Closing
[2019-06-05 15:31:33 ] [org.hibernate.engine.spi.CascadeStyles] [Thread-4] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[2019-06-05 15:31:33 ] [org.hibernate.service.internal.AbstractServiceRegistryImpl] [Thread-4] [414] [DEBUG] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2019-06-05 15:31:33 ] [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] [Thread-4] [295] [DEBUG] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2019-06-05 15:31:33 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [381] [INFO ] HikariPool-1 - Shutdown initiated...
[2019-06-05 15:31:33 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [383] [INFO ] HikariPool-1 - Shutdown completed.
[2019-06-05 15:31:39 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [background-preinit] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:31:39 ] [org.springframework.boot.StartupInfoLogger] [main] [50] [INFO ] Starting Application on Dawid-PC with PID 1648 (D:\SocialMedia\appSocialNetwork\target\classes started by Dawid in D:\SocialMedia\appSocialNetwork)
[2019-06-05 15:31:39 ] [org.springframework.boot.SpringApplication] [main] [662] [INFO ] No active profile set, falling back to default profiles: default
[2019-06-05 15:31:39 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:31:39 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:31:39 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:31:39 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:31:39 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:31:39 ] [org.springframework.context.support.AbstractApplicationContext] [main] [590] [INFO ] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b5f16cb: startup date [Wed Jun 05 15:31:39 CEST 2019]; root of context hierarchy
[2019-06-05 15:31:41 ] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] [main] [153] [INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-06-05 15:31:41 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c193afb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:31:41 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5a4177ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:31:41 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:31:41 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@329c82d7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:31:41 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7f161a9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:31:41 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:31:41 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$4113fce2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:31:42 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [91] [INFO ] Tomcat initialized with port(s): 8080 (http)
[2019-06-05 15:31:42 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Initializing ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:31:42 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting service [Tomcat]
[2019-06-05 15:31:42 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting Servlet Engine: Apache Tomcat/8.5.32
[2019-06-05 15:31:42 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;.]
[2019-06-05 15:31:42 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[2019-06-05 15:31:42 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] Initializing Spring embedded WebApplicationContext
[2019-06-05 15:31:42 ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [localhost-startStop-1] [285] [INFO ] Root WebApplicationContext: initialization completed in 2725 ms
[2019-06-05 15:31:42 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-06-05 15:31:42 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-06-05 15:31:42 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-06-05 15:31:42 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'requestContextFilter' to: [/*]
[2019-06-05 15:31:42 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-06-05 15:31:42 ] [org.springframework.boot.web.servlet.ServletRegistrationBean] [localhost-startStop-1] [187] [INFO ] Servlet dispatcherServlet mapped to [/]
[2019-06-05 15:31:42 ] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2019-06-05 15:31:43 ] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2019-06-05 15:31:43 ] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] [361] [INFO ] Building JPA container EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:31:43 ] [org.hibernate.jpa.internal.util.LogHelper] [main] [102] [DEBUG] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@34c905cf
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SocialMedia/appSocialNetwork/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		dawid.app.post.comment.Comment
		dawid.app.post.Post
		dawid.app.user.group.AllGroup
		dawid.app.user.photo.Photo
		dawid.app.user.Role
		dawid.app.user.User
		dawid.app.user.userProfile.FreeTime
		dawid.app.user.userProfile.PhysicalActivity
		dawid.app.user.userProfile.UserProfile]
	Mapping files names []
	Properties []
[2019-06-05 15:31:43 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2019-06-05 15:31:43 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2019-06-05 15:31:43 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2019-06-05 15:31:43 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2019-06-05 15:31:43 ] [org.hibernate.Version] [main] [45] [INFO ] HHH000412: Hibernate Core {5.2.17.Final}
[2019-06-05 15:31:43 ] [org.hibernate.cfg.Environment] [main] [213] [INFO ] HHH000206: hibernate.properties not found
[2019-06-05 15:31:43 ] [org.hibernate.service.spi.ServiceBinding] [main] [68] [DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2019-06-05 15:31:43 ] [org.hibernate.cache.internal.RegionFactoryInitiator] [main] [75] [DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2019-06-05 15:31:43 ] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [66] [INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@7f3f4b7c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@7f3f4b7c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f3f4b7c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31d715ea
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@b03e5af
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@90381b7
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@3f831856
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@3f831856
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f831856
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@20cb2d7d
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@20cb2d7d
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@20cb2d7d
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@12c5f35a
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@12c5f35a
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12c5f35a
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@30a832eb
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@30a832eb
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@30a832eb
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@4c2c3edf
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@4c2c3edf
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c2c3edf
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@3581c656
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@3581c656
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3581c656
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7fe824e8
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7fe824e8
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4a320383
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4a320383
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration string -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@25e57ebb
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3fee8eb2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration url -> org.hibernate.type.UrlType@1292666b
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1292666b
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@1f43932d
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1f43932d
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@7347d091
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7347d091
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35bb3406
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35bb3406
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@78abcb97
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@78abcb97
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2261ccb8
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2261ccb8
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46bf3e40
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46bf3e40
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fad83da
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fad83da
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47be1ec2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47be1ec2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration date -> org.hibernate.type.DateType@3891f4cf
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@3891f4cf
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration time -> org.hibernate.type.TimeType@15a3a1f0
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15a3a1f0
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@41965ff2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@41965ff2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@41965ff2
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@743c8a90
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@5d2b8930
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d2b8930
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d2b8930
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@625bb053
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@6c8c3208
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c8c3208
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4d04c8e7
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4d04c8e7
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@67101029
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67101029
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration class -> org.hibernate.type.ClassType@3e9f0bb9
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e9f0bb9
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3dc599fe
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3dc599fe
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@38df0146
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@4b0fbf32
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@4b0fbf32
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@4b0fbf32
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1760fa
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1760fa
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1760fa
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@18b8e262
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration image -> org.hibernate.type.ImageType@7a8d7e47
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@2d4d2e62
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@2d4d2e62
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@2d4d2e62
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6191eb6f
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6191eb6f
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6191eb6f
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration text -> org.hibernate.type.TextType@16db1413
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@704ebd69
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@3d7ce46c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d7ce46c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e25d1d0
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@5aa3abcb
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5aa3abcb
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@3213ee0e
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3213ee0e
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ab72544
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@585e72b7
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@4c63309c
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@295786fa
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@295786fa
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15706f7a
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@854b78
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@621bc026
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11d7aee6
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ca1819
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d3e4d13
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1118a262
[2019-06-05 15:31:43 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d149e39
[2019-06-05 15:31:43 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [72] [DEBUG] Database ->
       name : MySQL
    version : 5.5.5-10.1.38-MariaDB
      major : 5
      minor : 5
[2019-06-05 15:31:43 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [83] [DEBUG] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[2019-06-05 15:31:43 ] [org.jboss.logging.DelegatingBasicLogger] [main] [389] [DEBUG] JDBC version : 4.0
[2019-06-05 15:31:43 ] [org.hibernate.dialect.Dialect] [main] [157] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2019-06-05 15:31:43 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [117] [DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[2019-06-05 15:31:43 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [191] [DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [84] [DEBUG]     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:31:43 ] [org.hibernate.boot.model.relational.Namespace] [main] [47] [DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2019-06-05 15:31:43 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.User
[2019-06-05 15:31:43 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:43 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name User
[2019-06-05 15:31:43 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.User on table user
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=activation_code, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property activationCode with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:activationCode]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for activationCode
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property activationCode
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=active, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property active with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:active]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for active
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property active
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property email with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:email]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for email
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property email
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.groups
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groups
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property password with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:password]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for password
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property password
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.roles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property roles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.Post
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Post
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.Post on table post
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property content with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:content]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for content
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property content
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupId with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:groupId]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:photoId]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postDate with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postDate]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_title, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postTitle with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postTitle]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postTitle
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postTitle
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postUserId with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postUserId]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postUserId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postUserId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userDislike with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userDislike]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userDislike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userDislike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_like, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userLike with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userLike]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userLike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userLike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.FreeTime on table free_time
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:name]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.PhysicalActivity on table physical_activity
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:name]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.group.AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.group.AllGroup on table all_group
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupID with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:groupID]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupID
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupID
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_physical_activities, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property CommonPhysicalActivities with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:CommonPhysicalActivities]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_city, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonCity with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonCity]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonCity
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonCity
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_free_time, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonFreeTime with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonFreeTime]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:name]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.Role
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Role
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.Role on table role
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property role with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:role]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for role
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property role
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.comment.Comment
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Comment
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.comment.Comment on table comment
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_content, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentContent with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentContent]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentContent
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentContent
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDate with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDate]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDislike with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDislike]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_like, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentLike with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentLike]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentLike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentLike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_title, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentTitle with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentTitle]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentUserId with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentUserId]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:photoId]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postId with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:postId]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.photo.Photo
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Photo
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.photo.Photo on table photo
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=data, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property data with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:data]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for data
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property data
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:description]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:name]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=profile_photo, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property profilePhoto with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:profilePhoto]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userId with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:userId]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.UserProfile on table user_profile
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:id]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=all_groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='allGroups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property allGroups
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=birth_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property birthDate with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:birthDate]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for birthDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property birthDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=characters, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property character with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:character]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for character
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property character
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=city, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property city with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:city]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for city
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property city
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:description]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=free_times_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='freeTimes_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='free_time_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=hobby, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property hobby with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:hobby]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for hobby
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property hobby
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=language, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property language with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:language]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for language
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property language
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property lastName with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:lastName]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for lastName
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property lastName
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:name]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=number, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property number with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:number]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for number
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property number
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=physical_activities_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physicalActivities_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physical_activity_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property sex with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:sex]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for sex
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property sex
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=who_search, insertable=true, updatable=true, unique=false}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property whoSearch with lazy=false
[2019-06-05 15:31:44 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:whoSearch]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for activationCode
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for active
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for email
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for password
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for content
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postTitle
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postUserId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userDislike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userLike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupID
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonCity
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for role
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentContent
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentLike
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for data
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userId
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for birthDate
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for character
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for city
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for hobby
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for language
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for lastName
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for number
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for sex
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [all_group]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [comment_id] to be non-null as it is part of the primary key for table [comment]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [photo_id] to be non-null as it is part of the primary key for table [photo]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: physical_activity_id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: free_time_id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: group_id, element: user_id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.roles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.roles
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: role_id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.groups
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.groups
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:31:44 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: free_time_id, element: user_profile_id
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: physical_activity_id, element: user_profile_id
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 15:31:44 ] [org.hibernate.internal.SessionFactoryImpl] [main] [199] [DEBUG] Building session factory
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [69] [DEBUG] SessionFactory name : null
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [70] [DEBUG] Automatic flush during beforeCompletion(): enabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [71] [DEBUG] Automatic session close at end of transaction: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [73] [DEBUG] Statistics: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [75] [DEBUG] Deleted entity synthetic identifier rollback: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [76] [DEBUG] Default entity-mode: pojo
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [77] [DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [78] [DEBUG] Allow initialization of lazy state outside session : disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [80] [DEBUG] Using BatchFetchStyle : LEGACY
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [81] [DEBUG] Default batch fetch size: -1
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [82] [DEBUG] Maximum outer join fetch depth: 2
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [83] [DEBUG] Default null ordering: NONE
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [84] [DEBUG] Order SQL updates by primary key: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [85] [DEBUG] Order SQL inserts for batching: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [87] [DEBUG] multi-tenancy strategy : NONE
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [89] [DEBUG] JTA Track by Thread: enabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [91] [DEBUG] Query language substitutions: {}
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [92] [DEBUG] JPA query language strict compliance: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [93] [DEBUG] Named query checking : enabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [95] [DEBUG] Second-level cache: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [96] [DEBUG] Second-level query cache: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [97] [DEBUG] Second-level query cache factory: null
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [98] [DEBUG] Second-level cache region prefix: null
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [99] [DEBUG] Optimize second-level cache for minimal puts: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [100] [DEBUG] Structured second-level cache entries: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [101] [DEBUG] Second-level cache direct-reference entries: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [102] [DEBUG] Automatic eviction of collection cache: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [104] [DEBUG] JDBC batch size: 15
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [105] [DEBUG] JDBC batch updates for versioned data: enabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [106] [DEBUG] Scrollable result sets: enabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [107] [DEBUG] Wrap result sets: disabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [108] [DEBUG] JDBC3 getGeneratedKeys(): enabled
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [109] [DEBUG] JDBC result set fetch size: null
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [110] [DEBUG] Connection release mode: ON_CLOSE
[2019-06-05 15:31:44 ] [org.hibernate.cfg.Settings] [main] [111] [DEBUG] Generate SQL with comments: disabled
[2019-06-05 15:31:44 ] [org.hibernate.internal.SessionFactoryImpl] [main] [257] [DEBUG] Session factory constructed with filter configurations : {}
[2019-06-05 15:31:44 ] [org.hibernate.internal.SessionFactoryImpl] [main] [258] [DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, user.country.format=PL, maven.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\../conf, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher spring-boot:run, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@104748ac, javax.persistence.sharedCache.mode=UNSPECIFIED, maven.home=C:\Program Files\Java\apache-maven-3.6.0\bin\.., sun.cpu.endian=little, user.home=C:\Users\Dawid, user.language=en, sun.stderr.encoding=cp852, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, file.separator=\, sun.stdout.encoding=cp852, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_201-b09, user.name=Dawid, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, guice.disable.misplaced.annotation.check=true, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dawid\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\Dawid\AppData\Local\Temp\tomcat.7757408419381256522.8080, java.version=1.8.0_201, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=D:\SocialMedia\appSocialNetwork, os.arch=amd64, maven.multiModuleProjectDirectory=D:\SocialMedia\appSocialNetwork, PID=1648, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=pl, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, catalina.base=C:\Users\Dawid\AppData\Local\Temp\tomcat.7757408419381256522.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7fc42ff1, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.201-b09, classworlds.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\..\bin\m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, library.jansi.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\lib\jansi-native, java.class.version=52.0}
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 15:31:44 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:31:44 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.secure.spi.JaccIntegrator] [main] [80] [DEBUG] Skipping JACC integration as it was not enabled
[2019-06-05 15:31:44 ] [org.hibernate.engine.spi.CascadeStyles] [main] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[2019-06-05 15:31:44 ] [org.hibernate.internal.SessionFactoryImpl] [main] [297] [DEBUG] Instantiated session factory
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:31:44 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (free_time_id, user_profile_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set user_profile_id=? where free_time_id=? and user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where free_time_id=? and user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (physical_activity_id, user_profile_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set user_profile_id=? where physical_activity_id=? and user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where physical_activity_id=? and user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (user_profile_id, physical_activity_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set physical_activity_id=? where user_profile_id=? and physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where user_profile_id=? and physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (user_profile_id, free_time_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set free_time_id=? where user_profile_id=? and free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where user_profile_id=? and free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.roles
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into user_role (user_id, role_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update user_role set role_id=? where user_id=? and role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from user_role where user_id=? and role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from user_role where user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (group_id, user_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set user_id=? where group_id=? and user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where group_id=? and user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.groups
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.User
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_id from user where user_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select user_.user_id, user_.activation_code as activati2_10_, user_.active as active3_10_, user_.email as email4_10_, user_.password as password5_10_ from user user_ where user_.user_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user (activation_code, active, email, password, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user set activation_code=?, active=?, email=?, password=? where user_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user where user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into user (activation_code, active, email, password) values (?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6193781a]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13200f3a]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a75373]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@579dafa5]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bcd52ee]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [NONE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@654d8b38]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7487807a]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0e24ef]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4493723d]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352b3d1d]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d67ef92]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e2f0504]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72800009]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30597ab4]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6552cfdf]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3e154]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ab66135]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79696b8b]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65cc9cb3]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dbebb48]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2438ce03]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1717e34c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9b7e1d]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d31ff3b]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75878e8d]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d221ef2]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b3708ec]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@220d00e1]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f955fdc]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79a879f3]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [FORCE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8b6e42]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2565b180]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f38233e]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6eb0b7e5]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@550f9770]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d6ed5e0]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6875bcb8]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@416812d1]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a821ec9]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@607c5b15]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2529bbde]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ed8ed25]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cfea118]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34e11612]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@267c44f5]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd434da]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a66611c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef9d349]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@701558a8]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b77939f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22006b6c]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58495f06]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fa5d4fb]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5f8f68]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60bd9b2a]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.Post
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select post_id from post where post_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select post_.post_id, post_.content as content2_8_, post_.group_id as group_id3_8_, post_.photo_id as photo_id4_8_, post_.post_date as post_dat5_8_, post_.post_title as post_tit6_8_, post_.post_user_id as post_use7_8_, post_.user_dislike as user_dis8_8_, post_.user_like as user_lik9_8_ from post post_ where post_.post_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like, post_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update post set content=?, group_id=?, photo_id=?, post_date=?, post_title=?, post_user_id=?, user_dislike=?, user_like=? where post_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from post where post_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d019f63]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [NONE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b01b49]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6fadda]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9382112]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_NOWAIT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6328a2d4]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_SKIPLOCKED]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aea4203]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [FORCE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3642203]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fdf0e70]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_WRITE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e33dd4]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2559c724]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352409d4]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select free_time_id from free_time where free_time_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select freetime_.free_time_id, freetime_.free_time_name as free_tim2_2_ from free_time freetime_ where freetime_.free_time_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into free_time (free_time_name, free_time_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update free_time set free_time_name=? where free_time_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from free_time where free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into free_time (free_time_name) values (?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b944705]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ebb6545]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c6ba1]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [NONE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3949b8c0]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@525da8e7]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@313fd06e]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c4f131]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36144f40]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79e7454c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b486e38]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8a48288]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4baa6bf5]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_NOWAIT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13cbe516]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56601426]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e0d28dc]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_SKIPLOCKED]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222875e]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d9935bb]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a75af1c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [FORCE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c7bcd7b]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15b61a49]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@527c4aac]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70ce458d]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7227c1e5]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42becc27]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_WRITE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40de1bd0]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c5435be]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58bf13e7]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@680f83bb]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2294ec6]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a9554f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@362f18fa]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5adb611b]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b05422]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select physical_activity_id from physical_activity where physical_activity_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select physicalac_.physical_activity_id, physicalac_.physical_activity_name as physical2_6_ from physical_activity physicalac_ where physicalac_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into physical_activity (physical_activity_name, physical_activity_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update physical_activity set physical_activity_name=? where physical_activity_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from physical_activity where physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into physical_activity (physical_activity_name) values (?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c966246]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d6f4f19]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d4e1bd2]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [NONE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7205ca6f]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@601c9e36]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dc1896c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@714b6809]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cb9f9f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2360ec43]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c1d306]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@437c05e3]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67daeb3b]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_NOWAIT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60845d25]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74633b9e]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4450951a]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_SKIPLOCKED]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67f85c0]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@270ee8ec]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67364152]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [FORCE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d9d99f1]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6359bba9]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b04a41]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47930f77]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@592c8f4e]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7a2468]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_WRITE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@324d6607]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f57208a]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7332146c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a163953]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a226860]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2950843c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3217ece4]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6dce9e36]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@409296d7]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.group.AllGroup
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select group_id from all_group where group_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select allgroup_.group_id, allgroup_.common_physical_activities as common_p2_0_, allgroup_.common_city as common_c3_0_, allgroup_.common_free_time as common_f4_0_, allgroup_.name as name5_0_ from all_group allgroup_ where allgroup_.group_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into all_group (common_physical_activities, common_city, common_free_time, name, group_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update all_group set common_physical_activities=?, common_city=?, common_free_time=?, name=? where group_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from all_group where group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into all_group (common_physical_activities, common_city, common_free_time, name) values (?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f32ed]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@543259cb]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4249b4]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [NONE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@348efb0b]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d44cd07]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd928f2]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4ccca1]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dd2881b]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b0ab5eb]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31094bef]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34b2f9dc]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad9b74c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_NOWAIT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@174cdcb]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1657824f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2103241e]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_SKIPLOCKED]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bebf60]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e22b689]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b94a87]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [FORCE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150fac8f]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42be186f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e7f8fcd]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c3d59]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@264b19ec]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d8eb0f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_WRITE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a98e38]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19505cd0]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a234c66]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7564c754]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c3cc10b]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c8cf696]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f81da34]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fcb6b80]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@443814a9]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.Role
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select role_id from role where role_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select role_.role_id, role_.role as role2_9_ from role role_ where role_.role_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into role (role, role_id) values (?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update role set role=? where role_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from role where role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into role (role) values (?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35992660]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [NONE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a01095a]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce447a]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@490fa817]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_NOWAIT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d5eba]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_SKIPLOCKED]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f25e438]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [FORCE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@249dcef6]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4afb676a]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e62daaf]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9db3d8]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41235516]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f48fbc7]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f46fcce]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6676ac70]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e5d2f6b]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54ef621c]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dea67a4]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f0394db]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@125d254c]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e2db769]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5d99de]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ee5c18]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729f0c9f]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad5c4d1]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759e56a4]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb0b587]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c7708a]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@501a0420]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35f3a678]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6d63f5]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fff9e3]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8b0d4f]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22803a48]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 15:31:44 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 15:31:44 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c562e7]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34787817]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fe2d17d]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17884c3c]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aca33fb]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d855275]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4550581]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e9509b]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d26117d]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71736e55]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a858568]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f725eca]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72b219a0]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1859c065]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e31a8c3]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31a5450f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6729e1b6]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@340d2a20]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26696b51]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d7fdfae]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1573bde6]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4872d942]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66ed295a]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e7924ec]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@309f48a8]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f115a5]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ad945b8]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da0404b]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1730895f]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a55864e]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5283757]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16412cdc]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e48cc7]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5751303]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41231e75]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9bfd41]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@248e27c0]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d075592]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c77ce86]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@341c031]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@562457be]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1148232d]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5309dc7c]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a29ebb5]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a28e496]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67df2d93]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f1078f2]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a815ce6]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47300b74]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@599d15b4]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@354023bd]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726cf5ca]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@436d6e86]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c375af]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32af521]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@167d922b]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eccc73c]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46d9cfda]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4ff1e0]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64e23472]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@311a732]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bbe1f95]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48bd2ff3]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d09d332]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@481628c1]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69f55487]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a168ac8]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57280167]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e816b63]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d135358]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43fdc4f8]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71b66540]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64861bd]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b3faf88]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315a4b28]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7384a426]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36047662]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70dbd857]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c07f1c3]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1057888]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54863d7d]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18c11d84]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619e14b3]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6afe1dd6]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d944346]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31695c0f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e98b717]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@625bdab7]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56acb150]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dde16ae]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26f52c0d]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74e4c8cd]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b7e1718]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32a16512]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ec6289]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@586f9f2f]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd4681]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47b852f6]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f29edce]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@717c6cc9]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433ed56e]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4694001d]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26b3d29c]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6769a22d]
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff6ab6e]
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:31:44 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:31:44 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 15:31:44 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 15:31:44 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 15:31:44 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 15:31:44 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6225c23d
[2019-06-05 15:31:44 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: 8a51c95f-48b7-483a-bfa0-58dc62ce36b5 (<unnamed>)
[2019-06-05 15:31:44 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 15:31:44 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:31:45 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6b11b2b
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}

[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:45 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@5a68ab2}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@5a68ab2}

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@5a68ab2}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@5a68ab2}

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@5a68ab2}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@5a68ab2}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@3891f4cf
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@5a68ab2}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@5a68ab2}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@3891f4cf}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@5a68ab2
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@4b0fbf32
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@5a68ab2}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@5a68ab2}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@4b0fbf32}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@7f7cfe9c
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@7f7cfe9c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:46 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:31:47 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 15:31:47 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 15:31:47 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 15:31:47 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 15:31:47 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 15:31:47 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
[2019-06-05 15:31:47 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2220a50d, org.springframework.security.web.context.SecurityContextPersistenceFilter@67ba7e15, org.springframework.security.web.header.HeaderWriterFilter@52f4a3a3, org.springframework.security.web.authentication.logout.LogoutFilter@77298bef, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@68ec9018, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@499b43d3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2342511b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53082220, org.springframework.security.web.session.SessionManagementFilter@6b7a206d, org.springframework.security.web.access.ExceptionTranslationFilter@b88deba, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52fcd65]
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:31:47 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [148] [DEBUG] Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [180] [DEBUG] Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [194] [DEBUG] Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [53] [DEBUG] Trying to load META-INF/validation.xml via user class loader
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:31:47 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b5f16cb: startup date [Wed Jun 05 15:31:39 CEST 2019]; root of context hierarchy
[2019-06-05 15:31:47 ] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] [main] [235] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminMainPage()
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminAllUsersPage(int,org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/search/{searchWord}/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openSearchUsersPage(java.lang.String,int,org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/importusers]}" onto public java.lang.String dawid.app.admin.AdminPageController.showUploadPageFromXML(org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/upload]}" onto public java.lang.String dawid.app.admin.AdminPageController.importUsersFromXML(org.springframework.web.multipart.MultipartFile)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/updateuser/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.updateUser(int,dawid.app.user.User)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/delete/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.deleteUser(int)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/edit/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.getUserToEdit(int,org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/error]}" onto public java.lang.String dawid.app.mainController.ErrorPageController.showErrorPage()
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/login]}" onto public java.lang.String dawid.app.mainController.LoginPageController.showLoginPage()
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || /index]}" onto public java.lang.String dawid.app.mainController.MainPageController.showMainPage(org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/comment]}" onto public java.lang.String dawid.app.post.PostController.commentView(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addnewpost]}" onto public java.lang.String dawid.app.post.PostController.addNewPost(dawid.app.post.Post,org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addpost]}" onto public java.lang.String dawid.app.post.PostController.addComment(org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editpassword]}" onto public java.lang.String dawid.app.user.ProfilController.editUserPassword(org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserData(org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwo]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwo(org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/changephoto]}" onto public java.lang.String dawid.app.user.ProfilController.changePhoto(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profil]}" onto public java.lang.String dawid.app.user.ProfilController.showUserProfilePage(org.springframework.ui.Model)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updatepass]}" onto public java.lang.String dawid.app.user.ProfilController.changeUSerPassword(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updateprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserDataAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:31:47 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwoend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwoEnd(dawid.app.user.userProfile.UserProfile,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthree]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepthree(org.springframework.ui.Model)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthreeend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepThreeEnd(dawid.app.user.userProfile.UserProfile,dawid.app.user.photo.Photo,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourth]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourth(org.springframework.ui.Model)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourthend]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourthend(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/register]}" onto public java.lang.String dawid.app.user.RegisterController.registerForm(org.springframework.ui.Model)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/activatelink/{activationCode}]}" onto public java.lang.String dawid.app.user.RegisterController.activateAccount(java.lang.String,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/adduser]}" onto public java.lang.String dawid.app.user.RegisterController.registerAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [main] [288] [INFO ] Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[2019-06-05 15:31:48 ] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [main] [61] [INFO ] Adding welcome page template: index
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b5f16cb: startup date [Wed Jun 05 15:31:39 CEST 2019]; root of context hierarchy
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[2019-06-05 15:31:48 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:31:48 ] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] [main] [86] [INFO ] 

Using generated security password: 33d856ae-7fd9-493f-969d-2a9a975e5c77

[2019-06-05 15:31:48 ] [org.springframework.jmx.export.MBeanExporter] [main] [433] [INFO ] Registering beans for JMX exposure on startup
[2019-06-05 15:31:48 ] [org.springframework.jmx.export.MBeanExporter] [main] [895] [INFO ] Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-06-05 15:31:48 ] [org.springframework.jmx.export.MBeanExporter] [main] [668] [INFO ] Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[2019-06-05 15:31:49 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:31:49 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Using a shared selector for servlet write/read
[2019-06-05 15:31:49 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [206] [INFO ] Tomcat started on port(s): 8080 (http) with context path ''
[2019-06-05 15:31:49 ] [org.springframework.boot.StartupInfoLogger] [main] [59] [INFO ] Started Application in 9.899 seconds (JVM running for 13.649)
[2019-06-05 15:31:49 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-3] [180] [INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-06-05 15:31:49 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-3] [494] [INFO ] FrameworkServlet 'dispatcherServlet': initialization started
[2019-06-05 15:31:49 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-3] [509] [INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
[2019-06-05 15:32:07 ] [org.springframework.context.support.AbstractApplicationContext] [Thread-4] [993] [INFO ] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b5f16cb: startup date [Wed Jun 05 15:31:39 CEST 2019]; root of context hierarchy
[2019-06-05 15:32:07 ] [org.springframework.jmx.export.MBeanExporter] [Thread-4] [451] [INFO ] Unregistering JMX-exposed beans on shutdown
[2019-06-05 15:32:07 ] [org.springframework.jmx.support.MBeanRegistrationSupport] [Thread-4] [185] [INFO ] Unregistering JMX-exposed beans
[2019-06-05 15:32:07 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-4] [597] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:32:07 ] [org.hibernate.internal.SessionFactoryImpl] [Thread-4] [741] [DEBUG] HHH000031: Closing
[2019-06-05 15:32:07 ] [org.hibernate.engine.spi.CascadeStyles] [Thread-4] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[2019-06-05 15:32:07 ] [org.hibernate.service.internal.AbstractServiceRegistryImpl] [Thread-4] [414] [DEBUG] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2019-06-05 15:32:07 ] [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] [Thread-4] [295] [DEBUG] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2019-06-05 15:32:07 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [381] [INFO ] HikariPool-1 - Shutdown initiated...
[2019-06-05 15:32:07 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [383] [INFO ] HikariPool-1 - Shutdown completed.
[2019-06-05 15:32:14 ] [org.springframework.boot.StartupInfoLogger] [main] [50] [INFO ] Starting Application on Dawid-PC with PID 8128 (D:\SocialMedia\appSocialNetwork\target\classes started by Dawid in D:\SocialMedia\appSocialNetwork)
[2019-06-05 15:32:14 ] [org.springframework.boot.SpringApplication] [main] [662] [INFO ] No active profile set, falling back to default profiles: default
[2019-06-05 15:32:14 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [background-preinit] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:32:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:32:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:32:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:32:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:32:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:32:14 ] [org.springframework.context.support.AbstractApplicationContext] [main] [590] [INFO ] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@193d6e64: startup date [Wed Jun 05 15:32:14 CEST 2019]; root of context hierarchy
[2019-06-05 15:32:15 ] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] [main] [153] [INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-06-05 15:32:15 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1d728bea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:32:15 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b6205424] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:32:15 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:32:15 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@220f75d6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:32:15 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$daf4f6d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:32:15 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:32:15 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$9cf2d91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:32:16 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [91] [INFO ] Tomcat initialized with port(s): 8080 (http)
[2019-06-05 15:32:16 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Initializing ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:32:16 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting service [Tomcat]
[2019-06-05 15:32:16 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting Servlet Engine: Apache Tomcat/8.5.32
[2019-06-05 15:32:16 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;.]
[2019-06-05 15:32:16 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[2019-06-05 15:32:16 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] Initializing Spring embedded WebApplicationContext
[2019-06-05 15:32:16 ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [localhost-startStop-1] [285] [INFO ] Root WebApplicationContext: initialization completed in 2732 ms
[2019-06-05 15:32:16 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-06-05 15:32:16 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-06-05 15:32:16 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-06-05 15:32:16 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'requestContextFilter' to: [/*]
[2019-06-05 15:32:16 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-06-05 15:32:16 ] [org.springframework.boot.web.servlet.ServletRegistrationBean] [localhost-startStop-1] [187] [INFO ] Servlet dispatcherServlet mapped to [/]
[2019-06-05 15:32:17 ] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2019-06-05 15:32:17 ] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2019-06-05 15:32:17 ] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] [361] [INFO ] Building JPA container EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:32:17 ] [org.hibernate.jpa.internal.util.LogHelper] [main] [102] [DEBUG] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@4ce6909c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SocialMedia/appSocialNetwork/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		dawid.app.post.comment.Comment
		dawid.app.post.Post
		dawid.app.user.group.AllGroup
		dawid.app.user.photo.Photo
		dawid.app.user.Role
		dawid.app.user.User
		dawid.app.user.userProfile.FreeTime
		dawid.app.user.userProfile.PhysicalActivity
		dawid.app.user.userProfile.UserProfile]
	Mapping files names []
	Properties []
[2019-06-05 15:32:17 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2019-06-05 15:32:17 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2019-06-05 15:32:17 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2019-06-05 15:32:17 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2019-06-05 15:32:17 ] [org.hibernate.Version] [main] [45] [INFO ] HHH000412: Hibernate Core {5.2.17.Final}
[2019-06-05 15:32:17 ] [org.hibernate.cfg.Environment] [main] [213] [INFO ] HHH000206: hibernate.properties not found
[2019-06-05 15:32:17 ] [org.hibernate.service.spi.ServiceBinding] [main] [68] [DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2019-06-05 15:32:17 ] [org.hibernate.cache.internal.RegionFactoryInitiator] [main] [75] [DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2019-06-05 15:32:17 ] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [66] [INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@2c09a27e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@2c09a27e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c09a27e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4401e74d
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@2dae8306
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@6dfeeb0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@9ddd8c0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@9ddd8c0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@9ddd8c0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@a7ec899
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@a7ec899
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a7ec899
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@758f19b1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@758f19b1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@758f19b1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@7a803207
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@7a803207
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@7a803207
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@5fa13825
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@5fa13825
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fa13825
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@69881171
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@69881171
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@69881171
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17cedfb
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17cedfb
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@54710799
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@54710799
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration string -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c697da6
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2e0c4a71
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration url -> org.hibernate.type.UrlType@2e4cf917
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2e4cf917
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7d818c46
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7d818c46
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@2723bd0e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2723bd0e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e7911b2
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e7911b2
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@741a20ac
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@741a20ac
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f97a607
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f97a607
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f97fc0c
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f97fc0c
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@595f02d6
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@595f02d6
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24a955c9
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24a955c9
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration date -> org.hibernate.type.DateType@a240481
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@a240481
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration time -> org.hibernate.type.TimeType@3c94d18e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3c94d18e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@2767cb0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2767cb0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2767cb0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@626d22d7
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@1cb024c5
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1cb024c5
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1cb024c5
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2325e425
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@19be4599
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19be4599
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@3afec19a
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3afec19a
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d6f4c98
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d6f4c98
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration class -> org.hibernate.type.ClassType@3a53bc43
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a53bc43
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5023bbb
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5023bbb
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f82ac20
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@5c502771
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@5c502771
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@5c502771
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62bb4b92
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62bb4b92
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62bb4b92
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@53249d
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration image -> org.hibernate.type.ImageType@76aec148
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@6c18883b
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@6c18883b
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@6c18883b
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2e9ecec1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2e9ecec1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2e9ecec1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration text -> org.hibernate.type.TextType@1beeb247
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@475e60a5
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@4a183240
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a183240
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b84f651
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@28575d8
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28575d8
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@1ed96e5f
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1ed96e5f
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6914121b
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@15a4c2f6
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@62a557f1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@e5df787
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e5df787
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61ea1254
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ea2021
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18f5f4f0
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@722b47c8
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@43e2836b
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1258581e
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25bd6cd1
[2019-06-05 15:32:17 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d807aa9
[2019-06-05 15:32:17 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [72] [DEBUG] Database ->
       name : MySQL
    version : 5.5.5-10.1.38-MariaDB
      major : 5
      minor : 5
[2019-06-05 15:32:17 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [83] [DEBUG] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[2019-06-05 15:32:17 ] [org.jboss.logging.DelegatingBasicLogger] [main] [389] [DEBUG] JDBC version : 4.0
[2019-06-05 15:32:17 ] [org.hibernate.dialect.Dialect] [main] [157] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2019-06-05 15:32:17 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [117] [DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[2019-06-05 15:32:17 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [191] [DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [84] [DEBUG]     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:32:17 ] [org.hibernate.boot.model.relational.Namespace] [main] [47] [DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2019-06-05 15:32:17 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.User
[2019-06-05 15:32:17 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:17 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name User
[2019-06-05 15:32:17 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.User on table user
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=activation_code, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property activationCode with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:activationCode]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for activationCode
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property activationCode
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=active, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property active with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:active]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for active
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property active
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property email with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:email]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for email
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property email
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.groups
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groups
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property password with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:password]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for password
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property password
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.roles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property roles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.Post
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Post
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.Post on table post
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property content with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:content]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for content
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property content
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupId with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:groupId]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:photoId]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postDate with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postDate]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_title, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postTitle with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postTitle]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postTitle
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postTitle
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postUserId with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postUserId]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postUserId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postUserId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userDislike with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userDislike]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userDislike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userDislike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_like, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userLike with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userLike]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userLike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userLike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.FreeTime on table free_time
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:name]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.PhysicalActivity on table physical_activity
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:name]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.group.AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.group.AllGroup on table all_group
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupID with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:groupID]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupID
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupID
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_physical_activities, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property CommonPhysicalActivities with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:CommonPhysicalActivities]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_city, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonCity with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonCity]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonCity
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonCity
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_free_time, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonFreeTime with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonFreeTime]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:name]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.Role
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Role
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.Role on table role
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property role with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:role]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for role
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property role
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.comment.Comment
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Comment
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.comment.Comment on table comment
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_content, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentContent with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentContent]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentContent
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentContent
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDate with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDate]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDislike with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDislike]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_like, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentLike with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentLike]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentLike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentLike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_title, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentTitle with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentTitle]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentUserId with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentUserId]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:photoId]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postId with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:postId]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.photo.Photo
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Photo
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.photo.Photo on table photo
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=data, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property data with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:data]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for data
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property data
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:description]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:name]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=profile_photo, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property profilePhoto with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:profilePhoto]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userId with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:userId]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.UserProfile on table user_profile
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:id]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=all_groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='allGroups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property allGroups
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=birth_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property birthDate with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:birthDate]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for birthDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property birthDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=characters, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property character with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:character]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for character
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property character
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=city, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property city with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:city]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for city
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property city
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:description]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=free_times_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='freeTimes_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='free_time_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=hobby, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property hobby with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:hobby]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for hobby
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property hobby
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=language, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property language with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:language]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for language
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property language
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property lastName with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:lastName]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for lastName
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property lastName
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:name]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=number, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property number with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:number]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for number
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property number
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=physical_activities_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physicalActivities_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physical_activity_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property sex with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:sex]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for sex
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property sex
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=who_search, insertable=true, updatable=true, unique=false}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property whoSearch with lazy=false
[2019-06-05 15:32:18 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:whoSearch]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for activationCode
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for active
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for email
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for password
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for content
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postTitle
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postUserId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userDislike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userLike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupID
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonCity
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for role
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentContent
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentLike
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for data
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userId
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for birthDate
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for character
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for city
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for hobby
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for language
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for lastName
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for number
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for sex
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [all_group]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [comment_id] to be non-null as it is part of the primary key for table [comment]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [photo_id] to be non-null as it is part of the primary key for table [photo]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: physical_activity_id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: free_time_id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: group_id, element: user_id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.roles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.roles
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: role_id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.groups
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.groups
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:32:18 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: free_time_id, element: user_profile_id
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: physical_activity_id, element: user_profile_id
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 15:32:18 ] [org.hibernate.internal.SessionFactoryImpl] [main] [199] [DEBUG] Building session factory
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [69] [DEBUG] SessionFactory name : null
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [70] [DEBUG] Automatic flush during beforeCompletion(): enabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [71] [DEBUG] Automatic session close at end of transaction: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [73] [DEBUG] Statistics: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [75] [DEBUG] Deleted entity synthetic identifier rollback: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [76] [DEBUG] Default entity-mode: pojo
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [77] [DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [78] [DEBUG] Allow initialization of lazy state outside session : disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [80] [DEBUG] Using BatchFetchStyle : LEGACY
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [81] [DEBUG] Default batch fetch size: -1
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [82] [DEBUG] Maximum outer join fetch depth: 2
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [83] [DEBUG] Default null ordering: NONE
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [84] [DEBUG] Order SQL updates by primary key: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [85] [DEBUG] Order SQL inserts for batching: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [87] [DEBUG] multi-tenancy strategy : NONE
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [89] [DEBUG] JTA Track by Thread: enabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [91] [DEBUG] Query language substitutions: {}
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [92] [DEBUG] JPA query language strict compliance: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [93] [DEBUG] Named query checking : enabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [95] [DEBUG] Second-level cache: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [96] [DEBUG] Second-level query cache: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [97] [DEBUG] Second-level query cache factory: null
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [98] [DEBUG] Second-level cache region prefix: null
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [99] [DEBUG] Optimize second-level cache for minimal puts: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [100] [DEBUG] Structured second-level cache entries: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [101] [DEBUG] Second-level cache direct-reference entries: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [102] [DEBUG] Automatic eviction of collection cache: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [104] [DEBUG] JDBC batch size: 15
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [105] [DEBUG] JDBC batch updates for versioned data: enabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [106] [DEBUG] Scrollable result sets: enabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [107] [DEBUG] Wrap result sets: disabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [108] [DEBUG] JDBC3 getGeneratedKeys(): enabled
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [109] [DEBUG] JDBC result set fetch size: null
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [110] [DEBUG] Connection release mode: ON_CLOSE
[2019-06-05 15:32:18 ] [org.hibernate.cfg.Settings] [main] [111] [DEBUG] Generate SQL with comments: disabled
[2019-06-05 15:32:18 ] [org.hibernate.internal.SessionFactoryImpl] [main] [257] [DEBUG] Session factory constructed with filter configurations : {}
[2019-06-05 15:32:18 ] [org.hibernate.internal.SessionFactoryImpl] [main] [258] [DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, user.country.format=PL, maven.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\../conf, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher spring-boot:run, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1e84e0f0, javax.persistence.sharedCache.mode=UNSPECIFIED, maven.home=C:\Program Files\Java\apache-maven-3.6.0\bin\.., sun.cpu.endian=little, user.home=C:\Users\Dawid, user.language=en, sun.stderr.encoding=cp852, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, file.separator=\, sun.stdout.encoding=cp852, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_201-b09, user.name=Dawid, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, guice.disable.misplaced.annotation.check=true, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dawid\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\Dawid\AppData\Local\Temp\tomcat.1221460211008730475.8080, java.version=1.8.0_201, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=D:\SocialMedia\appSocialNetwork, os.arch=amd64, maven.multiModuleProjectDirectory=D:\SocialMedia\appSocialNetwork, PID=8128, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=pl, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, catalina.base=C:\Users\Dawid\AppData\Local\Temp\tomcat.1221460211008730475.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@27e72295, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.201-b09, classworlds.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\..\bin\m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, library.jansi.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\lib\jansi-native, java.class.version=52.0}
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 15:32:18 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:32:18 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.secure.spi.JaccIntegrator] [main] [80] [DEBUG] Skipping JACC integration as it was not enabled
[2019-06-05 15:32:18 ] [org.hibernate.engine.spi.CascadeStyles] [main] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[2019-06-05 15:32:18 ] [org.hibernate.internal.SessionFactoryImpl] [main] [297] [DEBUG] Instantiated session factory
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:32:18 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (free_time_id, user_profile_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set user_profile_id=? where free_time_id=? and user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where free_time_id=? and user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (physical_activity_id, user_profile_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set user_profile_id=? where physical_activity_id=? and user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where physical_activity_id=? and user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (user_profile_id, physical_activity_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set physical_activity_id=? where user_profile_id=? and physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where user_profile_id=? and physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (user_profile_id, free_time_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set free_time_id=? where user_profile_id=? and free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where user_profile_id=? and free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.roles
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into user_role (user_id, role_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update user_role set role_id=? where user_id=? and role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from user_role where user_id=? and role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from user_role where user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (group_id, user_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set user_id=? where group_id=? and user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where group_id=? and user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.groups
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.User
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_id from user where user_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select user_.user_id, user_.activation_code as activati2_10_, user_.active as active3_10_, user_.email as email4_10_, user_.password as password5_10_ from user user_ where user_.user_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user (activation_code, active, email, password, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user set activation_code=?, active=?, email=?, password=? where user_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user where user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into user (activation_code, active, email, password) values (?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@523444d0]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77c716e4]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea84eab]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32fa9119]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eab5cfb]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [NONE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111283e6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7007f5fd]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@226584ce]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27ed2ed7]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eccc321]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12b7f18]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4133d4ba]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69ced276]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3347a3e8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a58e377]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55917082]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4485e765]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@90bf7d9]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57c0931a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea86a3]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c3ff7f4]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69577c87]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3adb2090]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29c8e068]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7049e51c]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a81cd6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fb10459]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ef65b6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72c385d1]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10085dc5]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [FORCE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373c1051]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3216ea9b]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60227f69]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@374b45a4]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43247131]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e319fc]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58c2ea06]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388fa5d6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66fd77c2]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c35466c]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53681d36]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b4285ec]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d72b6ce]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ee08ffb]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d036bdc]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e1fa75]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@403837ce]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b3f99e]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bcc9b6f]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ec5f4cf]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f422c9e]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@799cbfbb]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@181e5fcb]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46e6b68a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a95efc]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.Post
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select post_id from post where post_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select post_.post_id, post_.content as content2_8_, post_.group_id as group_id3_8_, post_.photo_id as photo_id4_8_, post_.post_date as post_dat5_8_, post_.post_title as post_tit6_8_, post_.post_user_id as post_use7_8_, post_.user_dislike as user_dis8_8_, post_.user_like as user_lik9_8_ from post post_ where post_.post_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like, post_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update post set content=?, group_id=?, photo_id=?, post_date=?, post_title=?, post_user_id=?, user_dislike=?, user_like=? where post_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from post where post_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f3f92d]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [NONE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ccd1b2b]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5514b84f]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f71d98f]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_NOWAIT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502c64b8]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_SKIPLOCKED]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36da6253]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [FORCE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a8bcc6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2793fcbc]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_WRITE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@416224f6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d140245]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d48af2]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select free_time_id from free_time where free_time_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select freetime_.free_time_id, freetime_.free_time_name as free_tim2_2_ from free_time freetime_ where freetime_.free_time_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into free_time (free_time_name, free_time_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update free_time set free_time_name=? where free_time_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from free_time where free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into free_time (free_time_name) values (?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf1cc1c]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@255192bd]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@449f4fd1]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [NONE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11dbfa72]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19ba2c3c]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27e5191d]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69a37ff9]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dcc95eb]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22ee5cbe]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c0a3ad]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d9ba13]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50021d1a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_NOWAIT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a117c]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1984feaa]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59aeca4d]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_SKIPLOCKED]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c7ab1f5]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@605f9bf8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8cd91c]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [FORCE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a02c01]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56093a35]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe45dd1]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6833b608]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12427b15]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f15b659]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_WRITE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a63da45]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fd9b2a5]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d1c7879]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5989246d]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@299d4e8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c58ab72]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c625ed8]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28b98856]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e3a508]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select physical_activity_id from physical_activity where physical_activity_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select physicalac_.physical_activity_id, physicalac_.physical_activity_name as physical2_6_ from physical_activity physicalac_ where physicalac_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into physical_activity (physical_activity_name, physical_activity_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update physical_activity set physical_activity_name=? where physical_activity_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from physical_activity where physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into physical_activity (physical_activity_name) values (?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f69b172]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3675fdb9]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a52d59a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [NONE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78120d83]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@625e8a88]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eec6d5c]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@467a1317]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52f88f39]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fb39eb7]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c7d4fd]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79ed3adc]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a285570]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_NOWAIT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dff16f4]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@659c892f]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da7c339]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_SKIPLOCKED]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@685a36cf]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27c396c9]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@441e3703]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [FORCE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dcb8d01]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d3f0aaa]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ac8821]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49aea3b0]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71021e8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf14cab]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_WRITE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37fedd46]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bc840c4]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6addcd02]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b8829f2]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6645de2f]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f4aa38]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d9c82d]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90b9cc]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b72750c]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.group.AllGroup
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select group_id from all_group where group_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select allgroup_.group_id, allgroup_.common_physical_activities as common_p2_0_, allgroup_.common_city as common_c3_0_, allgroup_.common_free_time as common_f4_0_, allgroup_.name as name5_0_ from all_group allgroup_ where allgroup_.group_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into all_group (common_physical_activities, common_city, common_free_time, name, group_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update all_group set common_physical_activities=?, common_city=?, common_free_time=?, name=? where group_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from all_group where group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into all_group (common_physical_activities, common_city, common_free_time, name) values (?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d2c46ef]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3538c469]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d2a1dd7]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [NONE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce37a3]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27b82c38]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a5149bd]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d1147b]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e65e850]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ef94c80]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ffafbe8]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@205c9533]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@244540f4]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_NOWAIT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c88ca2f]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f25b9d8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e90828]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_SKIPLOCKED]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b3a6188]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50dac6f0]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@92b2c8b]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [FORCE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d53a07]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f850df7]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9a21f8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f73b0e]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c23c9e4]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6288b679]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_WRITE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c99de6d]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21a89ba9]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b4da9b]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@144c0696]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@221f08e2]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df7e38]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7653b043]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@165725fe]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f80b7b2]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.Role
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select role_id from role where role_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select role_.role_id, role_.role as role2_9_ from role role_ where role_.role_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into role (role, role_id) values (?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update role set role=? where role_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from role where role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into role (role) values (?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ad3a9]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [NONE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c3b4fea]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74197417]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66d6b8c3]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_NOWAIT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d1fc2f5]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_SKIPLOCKED]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1966489a]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [FORCE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15606e5e]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b24e9d1]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6395f9c5]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55adf15]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ff4533]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b01b897]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bcd4e09]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e299b6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43f52628]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba2a5db]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f80e1bf]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ae8b7]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afc6556]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33d1001f]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37e7d72b]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94ab7bc]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83691a9]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62cbb7e7]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55a7fc13]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54b476e0]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534e49c1]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33556e65]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d91997]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6411e1e6]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f067c1d]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ae60ef]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c07c60]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 15:32:18 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 15:32:18 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c60bd5]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5baab0b3]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d86e715]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@795acbd3]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f435942]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41625731]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b56ae47]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647de0ad]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62292ef3]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c738067]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@170063cc]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ff84571]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40da8cb]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47d7095]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10f77dd5]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@146bc5f5]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bfde635]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@504f254a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@663b24ed]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c3501b2]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@386d864f]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a1817d]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2abe6f0b]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e35cbed]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6382173f]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba70534]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b8ff7c]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52822665]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214ae8e5]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a1936a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d32cf5]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32a8f94a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e495d6d]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4578bd0d]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@189195d3]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d064d22]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69b08f26]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d9ba0ce]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22ab8d02]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dda008a]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@207e7fa8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c336b9]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7efe683e]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30ed49db]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2982d781]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2430e517]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28c8a48b]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72b193d8]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d306cd0]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e0b203c]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ddb4170]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3343f4f7]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47e2863]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@564a330b]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@713d3873]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d759eef]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283d8812]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@370e7f4b]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46fd0da3]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c47076]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ce1a7d7]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28d16927]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66fe98b]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27896ef0]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@658c7b69]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd6f5e2]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70c4f666]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5e6b45]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d8f1e74]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26dd83c2]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fd36b9]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c88bc7a]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3681e3ba]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e51432d]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2e4418]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@157c468b]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c59ebad]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b5fd1df]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f745281]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76e08935]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@714dc105]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30582fc9]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8b070b]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51ba4965]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c35b9e9]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a080106]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb3015f]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d90d10e]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40b61173]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5aac2852]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@599663a1]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@595d3d35]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33bcc6d4]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1eddbba5]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b0254cc]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@307ff600]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@698270f7]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e6f69ad]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1490a95f]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5acdc7f3]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1daf4a8]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14edc73f]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5265eac]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d67c97d]
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a033743]
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:32:18 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:32:18 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 15:32:18 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 15:32:18 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 15:32:18 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 15:32:18 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@530e8022
[2019-06-05 15:32:18 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: 03ea17fa-7312-458d-889f-882edf8f9462 (<unnamed>)
[2019-06-05 15:32:18 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 15:32:18 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:32:19 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@109c09a3
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@21e9a72c}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@21e9a72c}

[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:19 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@47eef0d6}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@47eef0d6}

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@47eef0d6}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@21e9a72c}

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@21e9a72c}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@47eef0d6}

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@47eef0d6}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@47eef0d6}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@21e9a72c}

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@a240481
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@47eef0d6}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@21e9a72c}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@47eef0d6}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@a240481}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@21e9a72c}

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@21e9a72c}

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@47eef0d6
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@5c502771
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@47eef0d6}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@47eef0d6}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@5c502771}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@21e9a72c}

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@21e9a72c
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@21e9a72c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:32:20 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 15:32:20 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 15:32:20 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 15:32:20 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 15:32:20 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 15:32:20 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
[2019-06-05 15:32:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b718c05, org.springframework.security.web.context.SecurityContextPersistenceFilter@210aa68, org.springframework.security.web.header.HeaderWriterFilter@41a9dd14, org.springframework.security.web.authentication.logout.LogoutFilter@803f563, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5d0239eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a8befba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7514b5e3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79380b55, org.springframework.security.web.session.SessionManagementFilter@73fa762d, org.springframework.security.web.access.ExceptionTranslationFilter@7f762ec6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70548cf6]
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:32:21 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [148] [DEBUG] Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [180] [DEBUG] Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [194] [DEBUG] Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [53] [DEBUG] Trying to load META-INF/validation.xml via user class loader
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:32:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@193d6e64: startup date [Wed Jun 05 15:32:14 CEST 2019]; root of context hierarchy
[2019-06-05 15:32:21 ] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] [main] [235] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/updateuser/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.updateUser(int,dawid.app.user.User)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/delete/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.deleteUser(int)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/edit/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.getUserToEdit(int,org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminMainPage()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminAllUsersPage(int,org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/search/{searchWord}/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openSearchUsersPage(java.lang.String,int,org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/importusers]}" onto public java.lang.String dawid.app.admin.AdminPageController.showUploadPageFromXML(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/upload]}" onto public java.lang.String dawid.app.admin.AdminPageController.importUsersFromXML(org.springframework.web.multipart.MultipartFile)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/error]}" onto public java.lang.String dawid.app.mainController.ErrorPageController.showErrorPage()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/login]}" onto public java.lang.String dawid.app.mainController.LoginPageController.showLoginPage()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || /index]}" onto public java.lang.String dawid.app.mainController.MainPageController.showMainPage(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/comment]}" onto public java.lang.String dawid.app.post.PostController.commentView(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addnewpost]}" onto public java.lang.String dawid.app.post.PostController.addNewPost(dawid.app.post.Post,org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addpost]}" onto public java.lang.String dawid.app.post.PostController.addComment(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profil]}" onto public java.lang.String dawid.app.user.ProfilController.showUserProfilePage(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updatepass]}" onto public java.lang.String dawid.app.user.ProfilController.changeUSerPassword(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updateprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserDataAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwoend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwoEnd(dawid.app.user.userProfile.UserProfile,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthree]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepthree(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthreeend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepThreeEnd(dawid.app.user.userProfile.UserProfile,dawid.app.user.photo.Photo,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourth]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourth(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourthend]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourthend(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editpassword]}" onto public java.lang.String dawid.app.user.ProfilController.editUserPassword(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserData(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwo]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwo(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/changephoto]}" onto public java.lang.String dawid.app.user.ProfilController.changePhoto(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/register]}" onto public java.lang.String dawid.app.user.RegisterController.registerForm(org.springframework.ui.Model)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/activatelink/{activationCode}]}" onto public java.lang.String dawid.app.user.RegisterController.activateAccount(java.lang.String,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/adduser]}" onto public java.lang.String dawid.app.user.RegisterController.registerAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [main] [288] [INFO ] Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[2019-06-05 15:32:21 ] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [main] [61] [INFO ] Adding welcome page template: index
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@193d6e64: startup date [Wed Jun 05 15:32:14 CEST 2019]; root of context hierarchy
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[2019-06-05 15:32:21 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:32:21 ] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] [main] [86] [INFO ] 

Using generated security password: f47e8578-359d-4252-a7f3-f23cc34d32c5

[2019-06-05 15:32:21 ] [org.springframework.jmx.export.MBeanExporter] [main] [433] [INFO ] Registering beans for JMX exposure on startup
[2019-06-05 15:32:21 ] [org.springframework.jmx.export.MBeanExporter] [main] [895] [INFO ] Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-06-05 15:32:21 ] [org.springframework.jmx.export.MBeanExporter] [main] [668] [INFO ] Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[2019-06-05 15:32:21 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:32:21 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Using a shared selector for servlet write/read
[2019-06-05 15:32:21 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [206] [INFO ] Tomcat started on port(s): 8080 (http) with context path ''
[2019-06-05 15:32:21 ] [org.springframework.boot.StartupInfoLogger] [main] [59] [INFO ] Started Application in 8.202 seconds (JVM running for 12.58)
[2019-06-05 15:35:59 ] [org.springframework.context.support.AbstractApplicationContext] [Thread-4] [993] [INFO ] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@193d6e64: startup date [Wed Jun 05 15:32:14 CEST 2019]; root of context hierarchy
[2019-06-05 15:35:59 ] [org.springframework.jmx.export.MBeanExporter] [Thread-4] [451] [INFO ] Unregistering JMX-exposed beans on shutdown
[2019-06-05 15:35:59 ] [org.springframework.jmx.support.MBeanRegistrationSupport] [Thread-4] [185] [INFO ] Unregistering JMX-exposed beans
[2019-06-05 15:35:59 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-4] [597] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:35:59 ] [org.hibernate.internal.SessionFactoryImpl] [Thread-4] [741] [DEBUG] HHH000031: Closing
[2019-06-05 15:35:59 ] [org.hibernate.engine.spi.CascadeStyles] [Thread-4] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[2019-06-05 15:35:59 ] [org.hibernate.service.internal.AbstractServiceRegistryImpl] [Thread-4] [414] [DEBUG] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2019-06-05 15:35:59 ] [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] [Thread-4] [295] [DEBUG] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2019-06-05 15:35:59 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [381] [INFO ] HikariPool-1 - Shutdown initiated...
[2019-06-05 15:35:59 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [383] [INFO ] HikariPool-1 - Shutdown completed.
[2019-06-05 15:36:08 ] [org.springframework.boot.StartupInfoLogger] [main] [50] [INFO ] Starting Application on Dawid-PC with PID 6608 (D:\SocialMedia\appSocialNetwork\target\classes started by Dawid in D:\SocialMedia\appSocialNetwork)
[2019-06-05 15:36:08 ] [org.springframework.boot.SpringApplication] [main] [662] [INFO ] No active profile set, falling back to default profiles: default
[2019-06-05 15:36:08 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [background-preinit] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:36:08 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:36:08 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:36:08 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:36:08 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:36:08 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:36:08 ] [org.springframework.context.support.AbstractApplicationContext] [main] [590] [INFO ] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e186afe: startup date [Wed Jun 05 15:36:08 CEST 2019]; root of context hierarchy
[2019-06-05 15:36:09 ] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] [main] [153] [INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-06-05 15:36:09 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e81fe859] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:09 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$80cdb093] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:09 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:09 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@61fd9e60' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:09 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a5a25345] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:09 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:09 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$67a0358b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:10 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [91] [INFO ] Tomcat initialized with port(s): 8080 (http)
[2019-06-05 15:36:10 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Initializing ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:36:10 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting service [Tomcat]
[2019-06-05 15:36:10 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting Servlet Engine: Apache Tomcat/8.5.32
[2019-06-05 15:36:10 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;.]
[2019-06-05 15:36:10 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[2019-06-05 15:36:10 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] Initializing Spring embedded WebApplicationContext
[2019-06-05 15:36:10 ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [localhost-startStop-1] [285] [INFO ] Root WebApplicationContext: initialization completed in 2484 ms
[2019-06-05 15:36:10 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-06-05 15:36:10 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-06-05 15:36:10 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-06-05 15:36:10 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'requestContextFilter' to: [/*]
[2019-06-05 15:36:10 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-06-05 15:36:10 ] [org.springframework.boot.web.servlet.ServletRegistrationBean] [localhost-startStop-1] [187] [INFO ] Servlet dispatcherServlet mapped to [/]
[2019-06-05 15:36:10 ] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2019-06-05 15:36:11 ] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2019-06-05 15:36:11 ] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] [361] [INFO ] Building JPA container EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:36:11 ] [org.hibernate.jpa.internal.util.LogHelper] [main] [102] [DEBUG] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@22e2cda2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SocialMedia/appSocialNetwork/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		dawid.app.post.comment.Comment
		dawid.app.post.Post
		dawid.app.user.group.AllGroup
		dawid.app.user.photo.Photo
		dawid.app.user.Role
		dawid.app.user.User
		dawid.app.user.userProfile.FreeTime
		dawid.app.user.userProfile.PhysicalActivity
		dawid.app.user.userProfile.UserProfile]
	Mapping files names []
	Properties []
[2019-06-05 15:36:11 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2019-06-05 15:36:11 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2019-06-05 15:36:11 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2019-06-05 15:36:11 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2019-06-05 15:36:11 ] [org.hibernate.Version] [main] [45] [INFO ] HHH000412: Hibernate Core {5.2.17.Final}
[2019-06-05 15:36:11 ] [org.hibernate.cfg.Environment] [main] [213] [INFO ] HHH000206: hibernate.properties not found
[2019-06-05 15:36:11 ] [org.hibernate.service.spi.ServiceBinding] [main] [68] [DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2019-06-05 15:36:11 ] [org.hibernate.cache.internal.RegionFactoryInitiator] [main] [75] [DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2019-06-05 15:36:11 ] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [66] [INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@4e2ac6e9
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@4e2ac6e9
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4e2ac6e9
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1958c295
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@41837582
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@69c9f2b0
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@6227c5fc
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@6227c5fc
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6227c5fc
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@3d37b7f6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@3d37b7f6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d37b7f6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@2cbf79eb
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@2cbf79eb
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2cbf79eb
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@31ae20b6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@31ae20b6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@31ae20b6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@2ef521c6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@2ef521c6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef521c6
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@17010ea8
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@17010ea8
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@17010ea8
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d12a512
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d12a512
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e8f443d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e8f443d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration string -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2427362c
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f34fe7
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration url -> org.hibernate.type.UrlType@1e4a2308
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e4a2308
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@796e8fc5
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@796e8fc5
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@31d541be
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31d541be
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fa94180
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fa94180
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a8bf4ce
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a8bf4ce
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@dd12249
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@dd12249
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3dff42eb
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3dff42eb
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6d85ecd3
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6d85ecd3
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9b49bff
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9b49bff
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration date -> org.hibernate.type.DateType@1a9ff03
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a9ff03
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration time -> org.hibernate.type.TimeType@1b891a62
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b891a62
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@1f5f39d1
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f5f39d1
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f5f39d1
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7bb02e1d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@626ef4ba
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@626ef4ba
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@626ef4ba
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5dbe249f
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@3dc35c14
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dc35c14
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@1fab3c3
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1fab3c3
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@4eacb5d5
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4eacb5d5
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration class -> org.hibernate.type.ClassType@75105895
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75105895
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@186de65
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@186de65
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d1948da
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@c4fff1d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@c4fff1d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@c4fff1d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@388ea97f
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@388ea97f
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@388ea97f
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@539bc15c
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration image -> org.hibernate.type.ImageType@dded44e
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@10e5bd1a
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@10e5bd1a
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@10e5bd1a
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a9f4158
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a9f4158
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a9f4158
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration text -> org.hibernate.type.TextType@68754cc0
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@2597950d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@37137c9
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37137c9
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71677cde
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@39cf8fe0
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39cf8fe0
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@5b3a2091
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b3a2091
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21723ad7
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@302d7535
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@fabeec1
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@1fdd1362
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1fdd1362
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@647259cd
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@13c31022
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61de70ab
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c0687b9
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a4c15c5
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18556ae
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@134c351d
[2019-06-05 15:36:11 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5bbf4382
[2019-06-05 15:36:12 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [72] [DEBUG] Database ->
       name : MySQL
    version : 5.5.5-10.1.38-MariaDB
      major : 5
      minor : 5
[2019-06-05 15:36:12 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [83] [DEBUG] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [389] [DEBUG] JDBC version : 4.0
[2019-06-05 15:36:12 ] [org.hibernate.dialect.Dialect] [main] [157] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2019-06-05 15:36:12 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [117] [DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[2019-06-05 15:36:12 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [191] [DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [84] [DEBUG]     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:36:12 ] [org.hibernate.boot.model.relational.Namespace] [main] [47] [DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.User
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name User
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.User on table user
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=activation_code, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property activationCode with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:activationCode]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for activationCode
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property activationCode
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=active, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property active with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:active]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for active
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property active
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property email with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:email]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for email
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property email
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.groups
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groups
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property password with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:password]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for password
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property password
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.roles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property roles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.Post
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Post
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.Post on table post
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property content with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:content]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for content
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property content
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupId with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:groupId]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:photoId]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postDate with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postDate]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_title, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postTitle with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postTitle]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postTitle
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postTitle
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postUserId with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postUserId]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postUserId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postUserId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userDislike with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userDislike]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userDislike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userDislike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_like, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userLike with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userLike]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userLike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userLike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.FreeTime on table free_time
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:name]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.PhysicalActivity on table physical_activity
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:name]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.group.AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.group.AllGroup on table all_group
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupID with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:groupID]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupID
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupID
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_physical_activities, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property CommonPhysicalActivities with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:CommonPhysicalActivities]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_city, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonCity with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonCity]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonCity
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonCity
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_free_time, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonFreeTime with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonFreeTime]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:name]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.Role
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Role
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.Role on table role
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property role with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:role]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for role
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property role
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.comment.Comment
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Comment
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.comment.Comment on table comment
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_content, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentContent with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentContent]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentContent
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentContent
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDate with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDate]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDislike with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDislike]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_like, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentLike with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentLike]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentLike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentLike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_title, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentTitle with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentTitle]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentUserId with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentUserId]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:photoId]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postId with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:postId]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.photo.Photo
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Photo
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.photo.Photo on table photo
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=data, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property data with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:data]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for data
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property data
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:description]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:name]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=profile_photo, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property profilePhoto with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:profilePhoto]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userId with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:userId]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.UserProfile on table user_profile
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:id]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=all_groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='allGroups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property allGroups
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=birth_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property birthDate with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:birthDate]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for birthDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property birthDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=characters, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property character with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:character]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for character
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property character
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=city, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property city with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:city]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for city
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property city
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:description]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=free_times_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='freeTimes_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='free_time_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=hobby, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property hobby with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:hobby]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for hobby
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property hobby
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=language, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property language with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:language]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for language
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property language
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property lastName with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:lastName]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for lastName
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property lastName
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:name]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=number, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property number with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:number]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for number
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property number
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=physical_activities_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physicalActivities_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physical_activity_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property sex with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:sex]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for sex
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property sex
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=who_search, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property whoSearch with lazy=false
[2019-06-05 15:36:12 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:whoSearch]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for activationCode
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for active
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for email
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for password
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for content
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postTitle
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postUserId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userDislike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userLike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupID
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonCity
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for role
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentContent
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentLike
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for data
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userId
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for birthDate
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for character
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for city
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for hobby
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for language
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for lastName
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for number
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for sex
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [all_group]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [comment_id] to be non-null as it is part of the primary key for table [comment]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [photo_id] to be non-null as it is part of the primary key for table [photo]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: physical_activity_id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: free_time_id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: group_id, element: user_id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.roles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.roles
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: role_id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.groups
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.groups
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:36:12 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: free_time_id, element: user_profile_id
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: physical_activity_id, element: user_profile_id
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 15:36:12 ] [org.hibernate.internal.SessionFactoryImpl] [main] [199] [DEBUG] Building session factory
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [69] [DEBUG] SessionFactory name : null
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [70] [DEBUG] Automatic flush during beforeCompletion(): enabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [71] [DEBUG] Automatic session close at end of transaction: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [73] [DEBUG] Statistics: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [75] [DEBUG] Deleted entity synthetic identifier rollback: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [76] [DEBUG] Default entity-mode: pojo
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [77] [DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [78] [DEBUG] Allow initialization of lazy state outside session : disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [80] [DEBUG] Using BatchFetchStyle : LEGACY
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [81] [DEBUG] Default batch fetch size: -1
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [82] [DEBUG] Maximum outer join fetch depth: 2
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [83] [DEBUG] Default null ordering: NONE
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [84] [DEBUG] Order SQL updates by primary key: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [85] [DEBUG] Order SQL inserts for batching: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [87] [DEBUG] multi-tenancy strategy : NONE
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [89] [DEBUG] JTA Track by Thread: enabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [91] [DEBUG] Query language substitutions: {}
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [92] [DEBUG] JPA query language strict compliance: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [93] [DEBUG] Named query checking : enabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [95] [DEBUG] Second-level cache: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [96] [DEBUG] Second-level query cache: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [97] [DEBUG] Second-level query cache factory: null
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [98] [DEBUG] Second-level cache region prefix: null
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [99] [DEBUG] Optimize second-level cache for minimal puts: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [100] [DEBUG] Structured second-level cache entries: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [101] [DEBUG] Second-level cache direct-reference entries: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [102] [DEBUG] Automatic eviction of collection cache: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [104] [DEBUG] JDBC batch size: 15
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [105] [DEBUG] JDBC batch updates for versioned data: enabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [106] [DEBUG] Scrollable result sets: enabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [107] [DEBUG] Wrap result sets: disabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [108] [DEBUG] JDBC3 getGeneratedKeys(): enabled
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [109] [DEBUG] JDBC result set fetch size: null
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [110] [DEBUG] Connection release mode: ON_CLOSE
[2019-06-05 15:36:12 ] [org.hibernate.cfg.Settings] [main] [111] [DEBUG] Generate SQL with comments: disabled
[2019-06-05 15:36:12 ] [org.hibernate.internal.SessionFactoryImpl] [main] [257] [DEBUG] Session factory constructed with filter configurations : {}
[2019-06-05 15:36:12 ] [org.hibernate.internal.SessionFactoryImpl] [main] [258] [DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, user.country.format=PL, maven.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\../conf, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher spring-boot:run, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6f8e8ef2, javax.persistence.sharedCache.mode=UNSPECIFIED, maven.home=C:\Program Files\Java\apache-maven-3.6.0\bin\.., sun.cpu.endian=little, user.home=C:\Users\Dawid, user.language=en, sun.stderr.encoding=cp852, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, file.separator=\, sun.stdout.encoding=cp852, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_201-b09, user.name=Dawid, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, guice.disable.misplaced.annotation.check=true, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dawid\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\Dawid\AppData\Local\Temp\tomcat.106106658359656351.8080, java.version=1.8.0_201, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=D:\SocialMedia\appSocialNetwork, os.arch=amd64, maven.multiModuleProjectDirectory=D:\SocialMedia\appSocialNetwork, PID=6608, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=pl, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, catalina.base=C:\Users\Dawid\AppData\Local\Temp\tomcat.106106658359656351.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@519ec1ae, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.201-b09, classworlds.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\..\bin\m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, library.jansi.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\lib\jansi-native, java.class.version=52.0}
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 15:36:12 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:36:12 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.secure.spi.JaccIntegrator] [main] [80] [DEBUG] Skipping JACC integration as it was not enabled
[2019-06-05 15:36:12 ] [org.hibernate.engine.spi.CascadeStyles] [main] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[2019-06-05 15:36:12 ] [org.hibernate.internal.SessionFactoryImpl] [main] [297] [DEBUG] Instantiated session factory
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 15:36:12 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (free_time_id, user_profile_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set user_profile_id=? where free_time_id=? and user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where free_time_id=? and user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (physical_activity_id, user_profile_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set user_profile_id=? where physical_activity_id=? and user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where physical_activity_id=? and user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (user_profile_id, physical_activity_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set physical_activity_id=? where user_profile_id=? and physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where user_profile_id=? and physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (user_profile_id, free_time_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set free_time_id=? where user_profile_id=? and free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where user_profile_id=? and free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.roles
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into user_role (user_id, role_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update user_role set role_id=? where user_id=? and role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from user_role where user_id=? and role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from user_role where user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (group_id, user_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set user_id=? where group_id=? and user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where group_id=? and user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.groups
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.User
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_id from user where user_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select user_.user_id, user_.activation_code as activati2_10_, user_.active as active3_10_, user_.email as email4_10_, user_.password as password5_10_ from user user_ where user_.user_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user (activation_code, active, email, password, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user set activation_code=?, active=?, email=?, password=? where user_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user where user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into user (activation_code, active, email, password) values (?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73fec5a5]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6096b495]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e7373]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@149a6159]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62294d52]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [NONE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb52a0e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18dd922d]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55705377]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7737e68d]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b0249cb]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3af67c]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@204d6104]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795828d7]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1139a896]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e68ed7f]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e6f0f7]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61611c3a]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68eb167c]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ab832de]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b6179b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ddf57fb]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26021360]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72dcd2f4]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cb23db]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7387a10]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3197e084]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79c1f5a9]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d6de87b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33f0bc92]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a24493]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [FORCE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26b88f93]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4266a329]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22f12a]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@628432aa]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b83f08]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b0ad9d]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@115ec639]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62edfb65]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22f17ee0]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15b724b1]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@723f5730]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@562bdbaf]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a95ef77]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@729bb1c2]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@282379e4]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20dd29ec]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5adc3e08]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@690390ee]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2058566b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d93e9b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ace70d6]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4db6ef13]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65b33dd8]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c52a978]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b466474]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.Post
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select post_id from post where post_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select post_.post_id, post_.content as content2_8_, post_.group_id as group_id3_8_, post_.photo_id as photo_id4_8_, post_.post_date as post_dat5_8_, post_.post_title as post_tit6_8_, post_.post_user_id as post_use7_8_, post_.user_dislike as user_dis8_8_, post_.user_like as user_lik9_8_ from post post_ where post_.post_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like, post_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update post set content=?, group_id=?, photo_id=?, post_date=?, post_title=?, post_user_id=?, user_dislike=?, user_like=? where post_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from post where post_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc24f8b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [NONE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee47709]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4924ac4e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3afc4ebe]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_NOWAIT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5825d91f]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_SKIPLOCKED]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e3c3008]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [FORCE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e77c2]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5790aa1b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_WRITE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f3259f9]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3efbbe09]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6710146b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.FreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select free_time_id from free_time where free_time_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select freetime_.free_time_id, freetime_.free_time_name as free_tim2_2_ from free_time freetime_ where freetime_.free_time_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into free_time (free_time_name, free_time_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update free_time set free_time_name=? where free_time_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from free_time where free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into free_time (free_time_name) values (?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20bae298]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4eadb725]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d942b82]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [NONE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a4db48a]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a0996d6]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fd702e]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11936f9f]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@eeff154]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ee9ca7]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798bfad2]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@535fbbf8]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d31e90]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_NOWAIT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a833b2]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@226e7af3]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e05d7b0]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_SKIPLOCKED]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d835c61]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a401c1]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44dcfeb2]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [FORCE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fbc21c]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@108d304a]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33076587]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e31aad9]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fc4eee4]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37e79fc6]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_WRITE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e39c81]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ee0c82f]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f27d9a]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dbdec31]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ebac6c0]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18227620]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a4cdd71]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7aaf04d3]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b7fed0]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select physical_activity_id from physical_activity where physical_activity_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select physicalac_.physical_activity_id, physicalac_.physical_activity_name as physical2_6_ from physical_activity physicalac_ where physicalac_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into physical_activity (physical_activity_name, physical_activity_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update physical_activity set physical_activity_name=? where physical_activity_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from physical_activity where physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into physical_activity (physical_activity_name) values (?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d5c02c2]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5790bd15]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@191f9849]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [NONE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4488c3ba]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ea6d9b9]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9ed7f4]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79894e2e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7886a97a]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75aaf0e9]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4661384c]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@759401c2]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@579b9a21]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_NOWAIT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18776bc6]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5027dbdf]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5be60968]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_SKIPLOCKED]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@786c6089]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51518769]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a177962]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [FORCE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21643e81]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@714b3dcb]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701696e9]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70863e5c]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10d07986]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54b514ab]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_WRITE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1580b4bf]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5376f1da]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9ab753]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fafdb53]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56a7f66c]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7df3c4]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d49d05b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6faa93ab]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0aae49]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.group.AllGroup
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select group_id from all_group where group_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select allgroup_.group_id, allgroup_.common_physical_activities as common_p2_0_, allgroup_.common_city as common_c3_0_, allgroup_.common_free_time as common_f4_0_, allgroup_.name as name5_0_ from all_group allgroup_ where allgroup_.group_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into all_group (common_physical_activities, common_city, common_free_time, name, group_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update all_group set common_physical_activities=?, common_city=?, common_free_time=?, name=? where group_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from all_group where group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into all_group (common_physical_activities, common_city, common_free_time, name) values (?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f62689b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a8b91e5]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@738a0e1b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [NONE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f309641]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33b23331]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106b098a]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b820758]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381ce72b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f39efb]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba0ff7a]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7559ad41]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1931e157]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_NOWAIT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5769624]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ef98b0b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1854e8da]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_SKIPLOCKED]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29228a42]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d4cd479]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7261e732]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [FORCE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2c13a6]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@160f7c4c]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6baa51c8]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44b4de38]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@485a245d]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71c7088f]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_WRITE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13605d91]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79a541b3]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306fad78]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2172e231]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35433fb1]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@788a500c]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e5f4646]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4641517f]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ce1638b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.Role
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select role_id from role where role_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select role_.role_id, role_.role as role2_9_ from role role_ where role_.role_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into role (role, role_id) values (?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update role set role=? where role_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from role where role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into role (role) values (?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58386527]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [NONE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64342f8e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a4b9a7]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ebf859]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_NOWAIT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec8a86c]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_SKIPLOCKED]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f4c03f]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [FORCE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19e81a97]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2939cf04]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40df2394]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63480314]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b01a0b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44375f4d]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f89b02f]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@133cb627]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34c666f6]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@552ac660]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a521e7]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce6e85]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d1a3cb]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2fa36e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71be0ff6]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a45ba3d]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57779497]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297ac8dd]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b1c3de5]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62dbac14]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e722a66]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29ace75c]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ca3c8c5]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36133548]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186bfd57]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12cb5d2d]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@181580ec]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 15:36:12 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 15:36:12 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1462ba6]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@700e857c]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5826f69b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@688ded22]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f5d7001]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bfc2df3]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4819c39]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3629576]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@da216d2]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a230b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1214dff1]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf25de8]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51fbc622]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57de56d]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31224964]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60a44ebd]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a989949]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29d29817]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cabe67f]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e3888f1]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40a41aae]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0b208d]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2435cb7c]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4424d43e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@608f9b7f]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2e9cf2]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cac8c0]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632d69e3]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe5529a]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5708cc8a]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f62d5f9]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ac62d0d]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16cde385]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b0114a]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e34c158]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@752123d6]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b344da6]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63e27399]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f21c3a0]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a54b7bf]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73a4882e]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a4378]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1207ac7e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a2318aa]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc3bd15]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4408884f]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@213aaf68]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37e15ad]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75232bc2]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e99fd9]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72fc9108]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eedd9ae]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27439afd]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47801ac1]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5162a7e8]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@213224c3]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1dc66a]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19952044]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29310b89]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d6ba653]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6451ff45]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5476748b]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@753a50cf]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e33905]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7916b648]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e0d2d8d]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32ca0c58]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b4f329]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7adcb741]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0a9cd2]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc0e1e7]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2105acac]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38704852]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10174962]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4da2a9e7]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41ce0c33]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc6ee80]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21a13bd]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eb71a28]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5aa5172d]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b2476b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16266645]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@740fdd6e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@368cf67c]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c13fc3]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c133878]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3311e]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f6bfd24]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a762296]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fb31958]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1582e271]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59d7fad4]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bc40af5]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59ebda01]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2283e06b]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a9c6bf1]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a15671]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@270cf836]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a832078]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6659cf75]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ea88faf]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ea51d04]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d067248]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@593871de]
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c2cc83]
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 15:36:12 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 15:36:12 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 15:36:12 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 15:36:12 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 15:36:12 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 15:36:12 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31374c13
[2019-06-05 15:36:12 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: 8ec3bf8c-fd33-4446-aee3-298a2bb1fd18 (<unnamed>)
[2019-06-05 15:36:12 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 15:36:12 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:36:13 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@24758cce
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@7ae44e35}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7ae44e35}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@6f16e68f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@6f16e68f}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@6f16e68f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7ae44e35}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@7ae44e35}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@6f16e68f}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@6f16e68f}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@6f16e68f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7ae44e35}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@1a9ff03
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@6f16e68f}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@7ae44e35}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@6f16e68f}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@1a9ff03}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7ae44e35}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@7ae44e35}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@6f16e68f
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@c4fff1d
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@6f16e68f}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@6f16e68f}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@c4fff1d}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@7ae44e35}

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@7ae44e35
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@7ae44e35}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:13 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 15:36:14 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 15:36:14 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 15:36:14 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 15:36:14 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 15:36:14 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 15:36:14 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
[2019-06-05 15:36:14 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d6b295f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a01db9c, org.springframework.security.web.header.HeaderWriterFilter@3b370538, org.springframework.security.web.authentication.logout.LogoutFilter@6359ec94, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1c952b9d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50990bf0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11be7443, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22084031, org.springframework.security.web.session.SessionManagementFilter@3aa0451c, org.springframework.security.web.access.ExceptionTranslationFilter@5ee774e7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@72d0072b]
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:36:14 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [148] [DEBUG] Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [180] [DEBUG] Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [194] [DEBUG] Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [53] [DEBUG] Trying to load META-INF/validation.xml via user class loader
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:36:14 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:36:14 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:36:14 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e186afe: startup date [Wed Jun 05 15:36:08 CEST 2019]; root of context hierarchy
[2019-06-05 15:36:15 ] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] [main] [235] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminMainPage()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminAllUsersPage(int,org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/search/{searchWord}/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openSearchUsersPage(java.lang.String,int,org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/importusers]}" onto public java.lang.String dawid.app.admin.AdminPageController.showUploadPageFromXML(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/upload]}" onto public java.lang.String dawid.app.admin.AdminPageController.importUsersFromXML(org.springframework.web.multipart.MultipartFile)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/updateuser/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.updateUser(int,dawid.app.user.User)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/delete/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.deleteUser(int)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/edit/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.getUserToEdit(int,org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/error]}" onto public java.lang.String dawid.app.mainController.ErrorPageController.showErrorPage()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/login]}" onto public java.lang.String dawid.app.mainController.LoginPageController.showLoginPage()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || /index]}" onto public java.lang.String dawid.app.mainController.MainPageController.showMainPage(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addpost]}" onto public java.lang.String dawid.app.post.PostController.addComment(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/comment]}" onto public java.lang.String dawid.app.post.PostController.commentView(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addnewpost]}" onto public java.lang.String dawid.app.post.PostController.addNewPost(dawid.app.post.Post,org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editpassword]}" onto public java.lang.String dawid.app.user.ProfilController.editUserPassword(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserData(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwo]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwo(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/changephoto]}" onto public java.lang.String dawid.app.user.ProfilController.changePhoto(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profil]}" onto public java.lang.String dawid.app.user.ProfilController.showUserProfilePage(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updatepass]}" onto public java.lang.String dawid.app.user.ProfilController.changeUSerPassword(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updateprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserDataAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwoend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwoEnd(dawid.app.user.userProfile.UserProfile,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthree]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepthree(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthreeend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepThreeEnd(dawid.app.user.userProfile.UserProfile,dawid.app.user.photo.Photo,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourth]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourth(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourthend]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourthend(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/register]}" onto public java.lang.String dawid.app.user.RegisterController.registerForm(org.springframework.ui.Model)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/activatelink/{activationCode}]}" onto public java.lang.String dawid.app.user.RegisterController.activateAccount(java.lang.String,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/adduser]}" onto public java.lang.String dawid.app.user.RegisterController.registerAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [main] [288] [INFO ] Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[2019-06-05 15:36:15 ] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [main] [61] [INFO ] Adding welcome page template: index
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e186afe: startup date [Wed Jun 05 15:36:08 CEST 2019]; root of context hierarchy
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[2019-06-05 15:36:15 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 15:36:15 ] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] [main] [86] [INFO ] 

Using generated security password: 48c7faa9-685f-4596-8c63-3dafe2541bc0

[2019-06-05 15:36:15 ] [org.springframework.jmx.export.MBeanExporter] [main] [433] [INFO ] Registering beans for JMX exposure on startup
[2019-06-05 15:36:15 ] [org.springframework.jmx.export.MBeanExporter] [main] [895] [INFO ] Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-06-05 15:36:15 ] [org.springframework.jmx.export.MBeanExporter] [main] [668] [INFO ] Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[2019-06-05 15:36:15 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:36:15 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Using a shared selector for servlet write/read
[2019-06-05 15:36:15 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [206] [INFO ] Tomcat started on port(s): 8080 (http) with context path ''
[2019-06-05 15:36:15 ] [org.springframework.boot.StartupInfoLogger] [main] [59] [INFO ] Started Application in 8.077 seconds (JVM running for 14.8)
[2019-06-05 15:36:17 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-1] [180] [INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-06-05 15:36:17 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-1] [494] [INFO ] FrameworkServlet 'dispatcherServlet': initialization started
[2019-06-05 15:36:17 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-1] [509] [INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
[2019-06-05 15:36:21 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-6] [182] [ERROR] Servlet.service() for servlet [jsp] threw exception
javax.servlet.jsp.JspTagException: No message found under code 'post.content' for locale 'en_US'.
	at org.springframework.web.servlet.tags.MessageTag.doEndTag(MessageTag.java:293)
	at org.apache.jsp.page.jsp.addpost_jsp._jspx_meth_s_005fmessage_005f7(addpost_jsp.java:702)
	at org.apache.jsp.page.jsp.addpost_jsp._jspService(addpost_jsp.java:255)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:443)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:386)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:330)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:470)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:170)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 15:36:21 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-6] [182] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.jsp.JspTagException: No message found under code 'post.content' for locale 'en_US'.] with root cause
javax.servlet.jsp.JspTagException: No message found under code 'post.content' for locale 'en_US'.
	at org.springframework.web.servlet.tags.MessageTag.doEndTag(MessageTag.java:293)
	at org.apache.jsp.page.jsp.addpost_jsp._jspx_meth_s_005fmessage_005f7(addpost_jsp.java:702)
	at org.apache.jsp.page.jsp.addpost_jsp._jspService(addpost_jsp.java:255)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:443)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:386)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:330)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:470)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:170)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 15:36:45 ] [org.springframework.context.support.AbstractApplicationContext] [Thread-4] [993] [INFO ] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e186afe: startup date [Wed Jun 05 15:36:08 CEST 2019]; root of context hierarchy
[2019-06-05 15:36:45 ] [org.springframework.jmx.export.MBeanExporter] [Thread-4] [451] [INFO ] Unregistering JMX-exposed beans on shutdown
[2019-06-05 15:36:45 ] [org.springframework.jmx.support.MBeanRegistrationSupport] [Thread-4] [185] [INFO ] Unregistering JMX-exposed beans
[2019-06-05 15:36:45 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-4] [597] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:36:45 ] [org.hibernate.internal.SessionFactoryImpl] [Thread-4] [741] [DEBUG] HHH000031: Closing
[2019-06-05 15:36:45 ] [org.hibernate.engine.spi.CascadeStyles] [Thread-4] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[2019-06-05 15:36:45 ] [org.hibernate.service.internal.AbstractServiceRegistryImpl] [Thread-4] [414] [DEBUG] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2019-06-05 15:36:45 ] [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] [Thread-4] [295] [DEBUG] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2019-06-05 15:36:45 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [381] [INFO ] HikariPool-1 - Shutdown initiated...
[2019-06-05 15:36:45 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [383] [INFO ] HikariPool-1 - Shutdown completed.
[2019-06-05 15:36:51 ] [org.springframework.boot.StartupInfoLogger] [main] [50] [INFO ] Starting Application on Dawid-PC with PID 5356 (D:\SocialMedia\appSocialNetwork\target\classes started by Dawid in D:\SocialMedia\appSocialNetwork)
[2019-06-05 15:36:51 ] [org.springframework.boot.SpringApplication] [main] [662] [INFO ] No active profile set, falling back to default profiles: default
[2019-06-05 15:36:51 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [background-preinit] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 15:36:51 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 15:36:51 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 15:36:51 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 15:36:51 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 15:36:51 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 15:36:51 ] [org.springframework.context.support.AbstractApplicationContext] [main] [590] [INFO ] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@432d2657: startup date [Wed Jun 05 15:36:51 CEST 2019]; root of context hierarchy
[2019-06-05 15:36:54 ] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] [main] [153] [INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-06-05 15:36:54 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e494f9a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:54 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7d42c1dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:54 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:54 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6475cbc7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:54 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a217648f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:54 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:54 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$641546d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 15:36:54 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [91] [INFO ] Tomcat initialized with port(s): 8080 (http)
[2019-06-05 15:36:54 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Initializing ProtocolHandler ["http-nio-8080"]
[2019-06-05 15:36:54 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting service [Tomcat]
[2019-06-05 15:36:54 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting Servlet Engine: Apache Tomcat/8.5.32
[2019-06-05 15:36:54 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;.]
[2019-06-05 15:36:55 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[2019-06-05 15:36:55 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] Initializing Spring embedded WebApplicationContext
[2019-06-05 15:36:55 ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [localhost-startStop-1] [285] [INFO ] Root WebApplicationContext: initialization completed in 3388 ms
[2019-06-05 15:36:55 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-06-05 15:36:55 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-06-05 15:36:55 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-06-05 15:36:55 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'requestContextFilter' to: [/*]
[2019-06-05 15:36:55 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-06-05 15:36:55 ] [org.springframework.boot.web.servlet.ServletRegistrationBean] [localhost-startStop-1] [187] [INFO ] Servlet dispatcherServlet mapped to [/]
[2019-06-05 15:36:55 ] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2019-06-05 15:36:55 ] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2019-06-05 15:36:55 ] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] [361] [INFO ] Building JPA container EntityManagerFactory for persistence unit 'default'
[2019-06-05 15:36:55 ] [org.hibernate.jpa.internal.util.LogHelper] [main] [102] [DEBUG] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@2bd6a565
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SocialMedia/appSocialNetwork/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		dawid.app.post.comment.Comment
		dawid.app.post.Post
		dawid.app.user.group.AllGroup
		dawid.app.user.photo.Photo
		dawid.app.user.Role
		dawid.app.user.User
		dawid.app.user.userProfile.FreeTime
		dawid.app.user.userProfile.PhysicalActivity
		dawid.app.user.userProfile.UserProfile]
	Mapping files names []
	Properties []
[2019-06-05 15:36:55 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2019-06-05 15:36:55 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2019-06-05 15:36:55 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2019-06-05 15:36:55 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2019-06-05 15:36:55 ] [org.hibernate.Version] [main] [45] [INFO ] HHH000412: Hibernate Core {5.2.17.Final}
[2019-06-05 15:36:55 ] [org.hibernate.cfg.Environment] [main] [213] [INFO ] HHH000206: hibernate.properties not found
[2019-06-05 15:36:55 ] [org.hibernate.service.spi.ServiceBinding] [main] [68] [DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2019-06-05 15:36:56 ] [org.hibernate.cache.internal.RegionFactoryInitiator] [main] [75] [DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2019-06-05 15:36:56 ] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [66] [INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@32cee103
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@32cee103
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32cee103
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5219446
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@5afd00f6
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@28562853
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@334ffe10
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@334ffe10
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@334ffe10
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@3a53f06a
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@3a53f06a
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a53f06a
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@2daa5d61
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@2daa5d61
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2daa5d61
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@14366bca
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@14366bca
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14366bca
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@74288124
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@74288124
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@74288124
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@17c28c6b
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@17c28c6b
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@17c28c6b
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@3948427d
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@3948427d
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3948427d
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9142a68
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9142a68
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5fe8b747
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5fe8b747
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration string -> org.hibernate.type.StringType@43900497
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@43900497
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c46c410
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e6d0f62
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration url -> org.hibernate.type.UrlType@8c38ba
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@8c38ba
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@384253a6
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@384253a6
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@1a881f7
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a881f7
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eb9c449
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eb9c449
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3eae7ec8
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3eae7ec8
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ef0cf31
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ef0cf31
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7dd9e79f
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7dd9e79f
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@71ed394a
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@71ed394a
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79de9d9f
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79de9d9f
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration date -> org.hibernate.type.DateType@d8eb256
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@d8eb256
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration time -> org.hibernate.type.TimeType@760e22f0
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@760e22f0
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@50afcbc
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50afcbc
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50afcbc
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6574e37f
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@470db181
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@470db181
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@470db181
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3958e468
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@447d7b71
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@447d7b71
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@6d289180
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d289180
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@5acddf1c
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5acddf1c
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration class -> org.hibernate.type.ClassType@1367b4bf
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1367b4bf
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@82853b4
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@82853b4
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@834d1ac
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@6218ecce
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@6218ecce
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@6218ecce
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@67e04609
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@67e04609
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@67e04609
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@99bedb1
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration image -> org.hibernate.type.ImageType@3be5da52
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@2f105431
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@2f105431
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@2f105431
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@43a86f82
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@43a86f82
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@43a86f82
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration text -> org.hibernate.type.TextType@34152da9
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@54cf8ddc
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@3f6af017
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f6af017
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21e550a5
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@7ce7e43a
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7ce7e43a
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@7ece1d05
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7ece1d05
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1c52d2c9
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@668dec7b
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@2bf62b3c
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@63939507
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@63939507
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4865d5cd
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a14a6b
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a97dfb3
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@190141f9
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fac34a9
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42e3db25
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@569dee8d
[2019-06-05 15:36:56 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4580732e
[2019-06-05 15:36:56 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [72] [DEBUG] Database ->
       name : MySQL
    version : 5.5.5-10.1.38-MariaDB
      major : 5
      minor : 5
[2019-06-05 15:36:56 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [83] [DEBUG] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[2019-06-05 15:36:56 ] [org.jboss.logging.DelegatingBasicLogger] [main] [389] [DEBUG] JDBC version : 4.0
[2019-06-05 15:36:56 ] [org.hibernate.dialect.Dialect] [main] [157] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2019-06-05 15:36:56 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [117] [DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[2019-06-05 15:36:56 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [191] [DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [84] [DEBUG]     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 15:36:56 ] [org.hibernate.boot.model.relational.Namespace] [main] [47] [DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.User
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name User
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.User on table user
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:id]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=activation_code, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property activationCode with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:activationCode]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for activationCode
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property activationCode
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=active, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property active with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:active]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for active
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property active
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property email with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:email]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for email
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property email
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.groups
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groups
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property password with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:password]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for password
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property password
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.roles
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property roles
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.Post
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Post
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.Post on table post
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:id]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property content with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:content]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for content
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property content
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupId with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:groupId]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupId
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupId
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:photoId]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_date, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postDate with lazy=false
[2019-06-05 15:36:56 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postDate]
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postDate
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postDate
[2019-06-05 15:36:56 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_title, insertable=true, updatable=true, unique=false}
[2019-06-05 15:36:56 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postTitle with lazy=false
