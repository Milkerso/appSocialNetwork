[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d63b4]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d6a747]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e9c1f6]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ac29682]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be0da48]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1e2205]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f1d8c4b]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cf21d7]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6940051]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad0713d]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd32762]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41370049]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@673d1981]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8cfe387]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33016165]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294ec212]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f00393]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61fb184]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c779294]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b1aa2e8]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d82f7f]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1b9f82]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ba7212]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4504626d]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e6d2578]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 16:38:19 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 16:38:19 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73228226]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ad8190c]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33ed6779]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54b9f090]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14099138]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ee3facc]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ed9ec6]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcbd5fb]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d7a0df]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e96052d]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d817709]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@407621cb]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@799ea042]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@174f7d31]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31d079ee]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c494a9f]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@208300d2]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12ae0225]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@190f6448]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f94c844]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a9cef4]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f45f0e]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e546487]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77e3c7d7]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1088fa0a]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d388b69]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5075ba15]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@394102b3]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecef73b]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a5ce5bf]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b393cdd]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12d775ae]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77e4abb6]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ac8d9e8]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6855c7b8]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4186a519]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f068388]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3928e3d7]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4df22786]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36989093]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7dc95f0b]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3812d3e]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f93e4df]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a7bc805]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1019eea9]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@506c4569]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128e3499]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f1ed2d]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9422dfc]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bb776b0]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bfb114]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@190a4112]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1988b675]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34e6d958]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48adf9c1]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e42317]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f030600]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a69a134]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b7d9f5]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f43f7e5]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b9fbc8c]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c48c8ca]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a56c2c7]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaaeeb7]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76d3d570]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5f6197]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17adff3d]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10989ac]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6999b4a8]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288b33d5]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502775ee]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39360946]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4852902e]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@233104cf]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48e101bc]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41944ddf]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d1b7623]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@262a3bee]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61b86087]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b0a2a8]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@194b6147]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35050cbb]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40cbf553]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7794fad2]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e526e15]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5443b9b0]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@93c57eb]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c21d921]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f41626]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d33a331]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@365b2473]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50ba7fcc]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fada114]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3986515]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51efd173]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bc11d43]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a2501]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dc268c3]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8b5fc57]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36f0d76a]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1adce8d1]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54960f39]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736616b8]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5af119ca]
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19e117fa]
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:38:19 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:38:19 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 16:38:19 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 16:38:19 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 16:38:19 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 16:38:19 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c706e3f
[2019-06-05 16:38:19 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: 445f1f58-f268-4a80-bb18-269c256beb74 (<unnamed>)
[2019-06-05 16:38:19 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 16:38:19 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:38:20 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@60dc9946
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@75e720ca}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@75e720ca}

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@6e681794}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@6e681794}

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@6e681794}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@75e720ca}

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@75e720ca}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@6e681794}

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@6e681794}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@6e681794}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@75e720ca}

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@22e49d0e
[2019-06-05 16:38:20 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@6e681794}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@75e720ca}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@6e681794}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@22e49d0e}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@75e720ca}

[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@75e720ca}

[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@7d17571f
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@6e681794}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@6e681794}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@7d17571f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@75e720ca}

[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@75e720ca
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@75e720ca}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 16:38:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 16:38:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 16:38:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 16:38:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 16:38:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
[2019-06-05 16:38:21 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22a42b99, org.springframework.security.web.context.SecurityContextPersistenceFilter@70f5c6cf, org.springframework.security.web.header.HeaderWriterFilter@51ff31f8, org.springframework.security.web.authentication.logout.LogoutFilter@5a9cfdc7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@61ddc283, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49ee065b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51ef95cc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12022400, org.springframework.security.web.session.SessionManagementFilter@5da9fdcc, org.springframework.security.web.access.ExceptionTranslationFilter@5d8b27c4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31c126df]
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:38:21 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [148] [DEBUG] Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [180] [DEBUG] Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [194] [DEBUG] Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [53] [DEBUG] Trying to load META-INF/validation.xml via user class loader
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:38:21 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:38:21 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bbbadd7: startup date [Wed Jun 05 16:38:15 CEST 2019]; root of context hierarchy
[2019-06-05 16:38:22 ] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] [main] [235] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminMainPage()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminAllUsersPage(int,org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/search/{searchWord}/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openSearchUsersPage(java.lang.String,int,org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/importusers]}" onto public java.lang.String dawid.app.admin.AdminPageController.showUploadPageFromXML(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/upload]}" onto public java.lang.String dawid.app.admin.AdminPageController.importUsersFromXML(org.springframework.web.multipart.MultipartFile)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/updateuser/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.updateUser(int,dawid.app.user.User)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/delete/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.deleteUser(int)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/edit/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.getUserToEdit(int,org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/error]}" onto public java.lang.String dawid.app.mainController.ErrorPageController.showErrorPage()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/login]}" onto public java.lang.String dawid.app.mainController.LoginPageController.showLoginPage()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || /index]}" onto public java.lang.String dawid.app.mainController.MainPageController.showMainPage(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addpost]}" onto public java.lang.String dawid.app.post.PostController.addComment(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addnewpost]}" onto public java.lang.String dawid.app.post.PostController.addNewPost(dawid.app.post.Post,org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/comment]}" onto public java.lang.String dawid.app.post.PostController.commentView(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profil]}" onto public java.lang.String dawid.app.user.ProfilController.showUserProfilePage(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updatepass]}" onto public java.lang.String dawid.app.user.ProfilController.changeUSerPassword(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updateprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserDataAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwoend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwoEnd(dawid.app.user.userProfile.UserProfile,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthree]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepthree(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthreeend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepThreeEnd(dawid.app.user.userProfile.UserProfile,dawid.app.user.photo.Photo,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourth]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourth(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourthend]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourthend(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editpassword]}" onto public java.lang.String dawid.app.user.ProfilController.editUserPassword(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserData(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwo]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwo(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/changephoto]}" onto public java.lang.String dawid.app.user.ProfilController.changePhoto(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/register]}" onto public java.lang.String dawid.app.user.RegisterController.registerForm(org.springframework.ui.Model)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/activatelink/{activationCode}]}" onto public java.lang.String dawid.app.user.RegisterController.activateAccount(java.lang.String,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/adduser]}" onto public java.lang.String dawid.app.user.RegisterController.registerAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [main] [288] [INFO ] Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[2019-06-05 16:38:22 ] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [main] [61] [INFO ] Adding welcome page template: index
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bbbadd7: startup date [Wed Jun 05 16:38:15 CEST 2019]; root of context hierarchy
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[2019-06-05 16:38:22 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:38:22 ] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] [main] [86] [INFO ] 

Using generated security password: b46e5995-6f3b-4e0d-9722-3966a670a780

[2019-06-05 16:38:22 ] [org.springframework.jmx.export.MBeanExporter] [main] [433] [INFO ] Registering beans for JMX exposure on startup
[2019-06-05 16:38:22 ] [org.springframework.jmx.export.MBeanExporter] [main] [895] [INFO ] Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-06-05 16:38:22 ] [org.springframework.jmx.export.MBeanExporter] [main] [668] [INFO ] Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[2019-06-05 16:38:22 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting ProtocolHandler ["http-nio-8080"]
[2019-06-05 16:38:22 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Using a shared selector for servlet write/read
[2019-06-05 16:38:22 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [206] [INFO ] Tomcat started on port(s): 8080 (http) with context path ''
[2019-06-05 16:38:22 ] [org.springframework.boot.StartupInfoLogger] [main] [59] [INFO ] Started Application in 7.839 seconds (JVM running for 11.633)
[2019-06-05 16:38:26 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-1] [180] [INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-06-05 16:38:26 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-1] [494] [INFO ] FrameworkServlet 'dispatcherServlet': initialization started
[2019-06-05 16:38:26 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-1] [509] [INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
[2019-06-05 16:38:30 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-6] [55] [DEBUG] begin
[2019-06-05 16:38:30 ] [org.hibernate.query.criteria.internal.CriteriaQueryImpl] [http-nio-8080-exec-6] [307] [DEBUG] Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-6] [282] [DEBUG] parse() - HQL: select generatedAlias0 from dawid.app.user.User as generatedAlias0 where generatedAlias0.email=:param0
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.ErrorCounter] [http-nio-8080-exec-6] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-6] [305] [DEBUG] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dawid'
    |  |     |  |  |  \-[IDENT] Node: 'app'
    |  |     |  |  \-[IDENT] Node: 'user'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [http-nio-8080-exec-6] [124] [DEBUG] select << begin [level=1, statement=select]
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.tree.FromElement] [http-nio-8080-exec-6] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (generatedAlias0) -> user0_
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [http-nio-8080-exec-6] [60] [DEBUG] Resolved : generatedAlias0 -> user0_.user_id
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [http-nio-8080-exec-6] [60] [DEBUG] Resolved : generatedAlias0 -> user0_.user_id
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.tree.DotNode] [http-nio-8080-exec-6] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@6e681794
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [http-nio-8080-exec-6] [60] [DEBUG] Resolved : generatedAlias0.email -> user0_.email
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [http-nio-8080-exec-6] [128] [DEBUG] select : finishing up [level=1, statement=select]
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.HqlSqlWalker] [http-nio-8080-exec-6] [747] [DEBUG] processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.email user0_.user_id email ) ? ) ) )
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.util.JoinProcessor] [http-nio-8080-exec-6] [192] [DEBUG] Using FROM fragment [user user0_]
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [http-nio-8080-exec-6] [132] [DEBUG] select >> end [level=1, statement=select]
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-6] [269] [DEBUG] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_10_' {alias=generatedAlias0, className=dawid.app.user.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.activation_code as activati2_10_, user0_.active as active3_10_, user0_.email as email4_10_, user0_.password as password5_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6e681794}

[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.ErrorCounter] [http-nio-8080-exec-6] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-6] [251] [DEBUG] HQL: select generatedAlias0 from dawid.app.user.User as generatedAlias0 where generatedAlias0.email=:param0
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-6] [252] [DEBUG] SQL: select user0_.user_id as user_id1_10_, user0_.activation_code as activati2_10_, user0_.active as active3_10_, user0_.email as email4_10_, user0_.password as password5_10_ from user user0_ where user0_.email=?
[2019-06-05 16:38:30 ] [org.hibernate.hql.internal.ast.ErrorCounter] [http-nio-8080-exec-6] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:38:30 ] [org.hibernate.engine.jdbc.spi.SqlStatementLogger] [http-nio-8080-exec-6] [92] [DEBUG] select user0_.user_id as user_id1_10_, user0_.activation_code as activati2_10_, user0_.active as active3_10_, user0_.email as email4_10_, user0_.password as password5_10_ from user user0_ where user0_.email=?
[2019-06-05 16:38:30 ] [org.jboss.logging.DelegatingBasicLogger] [http-nio-8080-exec-6] [384] [DEBUG] Result set row: 0
[2019-06-05 16:38:30 ] [org.hibernate.loader.Loader] [http-nio-8080-exec-6] [1533] [DEBUG] Result row: EntityKey[dawid.app.user.User#23]
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-6] [144] [DEBUG] Resolving associations for [dawid.app.user.User#23]
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-6] [287] [DEBUG] Done materializing entity [dawid.app.user.User#23]
[2019-06-05 16:38:30 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-6] [66] [DEBUG] committing
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [132] [DEBUG] Processing flush-time cascades
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [174] [DEBUG] Dirty checking collections
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-6] [206] [DEBUG] Collection found: [dawid.app.user.User.groups#23], was: [dawid.app.user.User.groups#23] (uninitialized)
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-6] [206] [DEBUG] Collection found: [dawid.app.user.User.roles#23], was: [dawid.app.user.User.roles#23] (uninitialized)
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [106] [DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [113] [DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [102] [DEBUG] Listing entities:
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [109] [DEBUG] dawid.app.user.User{password=$2a$10$wGqE9ecK3pKGaEFH7CXdS.Zrj1WLJkOeXh.8sZojB998Iva8kAyYO, roles=<uninitialized>, active=1, groups=<uninitialized>, id=23, activationCode=2q22VOrd93L1Rivk4rb2iGnVjyf82Xv9, email=dawid.krawczyk532@gmail.com}
[2019-06-05 16:38:30 ] [org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer] [http-nio-8080-exec-6] [73] [DEBUG] Loading collection: [dawid.app.user.User.roles#23]
[2019-06-05 16:38:30 ] [org.hibernate.engine.jdbc.spi.SqlStatementLogger] [http-nio-8080-exec-6] [92] [DEBUG] select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 16:38:30 ] [org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl] [http-nio-8080-exec-6] [161] [DEBUG] Preparing collection intializer : [dawid.app.user.User.roles#23]
[2019-06-05 16:38:30 ] [org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl] [http-nio-8080-exec-6] [120] [DEBUG] Starting ResultSet row #0
[2019-06-05 16:38:30 ] [org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl] [http-nio-8080-exec-6] [59] [DEBUG] Found row of collection: [dawid.app.user.User.roles#23]
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-6] [144] [DEBUG] Resolving associations for [dawid.app.user.Role#2]
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-6] [287] [DEBUG] Done materializing entity [dawid.app.user.Role#2]
[2019-06-05 16:38:30 ] [org.jboss.logging.DelegatingBasicLogger] [http-nio-8080-exec-6] [394] [DEBUG] 1 collections were found in result set for role: dawid.app.user.User.roles
[2019-06-05 16:38:30 ] [org.hibernate.engine.loading.internal.CollectionLoadContext] [http-nio-8080-exec-6] [265] [DEBUG] Collection fully initialized: [dawid.app.user.User.roles#23]
[2019-06-05 16:38:30 ] [org.jboss.logging.DelegatingBasicLogger] [http-nio-8080-exec-6] [394] [DEBUG] 1 collections initialized for role: dawid.app.user.User.roles
[2019-06-05 16:38:30 ] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [http-nio-8080-exec-6] [84] [DEBUG] HHH000387: ResultSet's statement was not registered
[2019-06-05 16:38:30 ] [org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer] [http-nio-8080-exec-6] [105] [DEBUG] Done loading collection
[2019-06-05 16:38:30 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-6] [55] [DEBUG] begin
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [132] [DEBUG] Processing flush-time cascades
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [174] [DEBUG] Dirty checking collections
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-6] [206] [DEBUG] Collection found: [dawid.app.user.User.groups#23], was: [dawid.app.user.User.groups#23] (uninitialized)
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-6] [189] [DEBUG] Collection found: [dawid.app.user.User.roles#23], was: [dawid.app.user.User.roles#23] (initialized)
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [106] [DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [113] [DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [102] [DEBUG] Listing entities:
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [109] [DEBUG] dawid.app.user.Role{role=ROLE_USER, id=2}
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [109] [DEBUG] dawid.app.user.User{password=$2a$10$wGqE9ecK3pKGaEFH7CXdS.Zrj1WLJkOeXh.8sZojB998Iva8kAyYO, roles=[dawid.app.user.Role#2], active=1, groups=<uninitialized>, id=23, activationCode=2q22VOrd93L1Rivk4rb2iGnVjyf82Xv9, email=dawid.krawczyk532@gmail.com}
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [132] [DEBUG] Processing flush-time cascades
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [174] [DEBUG] Dirty checking collections
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-6] [206] [DEBUG] Collection found: [dawid.app.user.User.groups#23], was: [dawid.app.user.User.groups#23] (uninitialized)
[2019-06-05 16:38:30 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-6] [189] [DEBUG] Collection found: [dawid.app.user.User.roles#23], was: [dawid.app.user.User.roles#23] (initialized)
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [106] [DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2019-06-05 16:38:30 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-6] [113] [DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [102] [DEBUG] Listing entities:
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [109] [DEBUG] dawid.app.user.Role{role=ROLE_USER, id=2}
[2019-06-05 16:38:30 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-6] [109] [DEBUG] dawid.app.user.User{password=$2a$10$wGqE9ecK3pKGaEFH7CXdS.Zrj1WLJkOeXh.8sZojB998Iva8kAyYO, roles=[dawid.app.user.Role#2], active=1, groups=<uninitialized>, id=23, activationCode=2q22VOrd93L1Rivk4rb2iGnVjyf82Xv9, email=dawid.krawczyk532@gmail.com}
[2019-06-05 16:38:30 ] [org.hibernate.engine.jdbc.spi.SqlStatementLogger] [http-nio-8080-exec-6] [92] [DEBUG] select * from all_group inner join group_user gu on all_group.user_id=group_user.user_id
[2019-06-05 16:38:30 ] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8080-exec-6] [124] [DEBUG] could not extract ResultSet [n/a]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'all_group.user_id' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1966)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2168)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893)
	at org.hibernate.loader.Loader.doQuery(Loader.java:938)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)
	at org.hibernate.loader.Loader.doList(Loader.java:2692)
	at org.hibernate.loader.Loader.doList(Loader.java:2675)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)
	at org.hibernate.loader.Loader.list(Loader.java:2502)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:335)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2200)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1016)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:152)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:590)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy144.findByUserId(Unknown Source)
	at dawid.app.user.group.GroupServiceImpl.findByUserID(GroupServiceImpl.java:22)
	at dawid.app.user.group.GroupServiceImpl$$FastClassBySpringCGLIB$$18699a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at dawid.app.user.group.GroupServiceImpl$$EnhancerBySpringCGLIB$$b79889f8.findByUserID(<generated>)
	at dawid.app.post.PostController.addComment(PostController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 16:38:30 ] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8080-exec-6] [129] [WARN ] SQL Error: 1054, SQLState: 42S22
[2019-06-05 16:38:30 ] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8080-exec-6] [131] [ERROR] Unknown column 'all_group.user_id' in 'on clause'
[2019-06-05 16:38:30 ] [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl] [http-nio-8080-exec-6] [271] [DEBUG] JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:271)
	at org.hibernate.engine.transaction.internal.TransactionImpl.setRollbackOnly(TransactionImpl.java:143)
	at org.hibernate.Transaction.markRollbackOnly(Transaction.java:68)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:364)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:273)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:150)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:157)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1423)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:590)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy144.findByUserId(Unknown Source)
	at dawid.app.user.group.GroupServiceImpl.findByUserID(GroupServiceImpl.java:22)
	at dawid.app.user.group.GroupServiceImpl$$FastClassBySpringCGLIB$$18699a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at dawid.app.user.group.GroupServiceImpl$$EnhancerBySpringCGLIB$$b79889f8.findByUserID(<generated>)
	at dawid.app.post.PostController.addComment(PostController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 16:38:30 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-6] [98] [DEBUG] rolling back
[2019-06-05 16:38:30 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-6] [182] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'all_group.user_id' in 'on clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1966)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2168)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893)
	at org.hibernate.loader.Loader.doQuery(Loader.java:938)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)
	at org.hibernate.loader.Loader.doList(Loader.java:2692)
	at org.hibernate.loader.Loader.doList(Loader.java:2675)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)
	at org.hibernate.loader.Loader.list(Loader.java:2502)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:335)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2200)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1016)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:152)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:590)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy144.findByUserId(Unknown Source)
	at dawid.app.user.group.GroupServiceImpl.findByUserID(GroupServiceImpl.java:22)
	at dawid.app.user.group.GroupServiceImpl$$FastClassBySpringCGLIB$$18699a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at dawid.app.user.group.GroupServiceImpl$$EnhancerBySpringCGLIB$$b79889f8.findByUserID(<generated>)
	at dawid.app.post.PostController.addComment(PostController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 16:43:17 ] [org.springframework.context.support.AbstractApplicationContext] [Thread-4] [993] [INFO ] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bbbadd7: startup date [Wed Jun 05 16:38:15 CEST 2019]; root of context hierarchy
[2019-06-05 16:43:17 ] [org.springframework.jmx.export.MBeanExporter] [Thread-4] [451] [INFO ] Unregistering JMX-exposed beans on shutdown
[2019-06-05 16:43:17 ] [org.springframework.jmx.support.MBeanRegistrationSupport] [Thread-4] [185] [INFO ] Unregistering JMX-exposed beans
[2019-06-05 16:43:17 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-4] [597] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:43:17 ] [org.hibernate.internal.SessionFactoryImpl] [Thread-4] [741] [DEBUG] HHH000031: Closing
[2019-06-05 16:43:17 ] [org.hibernate.engine.spi.CascadeStyles] [Thread-4] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[2019-06-05 16:43:17 ] [org.hibernate.service.internal.AbstractServiceRegistryImpl] [Thread-4] [414] [DEBUG] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2019-06-05 16:43:17 ] [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] [Thread-4] [295] [DEBUG] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2019-06-05 16:43:17 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [381] [INFO ] HikariPool-1 - Shutdown initiated...
[2019-06-05 16:43:17 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [383] [INFO ] HikariPool-1 - Shutdown completed.
[2019-06-05 16:43:26 ] [org.springframework.boot.StartupInfoLogger] [main] [50] [INFO ] Starting Application on Dawid-PC with PID 8504 (D:\SocialMedia\appSocialNetwork\target\classes started by Dawid in D:\SocialMedia\appSocialNetwork)
[2019-06-05 16:43:26 ] [org.springframework.boot.SpringApplication] [main] [662] [INFO ] No active profile set, falling back to default profiles: default
[2019-06-05 16:43:26 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [background-preinit] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:43:26 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:43:26 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:43:26 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:43:26 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:43:26 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:43:26 ] [org.springframework.context.support.AbstractApplicationContext] [main] [590] [INFO ] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c92458a: startup date [Wed Jun 05 16:43:26 CEST 2019]; root of context hierarchy
[2019-06-05 16:43:28 ] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] [main] [153] [INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-06-05 16:43:28 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8b941e77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:43:28 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2441e6b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:43:28 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:43:28 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7e82736c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:43:28 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$49168963] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:43:28 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:43:28 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$b146ba9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:43:29 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [91] [INFO ] Tomcat initialized with port(s): 8080 (http)
[2019-06-05 16:43:29 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Initializing ProtocolHandler ["http-nio-8080"]
[2019-06-05 16:43:29 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting service [Tomcat]
[2019-06-05 16:43:29 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting Servlet Engine: Apache Tomcat/8.5.32
[2019-06-05 16:43:29 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;.]
[2019-06-05 16:43:29 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[2019-06-05 16:43:29 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] Initializing Spring embedded WebApplicationContext
[2019-06-05 16:43:29 ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [localhost-startStop-1] [285] [INFO ] Root WebApplicationContext: initialization completed in 3169 ms
[2019-06-05 16:43:29 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-06-05 16:43:29 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-06-05 16:43:29 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-06-05 16:43:29 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'requestContextFilter' to: [/*]
[2019-06-05 16:43:29 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-06-05 16:43:29 ] [org.springframework.boot.web.servlet.ServletRegistrationBean] [localhost-startStop-1] [187] [INFO ] Servlet dispatcherServlet mapped to [/]
[2019-06-05 16:43:30 ] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2019-06-05 16:43:31 ] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2019-06-05 16:43:31 ] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] [361] [INFO ] Building JPA container EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:43:31 ] [org.hibernate.jpa.internal.util.LogHelper] [main] [102] [DEBUG] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@2de886a4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SocialMedia/appSocialNetwork/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		dawid.app.post.comment.Comment
		dawid.app.post.Post
		dawid.app.user.group.AllGroup
		dawid.app.user.photo.Photo
		dawid.app.user.Role
		dawid.app.user.User
		dawid.app.user.userProfile.FreeTime
		dawid.app.user.userProfile.PhysicalActivity
		dawid.app.user.userProfile.UserProfile]
	Mapping files names []
	Properties []
[2019-06-05 16:43:31 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2019-06-05 16:43:31 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2019-06-05 16:43:31 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2019-06-05 16:43:31 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2019-06-05 16:43:31 ] [org.hibernate.Version] [main] [45] [INFO ] HHH000412: Hibernate Core {5.2.17.Final}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Environment] [main] [213] [INFO ] HHH000206: hibernate.properties not found
[2019-06-05 16:43:31 ] [org.hibernate.service.spi.ServiceBinding] [main] [68] [DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2019-06-05 16:43:31 ] [org.hibernate.cache.internal.RegionFactoryInitiator] [main] [75] [DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2019-06-05 16:43:31 ] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [66] [INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@5bf32926
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@5bf32926
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5bf32926
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1344f707
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@505032a1
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@51743a43
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@78487758
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@78487758
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78487758
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@a2520db
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@a2520db
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a2520db
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3c02c433
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3c02c433
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c02c433
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@5c717a9d
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@5c717a9d
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c717a9d
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@16e79c83
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@16e79c83
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16e79c83
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@6518b2
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@6518b2
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6518b2
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56a78e00
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56a78e00
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d13f31b
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d13f31b
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration string -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@408c68f5
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17dcb8d1
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration url -> org.hibernate.type.UrlType@50f45428
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@50f45428
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@5a757579
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5a757579
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@626d20b8
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@626d20b8
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3336b21
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3336b21
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10b2459
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10b2459
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@153aa2d7
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@153aa2d7
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4584fe5b
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4584fe5b
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@22c67576
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@22c67576
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24433e
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24433e
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration date -> org.hibernate.type.DateType@10528a45
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@10528a45
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration time -> org.hibernate.type.TimeType@2700edda
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2700edda
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@2228fae7
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2228fae7
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2228fae7
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2aa1db49
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@70b88589
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70b88589
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70b88589
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77771977
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@591d1a0e
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@591d1a0e
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@107fcda8
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@107fcda8
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1231e458
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1231e458
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration class -> org.hibernate.type.ClassType@6ba56927
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ba56927
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7997988d
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7997988d
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7ed65af9
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@54545425
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@54545425
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@54545425
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@645233c
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@645233c
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@645233c
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@60c87af3
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration image -> org.hibernate.type.ImageType@5c6c0749
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@b30b990
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@b30b990
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@b30b990
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b224e01
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b224e01
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b224e01
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration text -> org.hibernate.type.TextType@bce1460
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@16539348
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@491c69b
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@491c69b
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@620128ad
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@670edea7
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@670edea7
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@18ef3b8f
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@18ef3b8f
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bd6d232
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e843ffb
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@73d92bd2
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@34893a69
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34893a69
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@142777a3
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69004d3c
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e10abe9
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@33c46b10
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cf188a4
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77734fab
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7c37fd4f
[2019-06-05 16:43:31 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c3b9532
[2019-06-05 16:43:31 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [72] [DEBUG] Database ->
       name : MySQL
    version : 5.5.5-10.1.38-MariaDB
      major : 5
      minor : 5
[2019-06-05 16:43:31 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [83] [DEBUG] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[2019-06-05 16:43:31 ] [org.jboss.logging.DelegatingBasicLogger] [main] [389] [DEBUG] JDBC version : 4.0
[2019-06-05 16:43:31 ] [org.hibernate.dialect.Dialect] [main] [157] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2019-06-05 16:43:31 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [117] [DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[2019-06-05 16:43:31 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [191] [DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [84] [DEBUG]     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:43:31 ] [org.hibernate.boot.model.relational.Namespace] [main] [47] [DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.User
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name User
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.User on table user
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=activation_code, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property activationCode with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:activationCode]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for activationCode
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property activationCode
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=active, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property active with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:active]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for active
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property active
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property email with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:email]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for email
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property email
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.groups
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groups
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property password with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:password]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for password
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property password
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.roles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property roles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.Post
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Post
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.Post on table post
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property content with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:content]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for content
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property content
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupId with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:groupId]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:photoId]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postDate with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postDate]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_title, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postTitle with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postTitle]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postTitle
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postTitle
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postUserId with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postUserId]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postUserId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postUserId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userDislike with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userDislike]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userDislike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userDislike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_like, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userLike with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userLike]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userLike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userLike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name FreeTime
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.FreeTime on table free_time
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:name]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name PhysicalActivity
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.PhysicalActivity on table physical_activity
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:name]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.group.AllGroup
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name AllGroup
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.group.AllGroup on table all_group
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupID with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:groupID]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupID
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupID
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_physical_activities, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property CommonPhysicalActivities with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:CommonPhysicalActivities]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for CommonPhysicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property CommonPhysicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_city, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonCity with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonCity]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonCity
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonCity
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_free_time, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonFreeTime with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonFreeTime]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonFreeTime
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonFreeTime
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:name]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.Role
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Role
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.Role on table role
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property role with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:role]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for role
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property role
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.comment.Comment
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Comment
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.comment.Comment on table comment
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_content, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentContent with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentContent]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentContent
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentContent
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDate with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDate]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDislike with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDislike]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDislike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDislike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_like, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentLike with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentLike]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentLike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentLike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_title, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentTitle with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentTitle]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentTitle
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentTitle
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentUserId with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentUserId]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentUserId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentUserId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:photoId]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postId with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:postId]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.photo.Photo
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Photo
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.photo.Photo on table photo
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=data, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property data with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:data]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for data
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property data
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:description]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:name]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=profile_photo, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property profilePhoto with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:profilePhoto]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for profilePhoto
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property profilePhoto
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userId with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:userId]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.UserProfile on table user_profile
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:id]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=all_groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='allGroups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property allGroups
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=birth_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property birthDate with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:birthDate]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for birthDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property birthDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=characters, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property character with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:character]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for character
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property character
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=city, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property city with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:city]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for city
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property city
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:description]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=free_times_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='freeTimes_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='free_time_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property freeTimes
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=hobby, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property hobby with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:hobby]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for hobby
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property hobby
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=language, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property language with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:language]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for language
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property language
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property lastName with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:lastName]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for lastName
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property lastName
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:name]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=number, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property number with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:number]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for number
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property number
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=physical_activities_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physicalActivities_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physical_activity_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property physicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property sex with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:sex]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for sex
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property sex
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=who_search, insertable=true, updatable=true, unique=false}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property whoSearch with lazy=false
[2019-06-05 16:43:31 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:whoSearch]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for whoSearch
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property whoSearch
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for activationCode
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for active
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for email
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for password
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for content
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postTitle
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postUserId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userDislike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userLike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupID
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for CommonPhysicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonCity
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonFreeTime
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for role
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentContent
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDislike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentLike
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentTitle
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentUserId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for data
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for profilePhoto
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userId
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for birthDate
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for character
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for city
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for hobby
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for language
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for lastName
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for number
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for sex
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for whoSearch
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [all_group]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [comment_id] to be non-null as it is part of the primary key for table [comment]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [photo_id] to be non-null as it is part of the primary key for table [photo]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: physical_activity_id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: free_time_id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: group_id, element: user_id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.roles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.roles
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: role_id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.groups
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.groups
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:43:31 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: free_time_id, element: user_profile_id
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:43:31 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:43:31 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: physical_activity_id, element: user_profile_id
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 16:43:31 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 16:43:31 ] [org.hibernate.internal.SessionFactoryImpl] [main] [199] [DEBUG] Building session factory
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [69] [DEBUG] SessionFactory name : null
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [70] [DEBUG] Automatic flush during beforeCompletion(): enabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [71] [DEBUG] Automatic session close at end of transaction: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [73] [DEBUG] Statistics: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [75] [DEBUG] Deleted entity synthetic identifier rollback: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [76] [DEBUG] Default entity-mode: pojo
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [77] [DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [78] [DEBUG] Allow initialization of lazy state outside session : disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [80] [DEBUG] Using BatchFetchStyle : LEGACY
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [81] [DEBUG] Default batch fetch size: -1
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [82] [DEBUG] Maximum outer join fetch depth: 2
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [83] [DEBUG] Default null ordering: NONE
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [84] [DEBUG] Order SQL updates by primary key: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [85] [DEBUG] Order SQL inserts for batching: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [87] [DEBUG] multi-tenancy strategy : NONE
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [89] [DEBUG] JTA Track by Thread: enabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [91] [DEBUG] Query language substitutions: {}
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [92] [DEBUG] JPA query language strict compliance: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [93] [DEBUG] Named query checking : enabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [95] [DEBUG] Second-level cache: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [96] [DEBUG] Second-level query cache: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [97] [DEBUG] Second-level query cache factory: null
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [98] [DEBUG] Second-level cache region prefix: null
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [99] [DEBUG] Optimize second-level cache for minimal puts: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [100] [DEBUG] Structured second-level cache entries: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [101] [DEBUG] Second-level cache direct-reference entries: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [102] [DEBUG] Automatic eviction of collection cache: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [104] [DEBUG] JDBC batch size: 15
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [105] [DEBUG] JDBC batch updates for versioned data: enabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [106] [DEBUG] Scrollable result sets: enabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [107] [DEBUG] Wrap result sets: disabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [108] [DEBUG] JDBC3 getGeneratedKeys(): enabled
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [109] [DEBUG] JDBC result set fetch size: null
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [110] [DEBUG] Connection release mode: ON_CLOSE
[2019-06-05 16:43:31 ] [org.hibernate.cfg.Settings] [main] [111] [DEBUG] Generate SQL with comments: disabled
[2019-06-05 16:43:31 ] [org.hibernate.internal.SessionFactoryImpl] [main] [257] [DEBUG] Session factory constructed with filter configurations : {}
[2019-06-05 16:43:31 ] [org.hibernate.internal.SessionFactoryImpl] [main] [258] [DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, user.country.format=PL, maven.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\../conf, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher spring-boot:run, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6947b53d, javax.persistence.sharedCache.mode=UNSPECIFIED, maven.home=C:\Program Files\Java\apache-maven-3.6.0\bin\.., sun.cpu.endian=little, user.home=C:\Users\Dawid, user.language=en, sun.stderr.encoding=cp852, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, file.separator=\, sun.stdout.encoding=cp852, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_201-b09, user.name=Dawid, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, guice.disable.misplaced.annotation.check=true, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dawid\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\Dawid\AppData\Local\Temp\tomcat.3367556013294631364.8080, java.version=1.8.0_201, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=D:\SocialMedia\appSocialNetwork, os.arch=amd64, maven.multiModuleProjectDirectory=D:\SocialMedia\appSocialNetwork, PID=8504, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=pl, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, catalina.base=C:\Users\Dawid\AppData\Local\Temp\tomcat.3367556013294631364.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@b641ab3, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.201-b09, classworlds.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\..\bin\m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, library.jansi.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\lib\jansi-native, java.class.version=52.0}
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 16:43:32 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:43:32 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:32 ] [org.hibernate.secure.spi.JaccIntegrator] [main] [80] [DEBUG] Skipping JACC integration as it was not enabled
[2019-06-05 16:43:32 ] [org.hibernate.engine.spi.CascadeStyles] [main] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[2019-06-05 16:43:32 ] [org.hibernate.internal.SessionFactoryImpl] [main] [297] [DEBUG] Instantiated session factory
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:43:32 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (free_time_id, user_profile_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set user_profile_id=? where free_time_id=? and user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where free_time_id=? and user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (physical_activity_id, user_profile_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set user_profile_id=? where physical_activity_id=? and user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where physical_activity_id=? and user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (user_profile_id, physical_activity_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set physical_activity_id=? where user_profile_id=? and physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where user_profile_id=? and physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (user_profile_id, free_time_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set free_time_id=? where user_profile_id=? and free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where user_profile_id=? and free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.roles
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into user_role (user_id, role_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update user_role set role_id=? where user_id=? and role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from user_role where user_id=? and role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from user_role where user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (group_id, user_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set user_id=? where group_id=? and user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where group_id=? and user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.groups
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.User
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_id from user where user_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select user_.user_id, user_.activation_code as activati2_10_, user_.active as active3_10_, user_.email as email4_10_, user_.password as password5_10_ from user user_ where user_.user_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user (activation_code, active, email, password, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user set activation_code=?, active=?, email=?, password=? where user_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user where user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into user (activation_code, active, email, password) values (?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55dc4c28]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1569a19]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49743404]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@716acb9b]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@195615a6]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [NONE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be58f5e]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47667d52]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bcbd67a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c132322]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ce8776]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3636fe90]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36c4a74c]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8763d5]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@144cf2b]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed113ef]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3c29be]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1184c678]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ce1cc]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bc15940]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e4ad87d]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19ca6cca]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1892e198]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60635bc7]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a85c73d]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1624939f]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19353ee2]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@674a7c0c]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5540a311]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65325575]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@112f5350]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [FORCE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b1f765]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@257fac6]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69098c0f]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43295494]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2e3ac0]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47926e89]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b5a8ebb]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6029512a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@349b9d80]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210cf278]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1c8fb4]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c09c1d3]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad07718]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@604b2ad9]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65321741]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a7556d]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57f276d7]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@220feb77]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f4ede66]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3563108d]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e38c38]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@354ed335]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18044a69]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75eb971d]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d50cf05]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.Post
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select post_id from post where post_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select post_.post_id, post_.content as content2_8_, post_.group_id as group_id3_8_, post_.photo_id as photo_id4_8_, post_.post_date as post_dat5_8_, post_.post_title as post_tit6_8_, post_.post_user_id as post_use7_8_, post_.user_dislike as user_dis8_8_, post_.user_like as user_lik9_8_ from post post_ where post_.post_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like, post_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update post set content=?, group_id=?, photo_id=?, post_date=?, post_title=?, post_user_id=?, user_dislike=?, user_like=? where post_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from post where post_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0e4ff5]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [NONE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6373a978]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e69fce]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29437a3]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_NOWAIT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4000469a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_SKIPLOCKED]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfeef79]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [FORCE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@706352a9]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381415b]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_WRITE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a25276]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3873e1]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77d2462d]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select free_time_id from free_time where free_time_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select freetime_.free_time_id, freetime_.free_time_name as free_tim2_2_ from free_time freetime_ where freetime_.free_time_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into free_time (free_time_name, free_time_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update free_time set free_time_name=? where free_time_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from free_time where free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into free_time (free_time_name) values (?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eac81a0]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@362e2d45]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736700eb]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [NONE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79cc2ea6]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2aa2662a]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61895bcd]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7928f044]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2491f45e]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fed8432]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3179ef5b]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d0a9663]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e2555e4]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_NOWAIT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4058664c]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ae6d74c]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e783d81]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_SKIPLOCKED]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d914604]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35357394]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aded486]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [FORCE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc81abf]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6665fa1f]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aa368b1]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67038cb8]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423b9160]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c9f76]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_WRITE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7801a5e1]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54e27243]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3362b086]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b935a6]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29bdb370]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7dd041]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66c00d]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f119850]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e0fa02b]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select physical_activity_id from physical_activity where physical_activity_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select physicalac_.physical_activity_id, physicalac_.physical_activity_name as physical2_6_ from physical_activity physicalac_ where physicalac_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into physical_activity (physical_activity_name, physical_activity_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update physical_activity set physical_activity_name=? where physical_activity_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from physical_activity where physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into physical_activity (physical_activity_name) values (?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285f6d4f]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cf8f068]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f951924]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [NONE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c732a8c]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39739425]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e18f616]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bea9a13]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66cbaebc]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2faa5c35]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201f61d1]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e412382]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43778b8b]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_NOWAIT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183d6bdd]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c2ec8d8]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@737a3105]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_SKIPLOCKED]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6adf34]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64aad916]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46fa2e9f]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [FORCE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@103fca0b]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@795c0031]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e454753]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4b702]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32360008]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760db6c2]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_WRITE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d473a6]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ca94ea0]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77895e51]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7304a45]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2679118b]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbfa8c3]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e58ab93]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c47278f]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a586374]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.group.AllGroup
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select group_id from all_group where group_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select allgroup_.group_id, allgroup_.common_physical_activities as common_p2_0_, allgroup_.common_city as common_c3_0_, allgroup_.common_free_time as common_f4_0_, allgroup_.name as name5_0_ from all_group allgroup_ where allgroup_.group_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into all_group (common_physical_activities, common_city, common_free_time, name, group_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update all_group set common_physical_activities=?, common_city=?, common_free_time=?, name=? where group_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from all_group where group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into all_group (common_physical_activities, common_city, common_free_time, name) values (?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5107459f]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62cb52ae]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc1de40]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [NONE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40014d1a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@641a33fb]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@410cc2e6]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@baf2e40]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fa08e0]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2746e1eb]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e9066d]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63aa5fb1]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7373a396]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_NOWAIT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3409fb]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53f84add]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3df92c27]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_SKIPLOCKED]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@734c91b2]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76ce2034]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222a2de]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [FORCE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f46229]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ca64ce3]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8535fb]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd6e788]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18dd20a9]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a35e4a4]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_WRITE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3035b2cd]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f3293a]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7796ed04]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa88ae1]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56c82ccd]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@167605dd]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a76a70]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29c422ff]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fba82f7]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.Role
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select role_id from role where role_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select role_.role_id, role_.role as role2_9_ from role role_ where role_.role_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into role (role, role_id) values (?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update role set role=? where role_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from role where role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into role (role) values (?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ccd8d9a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [NONE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c6999b]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff1f9ef]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6f93e5]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_NOWAIT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50285fc2]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_SKIPLOCKED]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6271aa55]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [FORCE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f116e4]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ee0a726]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bb1efc]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b22498]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22de9eca]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5d2200]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e86bc42]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329474ab]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1393f44e]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a9cae33]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd9c2be]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8f049a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f1e75ba]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76bcc816]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d592eb]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559fbb92]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41306cef]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354ef131]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@152cd588]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666c632e]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e590463]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616548ed]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa831b1]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0b9f25]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29edc69e]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ad6f6ce]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1585c55f]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 16:43:32 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 16:43:32 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573380c0]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67b21df4]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3b4634]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1545f8b3]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dab789d]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a018761]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e8f6af3]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34359bf1]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14c0c5cb]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61eded52]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@791f088d]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@881da76]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a7da830]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14745150]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@152e7833]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64b154fd]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@527977ea]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34707276]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75df8870]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b273c8a]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278de23]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35acefd8]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ed8d574]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a15894a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8156fff]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f33fa2d]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2718f3ca]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513171ba]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f886f4]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@729ccf22]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28facc6a]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e0320a7]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7cd13b]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f8df0a9]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31eaecae]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ebf42c]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b8bbfb6]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d62b9f5]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24417ee1]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@370729bc]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@418746e5]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f2f231]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36eb2198]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43e46dbe]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d896c89]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22017341]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ca4d15]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a355cf]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c88c96]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28fa6c95]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fd0d35]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45149d80]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ef1cf73]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9bb839]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22e790fa]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43fef1bb]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c434e0]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7af73cfa]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb06936]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c813734]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30a2a3ed]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@737159ef]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e45676e]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b68cf05]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7737225e]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625c45c1]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f21be68]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b8610e]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a538615]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa1b0d3]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48718511]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@593361cb]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed36516]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ace22d0]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@641e6ab4]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26e162c5]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@231f58da]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@742da27b]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@792b0be7]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47664f2c]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a45a40]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69935024]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96eea54]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@700033b7]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a989fb6]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@764aeaab]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7821befb]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@219ad2bc]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11eff718]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3051583c]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4572feab]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66998ee7]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34cca339]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b27e9ba]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a23408c]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4164a291]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3133bd11]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@522a9ec2]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7edd6aa3]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14a75e1]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41217cd4]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@477b26bc]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52e6c482]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@540cdc61]
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302ac0b6]
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:43:32 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:43:32 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 16:43:32 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 16:43:32 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 16:43:32 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 16:43:32 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12f3334d
[2019-06-05 16:43:32 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: cd1807e1-c05a-4aee-85a9-a557861e9549 (<unnamed>)
[2019-06-05 16:43:32 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 16:43:32 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:43:32 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@57eab22f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@6346c200}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@6346c200}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@2355b10f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@2355b10f}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@2355b10f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@6346c200}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@6346c200}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@2355b10f}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@2355b10f}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@2355b10f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@6346c200}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@10528a45
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@2355b10f}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@6346c200}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@2355b10f}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@10528a45}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@6346c200}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@6346c200}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@54545425
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@2355b10f}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@2355b10f}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@54545425}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@6346c200}

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@6346c200
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@6346c200}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:33 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:43:34 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 16:43:34 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 16:43:34 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 16:43:34 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 16:43:34 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 16:43:34 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
[2019-06-05 16:43:34 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4321c829, org.springframework.security.web.context.SecurityContextPersistenceFilter@5f85d7c2, org.springframework.security.web.header.HeaderWriterFilter@7668dc34, org.springframework.security.web.authentication.logout.LogoutFilter@4ad1bf2d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@64afea8d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@540b7ccb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e64a831, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74658e89, org.springframework.security.web.session.SessionManagementFilter@703b5da4, org.springframework.security.web.access.ExceptionTranslationFilter@6b4d16e4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@770b5d72]
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:43:34 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [148] [DEBUG] Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [180] [DEBUG] Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [194] [DEBUG] Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [53] [DEBUG] Trying to load META-INF/validation.xml via user class loader
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:43:34 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:43:34 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:43:34 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c92458a: startup date [Wed Jun 05 16:43:26 CEST 2019]; root of context hierarchy
[2019-06-05 16:43:34 ] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] [main] [235] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2019-06-05 16:43:34 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminMainPage()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminAllUsersPage(int,org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/search/{searchWord}/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openSearchUsersPage(java.lang.String,int,org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/importusers]}" onto public java.lang.String dawid.app.admin.AdminPageController.showUploadPageFromXML(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/upload]}" onto public java.lang.String dawid.app.admin.AdminPageController.importUsersFromXML(org.springframework.web.multipart.MultipartFile)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/updateuser/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.updateUser(int,dawid.app.user.User)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/delete/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.deleteUser(int)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/edit/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.getUserToEdit(int,org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/error]}" onto public java.lang.String dawid.app.mainController.ErrorPageController.showErrorPage()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/login]}" onto public java.lang.String dawid.app.mainController.LoginPageController.showLoginPage()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || /index]}" onto public java.lang.String dawid.app.mainController.MainPageController.showMainPage(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addpost]}" onto public java.lang.String dawid.app.post.PostController.addComment(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addnewpost]}" onto public java.lang.String dawid.app.post.PostController.addNewPost(dawid.app.post.Post,org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/comment]}" onto public java.lang.String dawid.app.post.PostController.commentView(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profil]}" onto public java.lang.String dawid.app.user.ProfilController.showUserProfilePage(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updatepass]}" onto public java.lang.String dawid.app.user.ProfilController.changeUSerPassword(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updateprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserDataAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwoend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwoEnd(dawid.app.user.userProfile.UserProfile,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthree]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepthree(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthreeend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepThreeEnd(dawid.app.user.userProfile.UserProfile,dawid.app.user.photo.Photo,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourth]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourth(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourthend]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourthend(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editpassword]}" onto public java.lang.String dawid.app.user.ProfilController.editUserPassword(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserData(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwo]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwo(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/changephoto]}" onto public java.lang.String dawid.app.user.ProfilController.changePhoto(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/register]}" onto public java.lang.String dawid.app.user.RegisterController.registerForm(org.springframework.ui.Model)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/activatelink/{activationCode}]}" onto public java.lang.String dawid.app.user.RegisterController.activateAccount(java.lang.String,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/adduser]}" onto public java.lang.String dawid.app.user.RegisterController.registerAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [main] [288] [INFO ] Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[2019-06-05 16:43:35 ] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [main] [61] [INFO ] Adding welcome page template: index
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c92458a: startup date [Wed Jun 05 16:43:26 CEST 2019]; root of context hierarchy
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[2019-06-05 16:43:35 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:43:35 ] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] [main] [86] [INFO ] 

Using generated security password: 7bc91ad1-d276-4466-a2b7-0feff30658ee

[2019-06-05 16:43:35 ] [org.springframework.jmx.export.MBeanExporter] [main] [433] [INFO ] Registering beans for JMX exposure on startup
[2019-06-05 16:43:35 ] [org.springframework.jmx.export.MBeanExporter] [main] [895] [INFO ] Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-06-05 16:43:35 ] [org.springframework.jmx.export.MBeanExporter] [main] [668] [INFO ] Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[2019-06-05 16:43:35 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting ProtocolHandler ["http-nio-8080"]
[2019-06-05 16:43:35 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Using a shared selector for servlet write/read
[2019-06-05 16:43:35 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [206] [INFO ] Tomcat started on port(s): 8080 (http) with context path ''
[2019-06-05 16:43:35 ] [org.springframework.boot.StartupInfoLogger] [main] [59] [INFO ] Started Application in 9.904 seconds (JVM running for 16.365)
[2019-06-05 16:45:08 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-3] [180] [INFO ] Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-06-05 16:45:08 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-3] [494] [INFO ] FrameworkServlet 'dispatcherServlet': initialization started
[2019-06-05 16:45:08 ] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8080-exec-3] [509] [INFO ] FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
[2019-06-05 16:45:11 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-8] [55] [DEBUG] begin
[2019-06-05 16:45:11 ] [org.hibernate.query.criteria.internal.CriteriaQueryImpl] [http-nio-8080-exec-8] [307] [DEBUG] Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-8] [282] [DEBUG] parse() - HQL: select generatedAlias0 from dawid.app.user.User as generatedAlias0 where generatedAlias0.email=:param0
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.ErrorCounter] [http-nio-8080-exec-8] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-8] [305] [DEBUG] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dawid'
    |  |     |  |  |  \-[IDENT] Node: 'app'
    |  |     |  |  \-[IDENT] Node: 'user'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [http-nio-8080-exec-8] [124] [DEBUG] select << begin [level=1, statement=select]
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.tree.FromElement] [http-nio-8080-exec-8] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (generatedAlias0) -> user0_
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [http-nio-8080-exec-8] [60] [DEBUG] Resolved : generatedAlias0 -> user0_.user_id
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [http-nio-8080-exec-8] [60] [DEBUG] Resolved : generatedAlias0 -> user0_.user_id
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.tree.DotNode] [http-nio-8080-exec-8] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@2355b10f
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [http-nio-8080-exec-8] [60] [DEBUG] Resolved : generatedAlias0.email -> user0_.email
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [http-nio-8080-exec-8] [128] [DEBUG] select : finishing up [level=1, statement=select]
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.HqlSqlWalker] [http-nio-8080-exec-8] [747] [DEBUG] processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.email user0_.user_id email ) ? ) ) )
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.util.JoinProcessor] [http-nio-8080-exec-8] [192] [DEBUG] Using FROM fragment [user user0_]
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [http-nio-8080-exec-8] [132] [DEBUG] select >> end [level=1, statement=select]
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-8] [269] [DEBUG] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_10_' {alias=generatedAlias0, className=dawid.app.user.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.activation_code as activati2_10_, user0_.active as active3_10_, user0_.email as email4_10_, user0_.password as password5_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2355b10f}

[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.ErrorCounter] [http-nio-8080-exec-8] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-8] [251] [DEBUG] HQL: select generatedAlias0 from dawid.app.user.User as generatedAlias0 where generatedAlias0.email=:param0
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [http-nio-8080-exec-8] [252] [DEBUG] SQL: select user0_.user_id as user_id1_10_, user0_.activation_code as activati2_10_, user0_.active as active3_10_, user0_.email as email4_10_, user0_.password as password5_10_ from user user0_ where user0_.email=?
[2019-06-05 16:45:11 ] [org.hibernate.hql.internal.ast.ErrorCounter] [http-nio-8080-exec-8] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:45:11 ] [org.hibernate.engine.jdbc.spi.SqlStatementLogger] [http-nio-8080-exec-8] [92] [DEBUG] select user0_.user_id as user_id1_10_, user0_.activation_code as activati2_10_, user0_.active as active3_10_, user0_.email as email4_10_, user0_.password as password5_10_ from user user0_ where user0_.email=?
[2019-06-05 16:45:11 ] [org.jboss.logging.DelegatingBasicLogger] [http-nio-8080-exec-8] [384] [DEBUG] Result set row: 0
[2019-06-05 16:45:11 ] [org.hibernate.loader.Loader] [http-nio-8080-exec-8] [1533] [DEBUG] Result row: EntityKey[dawid.app.user.User#23]
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-8] [144] [DEBUG] Resolving associations for [dawid.app.user.User#23]
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-8] [287] [DEBUG] Done materializing entity [dawid.app.user.User#23]
[2019-06-05 16:45:11 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-8] [66] [DEBUG] committing
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [132] [DEBUG] Processing flush-time cascades
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [174] [DEBUG] Dirty checking collections
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-8] [206] [DEBUG] Collection found: [dawid.app.user.User.groups#23], was: [dawid.app.user.User.groups#23] (uninitialized)
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-8] [206] [DEBUG] Collection found: [dawid.app.user.User.roles#23], was: [dawid.app.user.User.roles#23] (uninitialized)
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [106] [DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [113] [DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [102] [DEBUG] Listing entities:
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [109] [DEBUG] dawid.app.user.User{password=$2a$10$wGqE9ecK3pKGaEFH7CXdS.Zrj1WLJkOeXh.8sZojB998Iva8kAyYO, roles=<uninitialized>, active=1, groups=<uninitialized>, id=23, activationCode=2q22VOrd93L1Rivk4rb2iGnVjyf82Xv9, email=dawid.krawczyk532@gmail.com}
[2019-06-05 16:45:11 ] [org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer] [http-nio-8080-exec-8] [73] [DEBUG] Loading collection: [dawid.app.user.User.roles#23]
[2019-06-05 16:45:11 ] [org.hibernate.engine.jdbc.spi.SqlStatementLogger] [http-nio-8080-exec-8] [92] [DEBUG] select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 16:45:11 ] [org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl] [http-nio-8080-exec-8] [161] [DEBUG] Preparing collection intializer : [dawid.app.user.User.roles#23]
[2019-06-05 16:45:11 ] [org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl] [http-nio-8080-exec-8] [120] [DEBUG] Starting ResultSet row #0
[2019-06-05 16:45:11 ] [org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl] [http-nio-8080-exec-8] [59] [DEBUG] Found row of collection: [dawid.app.user.User.roles#23]
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-8] [144] [DEBUG] Resolving associations for [dawid.app.user.Role#2]
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.TwoPhaseLoad] [http-nio-8080-exec-8] [287] [DEBUG] Done materializing entity [dawid.app.user.Role#2]
[2019-06-05 16:45:11 ] [org.jboss.logging.DelegatingBasicLogger] [http-nio-8080-exec-8] [394] [DEBUG] 1 collections were found in result set for role: dawid.app.user.User.roles
[2019-06-05 16:45:11 ] [org.hibernate.engine.loading.internal.CollectionLoadContext] [http-nio-8080-exec-8] [265] [DEBUG] Collection fully initialized: [dawid.app.user.User.roles#23]
[2019-06-05 16:45:11 ] [org.jboss.logging.DelegatingBasicLogger] [http-nio-8080-exec-8] [394] [DEBUG] 1 collections initialized for role: dawid.app.user.User.roles
[2019-06-05 16:45:11 ] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [http-nio-8080-exec-8] [84] [DEBUG] HHH000387: ResultSet's statement was not registered
[2019-06-05 16:45:11 ] [org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer] [http-nio-8080-exec-8] [105] [DEBUG] Done loading collection
[2019-06-05 16:45:11 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-8] [55] [DEBUG] begin
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [132] [DEBUG] Processing flush-time cascades
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [174] [DEBUG] Dirty checking collections
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-8] [206] [DEBUG] Collection found: [dawid.app.user.User.groups#23], was: [dawid.app.user.User.groups#23] (uninitialized)
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-8] [189] [DEBUG] Collection found: [dawid.app.user.User.roles#23], was: [dawid.app.user.User.roles#23] (initialized)
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [106] [DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [113] [DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [102] [DEBUG] Listing entities:
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [109] [DEBUG] dawid.app.user.Role{role=ROLE_USER, id=2}
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [109] [DEBUG] dawid.app.user.User{password=$2a$10$wGqE9ecK3pKGaEFH7CXdS.Zrj1WLJkOeXh.8sZojB998Iva8kAyYO, roles=[dawid.app.user.Role#2], active=1, groups=<uninitialized>, id=23, activationCode=2q22VOrd93L1Rivk4rb2iGnVjyf82Xv9, email=dawid.krawczyk532@gmail.com}
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [132] [DEBUG] Processing flush-time cascades
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [174] [DEBUG] Dirty checking collections
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-8] [206] [DEBUG] Collection found: [dawid.app.user.User.groups#23], was: [dawid.app.user.User.groups#23] (uninitialized)
[2019-06-05 16:45:11 ] [org.hibernate.engine.internal.Collections] [http-nio-8080-exec-8] [189] [DEBUG] Collection found: [dawid.app.user.User.roles#23], was: [dawid.app.user.User.roles#23] (initialized)
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [106] [DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2019-06-05 16:45:11 ] [org.hibernate.event.internal.AbstractFlushingEventListener] [http-nio-8080-exec-8] [113] [DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [102] [DEBUG] Listing entities:
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [109] [DEBUG] dawid.app.user.Role{role=ROLE_USER, id=2}
[2019-06-05 16:45:11 ] [org.hibernate.internal.util.EntityPrinter] [http-nio-8080-exec-8] [109] [DEBUG] dawid.app.user.User{password=$2a$10$wGqE9ecK3pKGaEFH7CXdS.Zrj1WLJkOeXh.8sZojB998Iva8kAyYO, roles=[dawid.app.user.Role#2], active=1, groups=<uninitialized>, id=23, activationCode=2q22VOrd93L1Rivk4rb2iGnVjyf82Xv9, email=dawid.krawczyk532@gmail.com}
[2019-06-05 16:45:11 ] [org.hibernate.engine.jdbc.spi.SqlStatementLogger] [http-nio-8080-exec-8] [92] [DEBUG] select * from all_group inner join group_user gu on all_group.group_id=group_user.group_id inner join user on(group_user.user_id=?
[2019-06-05 16:45:11 ] [org.hibernate.loader.Loader] [http-nio-8080-exec-8] [2139] [DEBUG] bindNamedParameters() 23 -> user_id [1]
[2019-06-05 16:45:11 ] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8080-exec-8] [124] [DEBUG] could not extract ResultSet [n/a]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1966)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2168)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893)
	at org.hibernate.loader.Loader.doQuery(Loader.java:938)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)
	at org.hibernate.loader.Loader.doList(Loader.java:2692)
	at org.hibernate.loader.Loader.doList(Loader.java:2675)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)
	at org.hibernate.loader.Loader.list(Loader.java:2502)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:335)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2200)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1016)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:152)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:590)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy150.findByUserId(Unknown Source)
	at dawid.app.user.group.GroupServiceImpl.findByUserID(GroupServiceImpl.java:22)
	at dawid.app.user.group.GroupServiceImpl$$FastClassBySpringCGLIB$$18699a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at dawid.app.user.group.GroupServiceImpl$$EnhancerBySpringCGLIB$$46edbb87.findByUserID(<generated>)
	at dawid.app.post.PostController.addComment(PostController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 16:45:11 ] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8080-exec-8] [129] [WARN ] SQL Error: 1064, SQLState: 42000
[2019-06-05 16:45:11 ] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [http-nio-8080-exec-8] [131] [ERROR] You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 1
[2019-06-05 16:45:11 ] [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl] [http-nio-8080-exec-8] [271] [DEBUG] JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:271)
	at org.hibernate.engine.transaction.internal.TransactionImpl.setRollbackOnly(TransactionImpl.java:143)
	at org.hibernate.Transaction.markRollbackOnly(Transaction.java:68)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:364)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:273)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:150)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:157)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1423)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:590)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy150.findByUserId(Unknown Source)
	at dawid.app.user.group.GroupServiceImpl.findByUserID(GroupServiceImpl.java:22)
	at dawid.app.user.group.GroupServiceImpl$$FastClassBySpringCGLIB$$18699a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at dawid.app.user.group.GroupServiceImpl$$EnhancerBySpringCGLIB$$46edbb87.findByUserID(<generated>)
	at dawid.app.post.PostController.addComment(PostController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 16:45:11 ] [org.hibernate.engine.transaction.internal.TransactionImpl] [http-nio-8080-exec-8] [98] [DEBUG] rolling back
[2019-06-05 16:45:11 ] [org.apache.juli.logging.DirectJDKLog] [http-nio-8080-exec-8] [182] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1966)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2168)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893)
	at org.hibernate.loader.Loader.doQuery(Loader.java:938)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)
	at org.hibernate.loader.Loader.doList(Loader.java:2692)
	at org.hibernate.loader.Loader.doList(Loader.java:2675)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)
	at org.hibernate.loader.Loader.list(Loader.java:2502)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:335)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2200)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1016)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:152)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:590)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy150.findByUserId(Unknown Source)
	at dawid.app.user.group.GroupServiceImpl.findByUserID(GroupServiceImpl.java:22)
	at dawid.app.user.group.GroupServiceImpl$$FastClassBySpringCGLIB$$18699a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at dawid.app.user.group.GroupServiceImpl$$EnhancerBySpringCGLIB$$46edbb87.findByUserID(<generated>)
	at dawid.app.post.PostController.addComment(PostController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2019-06-05 16:45:49 ] [org.springframework.context.support.AbstractApplicationContext] [Thread-4] [993] [INFO ] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c92458a: startup date [Wed Jun 05 16:43:26 CEST 2019]; root of context hierarchy
[2019-06-05 16:45:49 ] [org.springframework.jmx.export.MBeanExporter] [Thread-4] [451] [INFO ] Unregistering JMX-exposed beans on shutdown
[2019-06-05 16:45:49 ] [org.springframework.jmx.support.MBeanRegistrationSupport] [Thread-4] [185] [INFO ] Unregistering JMX-exposed beans
[2019-06-05 16:45:49 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-4] [597] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:45:49 ] [org.hibernate.internal.SessionFactoryImpl] [Thread-4] [741] [DEBUG] HHH000031: Closing
[2019-06-05 16:45:49 ] [org.hibernate.engine.spi.CascadeStyles] [Thread-4] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[2019-06-05 16:45:49 ] [org.hibernate.service.internal.AbstractServiceRegistryImpl] [Thread-4] [414] [DEBUG] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2019-06-05 16:45:49 ] [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] [Thread-4] [295] [DEBUG] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2019-06-05 16:45:49 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [381] [INFO ] HikariPool-1 - Shutdown initiated...
[2019-06-05 16:45:49 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [383] [INFO ] HikariPool-1 - Shutdown completed.
[2019-06-05 16:45:58 ] [org.springframework.boot.StartupInfoLogger] [main] [50] [INFO ] Starting Application on Dawid-PC with PID 7160 (D:\SocialMedia\appSocialNetwork\target\classes started by Dawid in D:\SocialMedia\appSocialNetwork)
[2019-06-05 16:45:58 ] [org.springframework.boot.SpringApplication] [main] [662] [INFO ] No active profile set, falling back to default profiles: default
[2019-06-05 16:45:58 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [background-preinit] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:45:58 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:45:58 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:45:58 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:45:58 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:45:58 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:45:58 ] [org.springframework.context.support.AbstractApplicationContext] [main] [590] [INFO ] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@240f44d7: startup date [Wed Jun 05 16:45:58 CEST 2019]; root of context hierarchy
[2019-06-05 16:46:00 ] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] [main] [153] [INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-06-05 16:46:01 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6fb2edcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:01 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$860b609] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:01 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:01 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@abadb9f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:01 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2d3558bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:01 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:01 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$ef333b01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:01 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [91] [INFO ] Tomcat initialized with port(s): 8080 (http)
[2019-06-05 16:46:01 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Initializing ProtocolHandler ["http-nio-8080"]
[2019-06-05 16:46:01 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting service [Tomcat]
[2019-06-05 16:46:01 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting Servlet Engine: Apache Tomcat/8.5.32
[2019-06-05 16:46:01 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;.]
[2019-06-05 16:46:02 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[2019-06-05 16:46:02 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] Initializing Spring embedded WebApplicationContext
[2019-06-05 16:46:02 ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [localhost-startStop-1] [285] [INFO ] Root WebApplicationContext: initialization completed in 3304 ms
[2019-06-05 16:46:02 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-06-05 16:46:02 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-06-05 16:46:02 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-06-05 16:46:02 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'requestContextFilter' to: [/*]
[2019-06-05 16:46:02 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-06-05 16:46:02 ] [org.springframework.boot.web.servlet.ServletRegistrationBean] [localhost-startStop-1] [187] [INFO ] Servlet dispatcherServlet mapped to [/]
[2019-06-05 16:46:02 ] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2019-06-05 16:46:03 ] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2019-06-05 16:46:03 ] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] [361] [INFO ] Building JPA container EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:46:03 ] [org.hibernate.jpa.internal.util.LogHelper] [main] [102] [DEBUG] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@5826c3ee
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SocialMedia/appSocialNetwork/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		dawid.app.post.comment.Comment
		dawid.app.post.Post
		dawid.app.user.group.AllGroup
		dawid.app.user.photo.Photo
		dawid.app.user.Role
		dawid.app.user.User
		dawid.app.user.userProfile.FreeTime
		dawid.app.user.userProfile.PhysicalActivity
		dawid.app.user.userProfile.UserProfile]
	Mapping files names []
	Properties []
[2019-06-05 16:46:03 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2019-06-05 16:46:03 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2019-06-05 16:46:03 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2019-06-05 16:46:03 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2019-06-05 16:46:03 ] [org.hibernate.Version] [main] [45] [INFO ] HHH000412: Hibernate Core {5.2.17.Final}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Environment] [main] [213] [INFO ] HHH000206: hibernate.properties not found
[2019-06-05 16:46:03 ] [org.hibernate.service.spi.ServiceBinding] [main] [68] [DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2019-06-05 16:46:03 ] [org.hibernate.cache.internal.RegionFactoryInitiator] [main] [75] [DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2019-06-05 16:46:03 ] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [66] [INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@36c01dd7
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@36c01dd7
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@36c01dd7
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6fdae609
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@50d2af3f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@738e057f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7bbe7c0d
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7bbe7c0d
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7bbe7c0d
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@3cac471f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@3cac471f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3cac471f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@5410e781
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@5410e781
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5410e781
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@341fee09
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@341fee09
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@341fee09
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@22b5da62
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@22b5da62
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22b5da62
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@86d75d2
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@86d75d2
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86d75d2
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4a830f4a
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4a830f4a
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72511a9e
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72511a9e
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration string -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7e43c916
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a5d826d
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration url -> org.hibernate.type.UrlType@3820e787
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@3820e787
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@1ff35317
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1ff35317
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@3df70c0f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3df70c0f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c6bc559
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c6bc559
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@335bbf46
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@335bbf46
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d9b5a78
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d9b5a78
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3047757e
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3047757e
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@588d6a69
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@588d6a69
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c7f8a45
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c7f8a45
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration date -> org.hibernate.type.DateType@6e2d5dfb
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e2d5dfb
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration time -> org.hibernate.type.TimeType@420b1e9e
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@420b1e9e
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@738d396
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@738d396
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@738d396
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9dc9262
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@79e36705
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@79e36705
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@79e36705
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64c2b403
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@3ddbd536
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ddbd536
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@54ba3e73
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54ba3e73
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@17ec25ac
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17ec25ac
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration class -> org.hibernate.type.ClassType@414928f5
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@414928f5
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c684f83
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c684f83
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4743d127
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@18e0f561
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@18e0f561
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@18e0f561
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b69ce83
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b69ce83
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b69ce83
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@2d50b421
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration image -> org.hibernate.type.ImageType@65edb0c3
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@581b5365
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@581b5365
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@581b5365
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@40327cdc
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@40327cdc
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@40327cdc
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration text -> org.hibernate.type.TextType@6ff40df
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@75201f1
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@666d6a9c
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@666d6a9c
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75d46ce4
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@460f4de8
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@460f4de8
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@14fc856c
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@14fc856c
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a25c24b
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@726d577a
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@ab38f58
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@5de4800f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5de4800f
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@35d2ba63
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ccfb02e
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@50333d5d
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2674606c
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@655c763
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@372a4947
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7eba432a
[2019-06-05 16:46:03 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7b483b91
[2019-06-05 16:46:03 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [72] [DEBUG] Database ->
       name : MySQL
    version : 5.5.5-10.1.38-MariaDB
      major : 5
      minor : 5
[2019-06-05 16:46:03 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [83] [DEBUG] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[2019-06-05 16:46:03 ] [org.jboss.logging.DelegatingBasicLogger] [main] [389] [DEBUG] JDBC version : 4.0
[2019-06-05 16:46:03 ] [org.hibernate.dialect.Dialect] [main] [157] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2019-06-05 16:46:03 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [117] [DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[2019-06-05 16:46:03 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [191] [DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [84] [DEBUG]     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:46:03 ] [org.hibernate.boot.model.relational.Namespace] [main] [47] [DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.User
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name User
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.User on table user
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=activation_code, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property activationCode with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:activationCode]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for activationCode
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property activationCode
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=active, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property active with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:active]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for active
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property active
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property email with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:email]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for email
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property email
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.groups
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groups
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property password with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:password]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for password
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property password
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.roles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property roles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.Post
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Post
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.Post on table post
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property content with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:content]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for content
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property content
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupId with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:groupId]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:photoId]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postDate with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postDate]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_title, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postTitle with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postTitle]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postTitle
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postTitle
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postUserId with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postUserId]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postUserId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postUserId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userDislike with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userDislike]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userDislike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userDislike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_like, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userLike with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userLike]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userLike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userLike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name FreeTime
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.FreeTime on table free_time
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:name]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name PhysicalActivity
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.PhysicalActivity on table physical_activity
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:name]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.group.AllGroup
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name AllGroup
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.group.AllGroup on table all_group
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupID with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:groupID]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupID
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupID
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_physical_activities, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property CommonPhysicalActivities with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:CommonPhysicalActivities]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for CommonPhysicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property CommonPhysicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_city, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonCity with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonCity]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonCity
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonCity
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_free_time, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonFreeTime with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonFreeTime]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonFreeTime
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonFreeTime
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:name]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.Role
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Role
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.Role on table role
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property role with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:role]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for role
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property role
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.comment.Comment
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Comment
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.comment.Comment on table comment
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_content, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentContent with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentContent]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentContent
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentContent
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDate with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDate]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDislike with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDislike]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDislike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDislike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_like, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentLike with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentLike]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentLike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentLike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_title, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentTitle with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentTitle]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentTitle
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentTitle
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentUserId with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentUserId]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentUserId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentUserId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:photoId]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postId with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:postId]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.photo.Photo
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Photo
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.photo.Photo on table photo
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=data, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property data with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:data]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for data
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property data
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:description]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:name]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=profile_photo, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property profilePhoto with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:profilePhoto]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for profilePhoto
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property profilePhoto
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userId with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:userId]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.UserProfile on table user_profile
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:id]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=all_groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='allGroups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property allGroups
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=birth_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property birthDate with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:birthDate]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for birthDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property birthDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=characters, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property character with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:character]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for character
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property character
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=city, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property city with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:city]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for city
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property city
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:description]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=free_times_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='freeTimes_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='free_time_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property freeTimes
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=hobby, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property hobby with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:hobby]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for hobby
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property hobby
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=language, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property language with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:language]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for language
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property language
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property lastName with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:lastName]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for lastName
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property lastName
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:name]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=number, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property number with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:number]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for number
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property number
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=physical_activities_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physicalActivities_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physical_activity_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property physicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property sex with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:sex]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for sex
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property sex
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=who_search, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property whoSearch with lazy=false
[2019-06-05 16:46:03 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:whoSearch]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for whoSearch
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property whoSearch
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for activationCode
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for active
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for email
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for password
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for content
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postTitle
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postUserId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userDislike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userLike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupID
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for CommonPhysicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonCity
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonFreeTime
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for role
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentContent
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDislike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentLike
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentTitle
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentUserId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for data
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for profilePhoto
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userId
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for birthDate
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for character
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for city
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for hobby
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for language
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for lastName
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for number
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for sex
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for whoSearch
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [all_group]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [comment_id] to be non-null as it is part of the primary key for table [comment]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [photo_id] to be non-null as it is part of the primary key for table [photo]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: physical_activity_id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: free_time_id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: group_id, element: user_id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.roles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.roles
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: role_id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.groups
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.groups
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:03 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: free_time_id, element: user_profile_id
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:03 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:03 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: physical_activity_id, element: user_profile_id
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 16:46:03 ] [org.hibernate.internal.SessionFactoryImpl] [main] [199] [DEBUG] Building session factory
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [69] [DEBUG] SessionFactory name : null
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [70] [DEBUG] Automatic flush during beforeCompletion(): enabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [71] [DEBUG] Automatic session close at end of transaction: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [73] [DEBUG] Statistics: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [75] [DEBUG] Deleted entity synthetic identifier rollback: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [76] [DEBUG] Default entity-mode: pojo
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [77] [DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [78] [DEBUG] Allow initialization of lazy state outside session : disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [80] [DEBUG] Using BatchFetchStyle : LEGACY
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [81] [DEBUG] Default batch fetch size: -1
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [82] [DEBUG] Maximum outer join fetch depth: 2
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [83] [DEBUG] Default null ordering: NONE
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [84] [DEBUG] Order SQL updates by primary key: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [85] [DEBUG] Order SQL inserts for batching: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [87] [DEBUG] multi-tenancy strategy : NONE
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [89] [DEBUG] JTA Track by Thread: enabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [91] [DEBUG] Query language substitutions: {}
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [92] [DEBUG] JPA query language strict compliance: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [93] [DEBUG] Named query checking : enabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [95] [DEBUG] Second-level cache: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [96] [DEBUG] Second-level query cache: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [97] [DEBUG] Second-level query cache factory: null
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [98] [DEBUG] Second-level cache region prefix: null
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [99] [DEBUG] Optimize second-level cache for minimal puts: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [100] [DEBUG] Structured second-level cache entries: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [101] [DEBUG] Second-level cache direct-reference entries: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [102] [DEBUG] Automatic eviction of collection cache: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [104] [DEBUG] JDBC batch size: 15
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [105] [DEBUG] JDBC batch updates for versioned data: enabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [106] [DEBUG] Scrollable result sets: enabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [107] [DEBUG] Wrap result sets: disabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [108] [DEBUG] JDBC3 getGeneratedKeys(): enabled
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [109] [DEBUG] JDBC result set fetch size: null
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [110] [DEBUG] Connection release mode: ON_CLOSE
[2019-06-05 16:46:03 ] [org.hibernate.cfg.Settings] [main] [111] [DEBUG] Generate SQL with comments: disabled
[2019-06-05 16:46:03 ] [org.hibernate.internal.SessionFactoryImpl] [main] [257] [DEBUG] Session factory constructed with filter configurations : {}
[2019-06-05 16:46:03 ] [org.hibernate.internal.SessionFactoryImpl] [main] [258] [DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, user.country.format=PL, maven.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\../conf, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher spring-boot:run, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5790271d, javax.persistence.sharedCache.mode=UNSPECIFIED, maven.home=C:\Program Files\Java\apache-maven-3.6.0\bin\.., sun.cpu.endian=little, user.home=C:\Users\Dawid, user.language=en, sun.stderr.encoding=cp852, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, file.separator=\, sun.stdout.encoding=cp852, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_201-b09, user.name=Dawid, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, guice.disable.misplaced.annotation.check=true, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dawid\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\Dawid\AppData\Local\Temp\tomcat.1691248358611385722.8080, java.version=1.8.0_201, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=D:\SocialMedia\appSocialNetwork, os.arch=amd64, maven.multiModuleProjectDirectory=D:\SocialMedia\appSocialNetwork, PID=7160, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=pl, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, catalina.base=C:\Users\Dawid\AppData\Local\Temp\tomcat.1691248358611385722.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@30cd771a, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.201-b09, classworlds.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\..\bin\m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, library.jansi.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\lib\jansi-native, java.class.version=52.0}
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 16:46:03 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:46:03 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:46:03 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:04 ] [org.hibernate.secure.spi.JaccIntegrator] [main] [80] [DEBUG] Skipping JACC integration as it was not enabled
[2019-06-05 16:46:04 ] [org.hibernate.engine.spi.CascadeStyles] [main] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[2019-06-05 16:46:04 ] [org.hibernate.internal.SessionFactoryImpl] [main] [297] [DEBUG] Instantiated session factory
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:46:04 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (free_time_id, user_profile_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set user_profile_id=? where free_time_id=? and user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where free_time_id=? and user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (physical_activity_id, user_profile_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set user_profile_id=? where physical_activity_id=? and user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where physical_activity_id=? and user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (user_profile_id, physical_activity_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set physical_activity_id=? where user_profile_id=? and physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where user_profile_id=? and physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (user_profile_id, free_time_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set free_time_id=? where user_profile_id=? and free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where user_profile_id=? and free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.roles
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into user_role (user_id, role_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update user_role set role_id=? where user_id=? and role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from user_role where user_id=? and role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from user_role where user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (group_id, user_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set user_id=? where group_id=? and user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where group_id=? and user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.groups
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.User
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_id from user where user_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select user_.user_id, user_.activation_code as activati2_10_, user_.active as active3_10_, user_.email as email4_10_, user_.password as password5_10_ from user user_ where user_.user_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user (activation_code, active, email, password, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user set activation_code=?, active=?, email=?, password=? where user_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user where user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into user (activation_code, active, email, password) values (?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9c187b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@535b85c8]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@461faab8]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50b3738f]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc2594b]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [NONE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad8fb93]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55df597]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241b27cb]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@93244b8]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a82affd]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20191a77]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@464dcc44]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19ef7e37]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71cd15df]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fda862]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@efa6f15]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@757c3599]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e092dec]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63566fff]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a382ac0]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2efc10e3]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9948bc8]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7281de10]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb4b3ab]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c9dfb66]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@217afbf6]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44c70969]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27629c5c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5131760d]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322177d4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [FORCE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e51acb8]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2739c9fd]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1f8519]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5de8ce0e]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32af2428]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b3075a1]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22e6250f]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6923db1f]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31e626e7]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b67dc4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33ebea80]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44b6e3a4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577dfeab]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b2ea12e]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46925ba6]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354a2b13]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4393e4e7]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1788d858]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@737e6b09]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e44297a]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ac5489]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@239119d0]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c11fb21]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c89ea36]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27e1f6c3]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.Post
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select post_id from post where post_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select post_.post_id, post_.content as content2_8_, post_.group_id as group_id3_8_, post_.photo_id as photo_id4_8_, post_.post_date as post_dat5_8_, post_.post_title as post_tit6_8_, post_.post_user_id as post_use7_8_, post_.user_dislike as user_dis8_8_, post_.user_like as user_lik9_8_ from post post_ where post_.post_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like, post_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update post set content=?, group_id=?, photo_id=?, post_date=?, post_title=?, post_user_id=?, user_dislike=?, user_like=? where post_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from post where post_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bf30b65]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [NONE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f450e9b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2634a101]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc68183]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_NOWAIT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@606d49f3]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_SKIPLOCKED]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b9d24a]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [FORCE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f373435]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ee4057c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_WRITE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33cd8567]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70155659]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16834102]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select free_time_id from free_time where free_time_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select freetime_.free_time_id, freetime_.free_time_name as free_tim2_2_ from free_time freetime_ where freetime_.free_time_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into free_time (free_time_name, free_time_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update free_time set free_time_name=? where free_time_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from free_time where free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into free_time (free_time_name) values (?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41bfcc04]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5484cbf4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@587f9861]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [NONE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671fa086]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5520ec8e]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7138dadb]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b395fea]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@548c1cf4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63d5fabc]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b22f23]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2606b5af]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a4aabc9]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_NOWAIT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39525a94]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@736f7b6a]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c44822d]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_SKIPLOCKED]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67e9f7cb]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d2ad09]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fef0434]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [FORCE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7790e7ad]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b85ef38]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cec86d8]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c31b367]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c8fd706]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@748d4e09]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_WRITE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35667174]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@475c1548]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@593ff6ac]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f54c12e]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@235f4fe1]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57347b0]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c57ab81]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b02bad]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4961b80c]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select physical_activity_id from physical_activity where physical_activity_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select physicalac_.physical_activity_id, physicalac_.physical_activity_name as physical2_6_ from physical_activity physicalac_ where physicalac_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into physical_activity (physical_activity_name, physical_activity_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update physical_activity set physical_activity_name=? where physical_activity_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from physical_activity where physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into physical_activity (physical_activity_name) values (?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ab1902]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1af2446f]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e173ee5]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [NONE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea45f2c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ca641bf]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ba1b6d8]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4750c9bf]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a0ecc2]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66518d78]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278dbd3c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@312081c4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b70e0d5]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_NOWAIT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@115ec2da]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ff64f62]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43dc6201]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_SKIPLOCKED]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24f320b2]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d5028d0]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dbc9711]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [FORCE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5077cca4]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b8dc7a5]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7280c3da]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cfc23c2]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b846c]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7111090a]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_WRITE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c8ec6d9]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@337ec013]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a5ec62f]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@301c79b3]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6447ed41]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58943058]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b161b18]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1722a916]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4d5d5a]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.group.AllGroup
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select group_id from all_group where group_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select allgroup_.group_id, allgroup_.common_physical_activities as common_p2_0_, allgroup_.common_city as common_c3_0_, allgroup_.common_free_time as common_f4_0_, allgroup_.name as name5_0_ from all_group allgroup_ where allgroup_.group_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into all_group (common_physical_activities, common_city, common_free_time, name, group_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update all_group set common_physical_activities=?, common_city=?, common_free_time=?, name=? where group_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from all_group where group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into all_group (common_physical_activities, common_city, common_free_time, name) values (?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b85550]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38aa0620]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c892be2]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [NONE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b8cfbf6]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a8778d2]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa4985b]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@533b9312]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27d74218]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c0a70f9]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1326d369]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@475dc218]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89fffb2]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_NOWAIT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d87d853]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62e46657]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@157167d6]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_SKIPLOCKED]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a7706b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d7bb8de]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@132a3170]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [FORCE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e332f56]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57d594d2]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15b68ee9]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c84a96]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1db16904]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c517d9d]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_WRITE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2d0c7b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64c5ba59]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534f8ec9]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67350e0f]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cc16bac]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2357853b]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5db228]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56d53a3f]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49341383]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.Role
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select role_id from role where role_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select role_.role_id, role_.role as role2_9_ from role role_ where role_.role_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into role (role, role_id) values (?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update role set role=? where role_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from role where role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into role (role) values (?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4879347f]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [NONE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13552a06]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bcf9205]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ace3a81]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_NOWAIT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@303a4b3]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_SKIPLOCKED]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41661d18]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [FORCE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d73238]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236bdbc4]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d46ad65]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76fe615d]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2eb852]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a39a53]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6117a0d6]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f07a16a]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f1bec0]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6426a750]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503a1a31]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759b5b23]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225009ad]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a5a7eeb]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4105b8fe]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@611cdc1]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff2c96b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32eaba7f]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a3a0cf2]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f128e6e]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@570e6006]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43654896]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a059dc]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a11f9a]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2c8823]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b17245]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a91b152]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 16:46:04 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 16:46:04 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6663e1f3]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13ccf8cd]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b15267c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52803694]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109347c0]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@646dcf8f]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66c923b8]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352e9d63]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3592d088]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ae9e161]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b6db2da]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f1ad38f]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@caf4074]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59984a69]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd5c8e2]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60f0a66d]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b206318]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a732646]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b59523c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e7f40f4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@663fd880]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@455d8317]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@103867b2]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@85b56ed]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21b729ca]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c971af]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@219f9db3]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73a15b53]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b40d594]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f92f8bb]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769051d9]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b11d6ea]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25389797]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d77f4ab]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@491d6445]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cae5d0a]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f9b8489]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d86e073]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@336eb8c4]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ae495b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3272202b]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185dcb6e]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eb3f839]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ea492c8]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285434c9]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69e773ca]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307b057d]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ab3f368]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c8748b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1163361b]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ca61d57]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c4a4864]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24917018]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@122d39c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1df22a4a]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638548f8]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c3be520]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@573ea05a]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb5f0cd]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db414de]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e6ae51]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67f8eac7]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56fa4d6d]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc5b188]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b2f71f6]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f3ad0db]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79256d45]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a6313d2]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a137da9]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5356dc38]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bdc52]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@521b65cc]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3749c4ab]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68bf375c]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ebc1d93]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2700288d]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e95cc5a]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6299b67f]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b742b5]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@430de324]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11dcfd77]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4199fba1]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47be6955]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d190751]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18141120]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6dd521db]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5570b050]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fc54a14]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b526caf]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fcd5de7]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f6f847e]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67078f53]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b8bbb9]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e977946]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fa3685e]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38ba1f04]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2f61d5]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@460e08bc]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7118e861]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4febe28]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d5e01c]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fa85272]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@945fe06]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@238e268a]
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51d5933]
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:04 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:46:04 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 16:46:04 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 16:46:04 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 16:46:04 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 16:46:04 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3c5ba8b7
[2019-06-05 16:46:04 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: c62ced54-49ff-41bf-bd6d-01e6a13c4537 (<unnamed>)
[2019-06-05 16:46:04 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 16:46:04 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:46:04 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2ba08753
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@36287b53}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@36287b53}

[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:04 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@4025087c}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@4025087c}

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@4025087c}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@36287b53}

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@36287b53}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@4025087c}

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@4025087c}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@4025087c}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@36287b53}

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@6e2d5dfb
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@4025087c}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@36287b53}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@4025087c}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@6e2d5dfb}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@36287b53}

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@36287b53}

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@4025087c
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@18e0f561
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@4025087c}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@4025087c}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@18e0f561}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@36287b53}

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@36287b53
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@36287b53}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:05 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:06 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 16:46:06 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 16:46:06 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 16:46:06 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 16:46:06 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 16:46:06 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
[2019-06-05 16:46:06 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24b7b53c, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b66796f, org.springframework.security.web.header.HeaderWriterFilter@26b93634, org.springframework.security.web.authentication.logout.LogoutFilter@5baa7d90, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@a784d72, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@661ae237, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@457215f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@189f1c9a, org.springframework.security.web.session.SessionManagementFilter@5217dbd1, org.springframework.security.web.access.ExceptionTranslationFilter@584fc476, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5d92a93]
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:46:06 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [148] [DEBUG] Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [180] [DEBUG] Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ConfigurationImpl] [main] [194] [DEBUG] Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [53] [DEBUG] Trying to load META-INF/validation.xml via user class loader
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:46:06 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@240f44d7: startup date [Wed Jun 05 16:45:58 CEST 2019]; root of context hierarchy
[2019-06-05 16:46:06 ] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] [main] [235] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminMainPage()
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openAdminAllUsersPage(int,org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/search/{searchWord}/{page}]}" onto public java.lang.String dawid.app.admin.AdminPageController.openSearchUsersPage(java.lang.String,int,org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/importusers]}" onto public java.lang.String dawid.app.admin.AdminPageController.showUploadPageFromXML(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/upload]}" onto public java.lang.String dawid.app.admin.AdminPageController.importUsersFromXML(org.springframework.web.multipart.MultipartFile)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/updateuser/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.updateUser(int,dawid.app.user.User)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/delete/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.deleteUser(int)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/admin/users/edit/{id}]}" onto public java.lang.String dawid.app.admin.AdminPageController.getUserToEdit(int,org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/error]}" onto public java.lang.String dawid.app.mainController.ErrorPageController.showErrorPage()
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/login]}" onto public java.lang.String dawid.app.mainController.LoginPageController.showLoginPage()
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || /index]}" onto public java.lang.String dawid.app.mainController.MainPageController.showMainPage(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addpost]}" onto public java.lang.String dawid.app.post.PostController.addComment(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/addnewpost]}" onto public java.lang.String dawid.app.post.PostController.addNewPost(dawid.app.post.Post,org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/comment]}" onto public java.lang.String dawid.app.post.PostController.commentView(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editpassword]}" onto public java.lang.String dawid.app.user.ProfilController.editUserPassword(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/editprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserData(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwo]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwo(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/changephoto]}" onto public java.lang.String dawid.app.user.ProfilController.changePhoto(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profil]}" onto public java.lang.String dawid.app.user.ProfilController.showUserProfilePage(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updatepass]}" onto public java.lang.String dawid.app.user.ProfilController.changeUSerPassword(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/updateprofil]}" onto public java.lang.String dawid.app.user.ProfilController.changeUserDataAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registersteptwoend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepTwoEnd(dawid.app.user.userProfile.UserProfile,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthree]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepthree(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepthreeend]}" onto public java.lang.String dawid.app.user.ProfilController.registerStepThreeEnd(dawid.app.user.userProfile.UserProfile,dawid.app.user.photo.Photo,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourth]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourth(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/registerstepfourthend]}" onto public java.lang.String dawid.app.user.ProfilController.registerstepfourthend(dawid.app.user.photo.Photo,org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/register]}" onto public java.lang.String dawid.app.user.RegisterController.registerForm(org.springframework.ui.Model)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/activatelink/{activationCode}]}" onto public java.lang.String dawid.app.user.RegisterController.activateAccount(java.lang.String,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/adduser]}" onto public java.lang.String dawid.app.user.RegisterController.registerAction(dawid.app.user.User,org.springframework.validation.BindingResult,org.springframework.ui.Model,java.util.Locale)
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping] [main] [373] [INFO ] Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2019-06-05 16:46:06 ] [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [main] [288] [INFO ] Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[2019-06-05 16:46:06 ] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [main] [61] [INFO ] Adding welcome page template: index
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] [main] [574] [INFO ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@240f44d7: startup date [Wed Jun 05 16:45:58 CEST 2019]; root of context hierarchy
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[2019-06-05 16:46:07 ] [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry] [main] [547] [INFO ] Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[2019-06-05 16:46:07 ] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] [main] [86] [INFO ] 

Using generated security password: f21d95eb-e660-4abb-a124-847b292bb22a

[2019-06-05 16:46:07 ] [org.springframework.jmx.export.MBeanExporter] [main] [433] [INFO ] Registering beans for JMX exposure on startup
[2019-06-05 16:46:07 ] [org.springframework.jmx.export.MBeanExporter] [main] [895] [INFO ] Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-06-05 16:46:07 ] [org.springframework.jmx.export.MBeanExporter] [main] [668] [INFO ] Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[2019-06-05 16:46:07 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting ProtocolHandler ["http-nio-8080"]
[2019-06-05 16:46:07 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Using a shared selector for servlet write/read
[2019-06-05 16:46:07 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [206] [INFO ] Tomcat started on port(s): 8080 (http) with context path ''
[2019-06-05 16:46:07 ] [org.springframework.boot.StartupInfoLogger] [main] [59] [INFO ] Started Application in 9.383 seconds (JVM running for 16.78)
[2019-06-05 16:46:40 ] [org.springframework.context.support.AbstractApplicationContext] [Thread-4] [993] [INFO ] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@240f44d7: startup date [Wed Jun 05 16:45:58 CEST 2019]; root of context hierarchy
[2019-06-05 16:46:40 ] [org.springframework.jmx.export.MBeanExporter] [Thread-4] [451] [INFO ] Unregistering JMX-exposed beans on shutdown
[2019-06-05 16:46:40 ] [org.springframework.jmx.support.MBeanRegistrationSupport] [Thread-4] [185] [INFO ] Unregistering JMX-exposed beans
[2019-06-05 16:46:40 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-4] [597] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:46:40 ] [org.hibernate.internal.SessionFactoryImpl] [Thread-4] [741] [DEBUG] HHH000031: Closing
[2019-06-05 16:46:40 ] [org.hibernate.engine.spi.CascadeStyles] [Thread-4] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[2019-06-05 16:46:40 ] [org.hibernate.service.internal.AbstractServiceRegistryImpl] [Thread-4] [414] [DEBUG] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2019-06-05 16:46:40 ] [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] [Thread-4] [295] [DEBUG] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2019-06-05 16:46:40 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [381] [INFO ] HikariPool-1 - Shutdown initiated...
[2019-06-05 16:46:40 ] [com.zaxxer.hikari.HikariDataSource] [Thread-4] [383] [INFO ] HikariPool-1 - Shutdown completed.
[2019-06-05 16:46:48 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [background-preinit] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:46:48 ] [org.springframework.boot.StartupInfoLogger] [main] [50] [INFO ] Starting Application on Dawid-PC with PID 5668 (D:\SocialMedia\appSocialNetwork\target\classes started by Dawid in D:\SocialMedia\appSocialNetwork)
[2019-06-05 16:46:48 ] [org.springframework.boot.SpringApplication] [main] [662] [INFO ] No active profile set, falling back to default profiles: default
[2019-06-05 16:46:48 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:46:48 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:46:48 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:46:48 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:46:48 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [background-preinit] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:46:48 ] [org.springframework.context.support.AbstractApplicationContext] [main] [590] [INFO ] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61a564c2: startup date [Wed Jun 05 16:46:48 CEST 2019]; root of context hierarchy
[2019-06-05 16:46:50 ] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] [main] [153] [INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-06-05 16:46:50 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fb877a69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:50 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$943542a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:50 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:50 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2b40cd2c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:50 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b909e555] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:50 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:50 ] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [main] [326] [INFO ] Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$7b07c79b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-06-05 16:46:51 ] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [91] [INFO ] Tomcat initialized with port(s): 8080 (http)
[2019-06-05 16:46:51 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Initializing ProtocolHandler ["http-nio-8080"]
[2019-06-05 16:46:51 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting service [Tomcat]
[2019-06-05 16:46:51 ] [org.apache.juli.logging.DirectJDKLog] [main] [180] [INFO ] Starting Servlet Engine: Apache Tomcat/8.5.32
[2019-06-05 16:46:51 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;.]
[2019-06-05 16:46:51 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[2019-06-05 16:46:51 ] [org.apache.juli.logging.DirectJDKLog] [localhost-startStop-1] [180] [INFO ] Initializing Spring embedded WebApplicationContext
[2019-06-05 16:46:51 ] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [localhost-startStop-1] [285] [INFO ] Root WebApplicationContext: initialization completed in 2434 ms
[2019-06-05 16:46:51 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-06-05 16:46:51 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2019-06-05 16:46:51 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2019-06-05 16:46:51 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'requestContextFilter' to: [/*]
[2019-06-05 16:46:51 ] [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean] [localhost-startStop-1] [245] [INFO ] Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-06-05 16:46:51 ] [org.springframework.boot.web.servlet.ServletRegistrationBean] [localhost-startStop-1] [187] [INFO ] Servlet dispatcherServlet mapped to [/]
[2019-06-05 16:46:51 ] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2019-06-05 16:46:52 ] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2019-06-05 16:46:52 ] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [main] [361] [INFO ] Building JPA container EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:46:52 ] [org.hibernate.jpa.internal.util.LogHelper] [main] [102] [DEBUG] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@2976fe94
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/SocialMedia/appSocialNetwork/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		dawid.app.post.comment.Comment
		dawid.app.post.Post
		dawid.app.user.group.AllGroup
		dawid.app.user.photo.Photo
		dawid.app.user.Role
		dawid.app.user.User
		dawid.app.user.userProfile.FreeTime
		dawid.app.user.userProfile.PhysicalActivity
		dawid.app.user.userProfile.UserProfile]
	Mapping files names []
	Properties []
[2019-06-05 16:46:52 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2019-06-05 16:46:52 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2019-06-05 16:46:52 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2019-06-05 16:46:52 ] [org.hibernate.integrator.internal.IntegratorServiceImpl] [main] [46] [DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[2019-06-05 16:46:52 ] [org.hibernate.Version] [main] [45] [INFO ] HHH000412: Hibernate Core {5.2.17.Final}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Environment] [main] [213] [INFO ] HHH000206: hibernate.properties not found
[2019-06-05 16:46:52 ] [org.hibernate.service.spi.ServiceBinding] [main] [68] [DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2019-06-05 16:46:52 ] [org.hibernate.cache.internal.RegionFactoryInitiator] [main] [75] [DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2019-06-05 16:46:52 ] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [66] [INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@4f3ac836
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@4f3ac836
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f3ac836
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c48656d
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@748468be
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@2e6c0b9a
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7590242b
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7590242b
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7590242b
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@181fb4e7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@181fb4e7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@181fb4e7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@1ae13d43
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration short -> org.hibernate.type.ShortType@1ae13d43
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ae13d43
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@25a64825
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration long -> org.hibernate.type.LongType@25a64825
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@25a64825
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@4f22623e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration float -> org.hibernate.type.FloatType@4f22623e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4f22623e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@55df19a6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@55df19a6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55df19a6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6b338925
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6b338925
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c3620ab
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c3620ab
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration string -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@228e9861
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3c571447
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration url -> org.hibernate.type.UrlType@69f817a7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@69f817a7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@1e1b89c9
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e1b89c9
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@3376dfe4
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3376dfe4
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37ffb9f7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37ffb9f7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@72530d27
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@72530d27
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c1326b
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c1326b
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7bcbc666
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7bcbc666
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@188188e3
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@188188e3
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3984e2b7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3984e2b7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration date -> org.hibernate.type.DateType@315714a3
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@315714a3
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration time -> org.hibernate.type.TimeType@1918e6e7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1918e6e7
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@2b7d9ade
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b7d9ade
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b7d9ade
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4688cee6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@238d5510
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@238d5510
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@238d5510
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@174e15f9
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@4085df66
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4085df66
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@44e43724
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@44e43724
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1704638e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1704638e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration class -> org.hibernate.type.ClassType@6059f23c
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6059f23c
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ff4ddfb
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ff4ddfb
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37d5b156
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@2f2c1331
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@2f2c1331
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@2f2c1331
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e0b5ff4
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e0b5ff4
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e0b5ff4
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@a9c189f
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration image -> org.hibernate.type.ImageType@17879712
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@739d5bb8
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@739d5bb8
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@739d5bb8
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fa85bc6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fa85bc6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fa85bc6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration text -> org.hibernate.type.TextType@467bdf58
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@2ef44c32
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@2ed41d2a
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2ed41d2a
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f47a9ae
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@18112bcd
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18112bcd
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@416a403e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@416a403e
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2dc59123
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32d9135d
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@1637c08b
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@362ee831
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@362ee831
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48dafd12
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9f4eb58
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d90cafd
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@797e440f
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6653145f
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@48d39de6
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@633f7123
[2019-06-05 16:46:52 ] [org.hibernate.type.BasicTypeRegistry] [main] [145] [DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68ea1f77
[2019-06-05 16:46:52 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [72] [DEBUG] Database ->
       name : MySQL
    version : 5.5.5-10.1.38-MariaDB
      major : 5
      minor : 5
[2019-06-05 16:46:52 ] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [main] [83] [DEBUG] Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[2019-06-05 16:46:52 ] [org.jboss.logging.DelegatingBasicLogger] [main] [389] [DEBUG] JDBC version : 4.0
[2019-06-05 16:46:52 ] [org.hibernate.dialect.Dialect] [main] [157] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2019-06-05 16:46:52 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [117] [DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[2019-06-05 16:46:52 ] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [main] [191] [DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [81] [DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [main] [84] [DEBUG]     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2019-06-05 16:46:52 ] [org.hibernate.boot.model.relational.Namespace] [main] [47] [DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.User
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name User
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.User on table user
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:id]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=activation_code, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property activationCode with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:activationCode]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for activationCode
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property activationCode
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=active, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property active with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:active]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for active
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property active
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property email with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:email]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for email
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property email
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.groups
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groups
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property password with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.User:password]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for password
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property password
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.User.roles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property roles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.Post
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Post
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.Post on table post
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:id]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property content with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:content]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for content
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property content
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupId with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:groupId]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:photoId]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postDate with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postDate]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postDate
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postDate
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_title, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postTitle with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postTitle]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postTitle
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postTitle
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=post_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postUserId with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:postUserId]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postUserId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postUserId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userDislike with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userDislike]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userDislike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userDislike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(post), mappingColumn=user_like, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userLike with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.Post:userLike]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userLike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userLike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name FreeTime
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.FreeTime on table free_time
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:id]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=free_time_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.FreeTime:name]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(free_time), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='freeTimes'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name PhysicalActivity
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.PhysicalActivity on table physical_activity
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:id]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=physical_activity_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.PhysicalActivity:name]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(physical_activity), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='physicalActivities'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.group.AllGroup
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name AllGroup
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.group.AllGroup on table all_group
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=group_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property groupID with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:groupID]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for groupID
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property groupID
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_physical_activities, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property CommonPhysicalActivities with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:CommonPhysicalActivities]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for CommonPhysicalActivities
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property CommonPhysicalActivities
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_city, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonCity with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonCity]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonCity
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonCity
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=common_free_time, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commonFreeTime with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:commonFreeTime]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commonFreeTime
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commonFreeTime
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.group.AllGroup:name]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(all_group), mappingColumn=user_profiles_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='userProfiles_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userProfiles
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.Role
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Role
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.Role on table role
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:id]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property role with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.Role:role]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for role
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property role
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.post.comment.Comment
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Comment
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.post.comment.Comment on table comment
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:id]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_content, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentContent with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentContent]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentContent
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentContent
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDate with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDate]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDate
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDate
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_dislike, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentDislike with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentDislike]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentDislike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentDislike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_like, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentLike with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentLike]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentLike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentLike
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_title, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentTitle with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentTitle]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentTitle
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentTitle
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=comment_user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property commentUserId with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:commentUserId]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for commentUserId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property commentUserId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property photoId with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:photoId]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for photoId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property photoId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property postId with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.post.comment.Comment:postId]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for postId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property postId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.photo.Photo
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name Photo
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.photo.Photo on table photo
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=photo_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:id]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=data, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property data with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:data]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for data
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property data
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:description]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:name]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=profile_photo, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property profilePhoto with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:profilePhoto]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for profilePhoto
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property profilePhoto
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property userId with lazy=false
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.photo.Photo:userId]
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for userId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property userId
[2019-06-05 16:46:52 ] [org.hibernate.cfg.AnnotationBinder] [main] [512] [DEBUG] Binding entity from annotated class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:52 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [419] [DEBUG] Import with entity name UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.EntityBinder] [main] [695] [DEBUG] Bind entity dawid.app.user.userProfile.UserProfile on table user_profile
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property id with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:id]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=all_groups_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='allGroups_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property allGroups
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=birth_date, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property birthDate with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:birthDate]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for birthDate
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property birthDate
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=characters, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property character with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:character]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for character
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property character
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=city, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property city with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:city]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for city
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property city
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property description with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:description]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for description
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property description
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=free_times_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='freeTimes_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='free_time_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=hobby, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property hobby with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:hobby]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for hobby
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property hobby
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=language, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property language with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:language]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for language
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property language
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property lastName with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:lastName]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for lastName
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property lastName
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property name with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:name]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for name
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property name
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=number, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property number with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:number]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for number
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property number
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=physical_activities_key, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physicalActivities_KEY', referencedColumn='null', mappedBy='null'}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='physical_activity_id', referencedColumn='', mappedBy=''}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [389] [DEBUG] Collection role: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property sex with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:sex]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for sex
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property sex
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Ejb3Column] [main] [213] [DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=who_search, insertable=true, updatable=true, unique=false}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [175] [DEBUG] MetadataSourceProcessor property whoSearch with lazy=false
[2019-06-05 16:46:53 ] [org.hibernate.cfg.AbstractPropertyHolder] [main] [95] [DEBUG] Attempting to locate auto-apply AttributeConverter for property [dawid.app.user.userProfile.UserProfile:whoSearch]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [411] [DEBUG] building SimpleValue for whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.PropertyBinder] [main] [266] [DEBUG] Building property whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for activationCode
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for active
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for email
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for password
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for content
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupId
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postDate
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postTitle
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postUserId
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userDislike
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userLike
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for groupID
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonCity
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for role
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentContent
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDate
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentLike
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for photoId
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for postId
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for data
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for userId
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for birthDate
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for character
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for city
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for description
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for hobby
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for language
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for lastName
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for name
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for number
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for sex
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.SimpleValueBinder] [main] [456] [DEBUG] Starting fillSimpleValue for whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [all_group]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [comment_id] to be non-null as it is part of the primary key for table [comment]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [photo_id] to be non-null as it is part of the primary key for table [photo]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [physical_activity_id] to be non-null as it is part of the primary key for table [physical_activity_user]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: physical_activity_id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [free_time_id] to be non-null as it is part of the primary key for table [free_time_user]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_profile_id, element: free_time_id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: group_id, element: user_id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.roles
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.roles
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [user_role]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: role_id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.User.groups
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.User.groups
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [user_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:53 ] [org.hibernate.mapping.PrimaryKey] [main] [35] [DEBUG] Forcing column [group_id] to be non-null as it is part of the primary key for table [group_user]
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: user_id, element: group_id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: free_time_id, element: user_profile_id
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [51] [DEBUG] Second pass for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.CollectionBinder] [main] [1240] [DEBUG] Binding as ManyToMany: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.cfg.annotations.TableBinder] [main] [565] [DEBUG] Retrieving property dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.cfg.CollectionSecondPass] [main] [68] [DEBUG] Mapped collection key: physical_activity_id, element: user_profile_id
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.group.AllGroup
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.Role
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [main] [1817] [DEBUG] Resolving reference to class: dawid.app.user.User
[2019-06-05 16:46:53 ] [org.hibernate.internal.SessionFactoryImpl] [main] [199] [DEBUG] Building session factory
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [69] [DEBUG] SessionFactory name : null
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [70] [DEBUG] Automatic flush during beforeCompletion(): enabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [71] [DEBUG] Automatic session close at end of transaction: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [73] [DEBUG] Statistics: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [75] [DEBUG] Deleted entity synthetic identifier rollback: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [76] [DEBUG] Default entity-mode: pojo
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [77] [DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [78] [DEBUG] Allow initialization of lazy state outside session : disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [80] [DEBUG] Using BatchFetchStyle : LEGACY
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [81] [DEBUG] Default batch fetch size: -1
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [82] [DEBUG] Maximum outer join fetch depth: 2
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [83] [DEBUG] Default null ordering: NONE
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [84] [DEBUG] Order SQL updates by primary key: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [85] [DEBUG] Order SQL inserts for batching: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [87] [DEBUG] multi-tenancy strategy : NONE
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [89] [DEBUG] JTA Track by Thread: enabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [91] [DEBUG] Query language substitutions: {}
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [92] [DEBUG] JPA query language strict compliance: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [93] [DEBUG] Named query checking : enabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [95] [DEBUG] Second-level cache: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [96] [DEBUG] Second-level query cache: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [97] [DEBUG] Second-level query cache factory: null
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [98] [DEBUG] Second-level cache region prefix: null
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [99] [DEBUG] Optimize second-level cache for minimal puts: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [100] [DEBUG] Structured second-level cache entries: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [101] [DEBUG] Second-level cache direct-reference entries: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [102] [DEBUG] Automatic eviction of collection cache: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [104] [DEBUG] JDBC batch size: 15
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [105] [DEBUG] JDBC batch updates for versioned data: enabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [106] [DEBUG] Scrollable result sets: enabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [107] [DEBUG] Wrap result sets: disabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [108] [DEBUG] JDBC3 getGeneratedKeys(): enabled
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [109] [DEBUG] JDBC result set fetch size: null
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [110] [DEBUG] Connection release mode: ON_CLOSE
[2019-06-05 16:46:53 ] [org.hibernate.cfg.Settings] [main] [111] [DEBUG] Generate SQL with comments: disabled
[2019-06-05 16:46:53 ] [org.hibernate.internal.SessionFactoryImpl] [main] [257] [DEBUG] Session factory constructed with filter configurations : {}
[2019-06-05 16:46:53 ] [org.hibernate.internal.SessionFactoryImpl] [main] [258] [DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=false, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, user.country.format=PL, maven.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\../conf, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher spring-boot:run, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@59be7085, javax.persistence.sharedCache.mode=UNSPECIFIED, maven.home=C:\Program Files\Java\apache-maven-3.6.0\bin\.., sun.cpu.endian=little, user.home=C:\Users\Dawid, user.language=en, sun.stderr.encoding=cp852, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, file.separator=\, sun.stdout.encoding=cp852, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_201-b09, user.name=Dawid, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, guice.disable.misplaced.annotation.check=true, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dawid\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\Dawid\AppData\Local\Temp\tomcat.7135849428167136405.8080, java.version=1.8.0_201, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=D:\SocialMedia\appSocialNetwork, os.arch=amd64, maven.multiModuleProjectDirectory=D:\SocialMedia\appSocialNetwork, PID=5668, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=pl, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, catalina.base=C:\Users\Dawid\AppData\Local\Temp\tomcat.7135849428167136405.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2293371a, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Program Files\Java\apache-maven-3.6.0\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.201-b09, classworlds.conf=C:\Program Files\Java\apache-maven-3.6.0\bin\..\bin\m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, library.jansi.path=C:\Program Files\Java\apache-maven-3.6.0\bin\..\lib\jansi-native, java.class.version=52.0}
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [93] [DEBUG] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] [main] [103] [DEBUG] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [120] [DEBUG] Trying to load META-INF/validation.xml for XML based Validator configuration.
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [60] [DEBUG] Trying to load META-INF/validation.xml via TCCL
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] [main] [66] [DEBUG] Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.xml.config.ValidationXmlParser] [main] [127] [DEBUG] No META-INF/validation.xml found. Using annotation based configuration only.
[2019-06-05 16:46:53 ] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] [main] [89] [DEBUG] Loaded expression factory via original TCCL
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [578] [DEBUG] HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [579] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [580] [DEBUG] HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [581] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2019-06-05 16:46:53 ] [org.hibernate.validator.internal.engine.ValidatorFactoryImpl] [main] [582] [DEBUG] HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.secure.spi.JaccIntegrator] [main] [80] [DEBUG] Skipping JACC integration as it was not enabled
[2019-06-05 16:46:53 ] [org.hibernate.engine.spi.CascadeStyles] [main] [268] [DEBUG] External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[2019-06-05 16:46:53 ] [org.hibernate.internal.SessionFactoryImpl] [main] [297] [DEBUG] Instantiated session factory
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.User] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.User
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.Post] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.Post
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.FreeTime] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.PhysicalActivity] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.group.AllGroup] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.group.AllGroup
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.Role] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.Role
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.post.comment.Comment] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.post.comment.Comment
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.photo.Photo] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.photo.Photo
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [55] [DEBUG] Not known whether passed class name [dawid.app.user.userProfile.UserProfile] is safe
[2019-06-05 16:46:53 ] [org.hibernate.boot.internal.ClassLoaderAccessImpl] [main] [57] [DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.FreeTime.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (free_time_id, user_profile_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set user_profile_id=? where free_time_id=? and user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where free_time_id=? and user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.PhysicalActivity.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (physical_activity_id, user_profile_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set user_profile_id=? where physical_activity_id=? and user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where physical_activity_id=? and user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into physical_activity_user (user_profile_id, physical_activity_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update physical_activity_user set physical_activity_id=? where user_profile_id=? and physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from physical_activity_user where user_profile_id=? and physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from physical_activity_user where user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into free_time_user (user_profile_id, free_time_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update free_time_user set free_time_id=? where user_profile_id=? and free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from free_time_user where user_profile_id=? and free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from free_time_user where user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.roles
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into user_role (user_id, role_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update user_role set role_id=? where user_id=? and role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from user_role where user_id=? and role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from user_role where user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.group.AllGroup.userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (group_id, user_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set user_id=? where group_id=? and user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where group_id=? and user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.userProfile.UserProfile.allGroups
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [670] [DEBUG] Static SQL for collection: dawid.app.user.User.groups
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [672] [DEBUG]  Row insert: insert into group_user (user_id, group_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [675] [DEBUG]  Row update: update group_user set group_id=? where user_id=? and group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [678] [DEBUG]  Row delete: delete from group_user where user_id=? and group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.collection.AbstractCollectionPersister] [main] [681] [DEBUG]  One-shot delete: delete from group_user where user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.User
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_id from user where user_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select user_.user_id, user_.activation_code as activati2_10_, user_.active as active3_10_, user_.email as email4_10_, user_.password as password5_10_ from user user_ where user_.user_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user (activation_code, active, email, password, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user set activation_code=?, active=?, email=?, password=? where user_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user where user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into user (activation_code, active, email, password) values (?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c6a049]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66a3898]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1519f1cc]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@da2d90c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@576fcee5]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [NONE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b0f4a51]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d896010]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e786cf]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20cb0360]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@685e4914]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb12def]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ba5cc1a]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1293093]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@670ab0c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6e7d89]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@389eb522]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73504ad2]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d2ce304]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40567026]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d384cd1]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c4f8d7e]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@535e094]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a447a27]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a80266c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37a58ee5]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3ee9c5]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fdacab9]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4493a501]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e091c97]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b464654]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [FORCE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c0de87]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1da99a34]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4441b33]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20d4c9da]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4df8d8f7]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c518346]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e741aa2]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354042fb]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@259bbca6]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59fccd17]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47c37d80]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8a54427]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@370ea451]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b7df04d]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@673ee4b]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d516de]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62c0793b]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b58d29e]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77b758cd]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4923b6d8]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28cb1766]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : activationCode
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : active
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : email
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5886af89]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c474737]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : password
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : roles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cc711fe]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ed92651]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.User)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.User, querySpaceUid=<gen:0>, path=dawid.app.user.User)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:1>, path=dawid.app.user.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.User.groups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:3>, path=dawid.app.user.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:4>, path=dawid.app.user.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_10_0_, user0_.activation_code as activati2_10_0_, user0_.active as active3_10_0_, user0_.email as email4_10_0_, user0_.password as password5_10_0_ from user user0_ where user0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.User: select user0_.user_id as user_id1_10_1_, user0_.activation_code as activati2_10_1_, user0_.active as active3_10_1_, user0_.email as email4_10_1_, user0_.password as password5_10_1_, groups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user user0_ left outer join group_user groups1_ on user0_.user_id=groups1_.user_id left outer join all_group allgroup2_ on groups1_.group_id=allgroup2_.group_id where user0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.Post
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select post_id from post where post_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select post_.post_id, post_.content as content2_8_, post_.group_id as group_id3_8_, post_.photo_id as photo_id4_8_, post_.post_date as post_dat5_8_, post_.post_title as post_tit6_8_, post_.post_user_id as post_use7_8_, post_.user_dislike as user_dis8_8_, post_.user_like as user_lik9_8_ from post post_ where post_.post_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like, post_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update post set content=?, group_id=?, photo_id=?, post_date=?, post_title=?, post_user_id=?, user_dislike=?, user_like=? where post_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from post where post_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into post (content, group_id, photo_id, post_date, post_title, post_user_id, user_dislike, user_like) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b97a46a]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [NONE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e44a805]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ef4b51]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62905817]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_NOWAIT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e0d98d]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [UPGRADE_SKIPLOCKED]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6145b070]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [FORCE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@644752a3]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_READ]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1148939]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_WRITE]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d136d8]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [PESSIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e3fb38e]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f5d64b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : content
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : groupId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userLike
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.Post)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.Post, querySpaceUid=<gen:0>, path=dawid.app.post.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_8_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.Post [OPTIMISTIC_FORCE_INCREMENT]: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.Post: select post0_.post_id as post_id1_8_0_, post0_.content as content2_8_0_, post0_.group_id as group_id3_8_0_, post0_.photo_id as photo_id4_8_0_, post0_.post_date as post_dat5_8_0_, post0_.post_title as post_tit6_8_0_, post0_.post_user_id as post_use7_8_0_, post0_.user_dislike as user_dis8_8_0_, post0_.user_like as user_lik9_8_0_ from post post0_ where post0_.post_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.FreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select free_time_id from free_time where free_time_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select freetime_.free_time_id, freetime_.free_time_name as free_tim2_2_ from free_time freetime_ where freetime_.free_time_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into free_time (free_time_name, free_time_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update free_time set free_time_name=? where free_time_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from free_time where free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into free_time (free_time_name) values (?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21500d1c]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@114a2067]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30538b50]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [NONE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11ca48ab]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15d6d60e]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f3d6ef]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3f4e6a]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70e2f7f6]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@570113ab]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57cd5b3f]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a53ef1d]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51023b7]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_NOWAIT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38399489]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fdc3529]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b55b2fe]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [UPGRADE_SKIPLOCKED]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f3cf2c1]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bcc6885]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da8f140]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [FORCE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751aacce]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43503f81]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6958f45a]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_READ]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49844963]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6727c4dc]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f30646]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_WRITE]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2257814a]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14f7fd5d]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456718b3]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [PESSIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b248c84]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4386f46f]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ed9ce2c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@416625df]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a61519e]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a395c50]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.FreeTime)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.FreeTime)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.FreeTime.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.FreeTime.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.FreeTime)
          - SQL table alias mapping - freetime0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim1_2_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.FreeTime [OPTIMISTIC_FORCE_INCREMENT]: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.FreeTime: select freetime0_.free_time_id as free_tim1_2_0_, freetime0_.free_time_name as free_tim2_2_0_ from free_time freetime0_ where freetime0_.free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.PhysicalActivity
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select physical_activity_id from physical_activity where physical_activity_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select physicalac_.physical_activity_id, physicalac_.physical_activity_name as physical2_6_ from physical_activity physicalac_ where physicalac_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into physical_activity (physical_activity_name, physical_activity_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update physical_activity set physical_activity_name=? where physical_activity_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from physical_activity where physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into physical_activity (physical_activity_name) values (?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a81dc15]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23c8fd0a]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4373feff]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [NONE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1746e3f0]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d539da1]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@710b0af2]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51723e40]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11d26c5c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a7a80e]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78e71164]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@305929dd]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35bb0000]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_NOWAIT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75174be2]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66e272fe]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b34c522]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [UPGRADE_SKIPLOCKED]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44b3d7fd]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b7da4f4]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66cd756c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [FORCE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9b4a77]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4eec3d3d]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43874799]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_READ]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a9756c]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@618ec8ac]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@184cf08b]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_WRITE]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a0e4fb]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f3a3336]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708d42f2]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [PESSIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fbe724]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75531ec6]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f53484c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314f4045]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ab3df5]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@734f0444]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.PhysicalActivity)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.PhysicalActivity)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.PhysicalActivity.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.PhysicalActivity)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {physical1_6_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.PhysicalActivity [OPTIMISTIC_FORCE_INCREMENT]: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.PhysicalActivity: select physicalac0_.physical_activity_id as physical1_6_0_, physicalac0_.physical_activity_name as physical2_6_0_ from physical_activity physicalac0_ where physicalac0_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.group.AllGroup
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select group_id from all_group where group_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select allgroup_.group_id, allgroup_.common_physical_activities as common_p2_0_, allgroup_.common_city as common_c3_0_, allgroup_.common_free_time as common_f4_0_, allgroup_.name as name5_0_ from all_group allgroup_ where allgroup_.group_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into all_group (common_physical_activities, common_city, common_free_time, name, group_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update all_group set common_physical_activities=?, common_city=?, common_free_time=?, name=? where group_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from all_group where group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into all_group (common_physical_activities, common_city, common_free_time, name) values (?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c93f00]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@111c6bfb]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afa20b8]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [NONE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bba3dd8]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ae535dd]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@215127d9]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b3f8ad6]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66e9d5bc]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2e5957]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a0137e]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e3af94e]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1262f93f]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_NOWAIT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7033ee]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70ddaa90]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f31eb5]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [UPGRADE_SKIPLOCKED]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f26bca6]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d5af736]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b1589e]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [FORCE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0815a2]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52d9c9e5]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48360e88]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_READ]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b9a729]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cc9906]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d769579]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_WRITE]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5259e511]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d3ddfe9]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a95c6a]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [PESSIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49454a83]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57dabc4]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b29fd0d]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78dbadb9]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14ea0d6]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@555bf467]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.group.AllGroup)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:0>, path=dawid.app.user.group.AllGroup)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:1>, path=dawid.app.user.group.AllGroup.userProfiles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:2>, path=dawid.app.user.group.AllGroup.userProfiles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.group.AllGroup)
          - SQL table alias mapping - allgroup0_
          - alias suffix - 0_
          - suffixed key columns - {group_id1_0_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.group.AllGroup [OPTIMISTIC_FORCE_INCREMENT]: select allgroup0_.group_id as group_id1_0_0_, allgroup0_.common_physical_activities as common_p2_0_0_, allgroup0_.common_city as common_c3_0_0_, allgroup0_.common_free_time as common_f4_0_0_, allgroup0_.name as name5_0_0_ from all_group allgroup0_ where allgroup0_.group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.group.AllGroup: select allgroup0_.group_id as group_id1_0_1_, allgroup0_.common_physical_activities as common_p2_0_1_, allgroup0_.common_city as common_c3_0_1_, allgroup0_.common_free_time as common_f4_0_1_, allgroup0_.name as name5_0_1_, userprofil1_.group_id as group_id2_4_3_, userprofil2_.user_profile_id as user_id1_4_3_, userprofil2_.user_profile_id as user_pro1_11_0_, userprofil2_.birth_date as birth_da2_11_0_, userprofil2_.characters as characte3_11_0_, userprofil2_.city as city4_11_0_, userprofil2_.description as descript5_11_0_, userprofil2_.hobby as hobby6_11_0_, userprofil2_.language as language7_11_0_, userprofil2_.last_name as last_nam8_11_0_, userprofil2_.name as name9_11_0_, userprofil2_.number as number10_11_0_, userprofil2_.sex as sex11_11_0_, userprofil2_.who_search as who_sea12_11_0_ from all_group allgroup0_ left outer join group_user userprofil1_ on allgroup0_.group_id=userprofil1_.group_id left outer join user_profile userprofil2_ on userprofil1_.user_id=userprofil2_.user_profile_id where allgroup0_.group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.Role
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select role_id from role where role_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select role_.role_id, role_.role as role2_9_ from role role_ where role_.role_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into role (role, role_id) values (?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update role set role=? where role_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from role where role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into role (role) values (?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70483d10]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [NONE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@451d888f]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7ea0d7]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6823228e]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_NOWAIT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a98305]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [UPGRADE_SKIPLOCKED]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d7feb6b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [FORCE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d409e06]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_READ]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fe6de61]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_WRITE]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529259cb]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64117b48]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4527f1ad]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.Role)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.Role, querySpaceUid=<gen:0>, path=dawid.app.user.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.Role: select role0_.role_id as role_id1_9_0_, role0_.role as role2_9_0_ from role role0_ where role0_.role_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.post.comment.Comment
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select comment_id from comment where comment_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select comment_.comment_id, comment_.comment_content as comment_2_1_, comment_.comment_date as comment_3_1_, comment_.comment_dislike as comment_4_1_, comment_.comment_like as comment_5_1_, comment_.comment_title as comment_6_1_, comment_.comment_user_id as comment_7_1_, comment_.photo_id as photo_id8_1_, comment_.post_id as post_id9_1_ from comment comment_ where comment_.comment_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id, comment_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update comment set comment_content=?, comment_date=?, comment_dislike=?, comment_like=?, comment_title=?, comment_user_id=?, photo_id=?, post_id=? where comment_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from comment where comment_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into comment (comment_content, comment_date, comment_dislike, comment_like, comment_title, comment_user_id, photo_id, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab46343]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [NONE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18613a1b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50dba009]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0bb98a]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_NOWAIT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c7b1f2f]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [UPGRADE_SKIPLOCKED]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1feda293]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [FORCE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2399f450]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_READ]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c4dadd0]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_WRITE]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f25c4e5]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1331b1fa]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@459ac152]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentContent
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentDislike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentLike
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentTitle
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commentUserId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : photoId
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : postId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.post.comment.Comment)
    - Returns
       - EntityReturnImpl(entity=dawid.app.post.comment.Comment, querySpaceUid=<gen:0>, path=dawid.app.post.comment.Comment)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.post.comment.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {comment_1_1_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.post.comment.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.post.comment.Comment: select comment0_.comment_id as comment_1_1_0_, comment0_.comment_content as comment_2_1_0_, comment0_.comment_date as comment_3_1_0_, comment0_.comment_dislike as comment_4_1_0_, comment0_.comment_like as comment_5_1_0_, comment0_.comment_title as comment_6_1_0_, comment0_.comment_user_id as comment_7_1_0_, comment0_.photo_id as photo_id8_1_0_, comment0_.post_id as post_id9_1_0_ from comment comment0_ where comment0_.comment_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.photo.Photo
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select photo_id from photo where photo_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select photo_.photo_id, photo_.data as data2_5_, photo_.description as descript3_5_, photo_.name as name4_5_, photo_.profile_photo as profile_5_5_, photo_.user_id as user_id6_5_ from photo photo_ where photo_.photo_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into photo (data, description, name, profile_photo, user_id, photo_id) values (?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update photo set data=?, description=?, name=?, profile_photo=?, user_id=? where photo_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from photo where photo_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3658] [DEBUG]  Identity insert: insert into photo (data, description, name, profile_photo, user_id) values (?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fcc3c1]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [NONE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a45d3ca]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72fb3611]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f845b80]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_NOWAIT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5ff9e1]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [UPGRADE_SKIPLOCKED]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42070caf]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [FORCE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eb13c2c]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_READ]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b4061b2]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_WRITE]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aed421]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [PESSIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39db950f]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b428b6]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : data
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : profilePhoto
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userId
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.photo.Photo)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.photo.Photo, querySpaceUid=<gen:0>, path=dawid.app.user.photo.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.photo.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {photo_id1_5_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.photo.Photo [OPTIMISTIC_FORCE_INCREMENT]: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.photo.Photo: select photo0_.photo_id as photo_id1_5_0_, photo0_.data as data2_5_0_, photo0_.description as descript3_5_0_, photo0_.name as name4_5_0_, photo0_.profile_photo as profile_5_5_0_, photo0_.user_id as user_id6_5_0_ from photo photo0_ where photo0_.photo_id=?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3642] [DEBUG] Static SQL for entity: dawid.app.user.userProfile.UserProfile
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3647] [DEBUG]  Version select: select user_profile_id from user_profile where user_profile_id =?
[2019-06-05 16:46:53 ] [org.hibernate.persister.entity.AbstractEntityPersister] [main] [3650] [DEBUG]  Snapshot select: select userprofil_.user_profile_id, userprofil_.birth_date as birth_da2_11_, userprofil_.characters as characte3_11_, userprofil_.city as city4_11_, userprofil_.description as descript5_11_, userprofil_.hobby as hobby6_11_, userprofil_.language as language7_11_, userprofil_.last_name as last_nam8_11_, userprofil_.name as name9_11_, userprofil_.number as number10_11_, userprofil_.sex as sex11_11_, userprofil_.who_search as who_sea12_11_ from user_profile userprofil_ where userprofil_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Insert 0: insert into user_profile (birth_date, characters, city, description, hobby, language, last_name, name, number, sex, who_search, user_profile_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Update 0: update user_profile set birth_date=?, characters=?, city=?, description=?, hobby=?, language=?, last_name=?, name=?, number=?, sex=?, who_search=? where user_profile_id=?
[2019-06-05 16:46:53 ] [org.jboss.logging.DelegatingBasicLogger] [main] [394] [DEBUG]  Delete 0: delete from user_profile where user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53979cfa]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70c29783]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4edbea97]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2144cffa]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31629d71]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55787a51]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e6bd3b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43da8142]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@704a5120]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b43577]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16736492]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@407947ec]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6298dd92]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42a7433b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ffde809]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61e1a144]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192788d8]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@393a9655]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7043d927]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cc4adea]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@398097e2]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546536b9]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31316a4]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e91bea3]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43bc9736]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73b26e6d]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@680fe089]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd83f8d]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cfa16e7]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bc77eb9]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11791c1b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d987dfd]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ff1871b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f730cea]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163348db]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@683aa875]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c4368e0]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ba9423]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d7ee541]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@677de05b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30ae803c]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24210186]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7fbcae]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62e3258f]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee23564]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dab6ada]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c32ef83]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78672d7]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58902e56]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eab6224]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@412a1c39]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@181168d4]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d6e83b0]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e272278]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ffd3651]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb9a0b2]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e3db96]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3459f009]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25746a00]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e203a53]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1f1da4]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27bd6796]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@211f3d0b]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea269d9]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b9f49b]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e966622]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23073088]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc00777]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5143f58]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68defeae]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c7104d]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1aba4cb4]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58eeac3]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f81d747]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@739bcad8]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b8ce7f3]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4926cab3]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(entity=dawid.app.user.userProfile.UserProfile)
    - Returns
       - EntityReturnImpl(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:0>, path=dawid.app.user.userProfile.UserProfile)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:1>, path=dawid.app.user.userProfile.UserProfile.allGroups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:2>, path=dawid.app.user.userProfile.UserProfile.allGroups.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:3>, path=dawid.app.user.userProfile.UserProfile.freeTimes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:4>, path=dawid.app.user.userProfile.UserProfile.freeTimes.<elements>)
          - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:5>, path=dawid.app.user.userProfile.UserProfile.physicalActivities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:6>, path=dawid.app.user.userProfile.UserProfile.physicalActivities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dawid.app.user.userProfile.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_11_0_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.plan.EntityLoader] [main] [115] [DEBUG] Static select for entity dawid.app.user.userProfile.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_11_0_, userprofil0_.birth_date as birth_da2_11_0_, userprofil0_.characters as characte3_11_0_, userprofil0_.city as city4_11_0_, userprofil0_.description as descript5_11_0_, userprofil0_.hobby as hobby6_11_0_, userprofil0_.language as language7_11_0_, userprofil0_.last_name as last_nam8_11_0_, userprofil0_.name as name9_11_0_, userprofil0_.number as number10_11_0_, userprofil0_.sex as sex11_11_0_, userprofil0_.who_search as who_sea12_11_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_MERGE on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.entity.CascadeEntityLoader] [main] [38] [DEBUG] Static select for action ACTION_REFRESH on entity dawid.app.user.userProfile.UserProfile: select userprofil0_.user_profile_id as user_pro1_11_1_, userprofil0_.birth_date as birth_da2_11_1_, userprofil0_.characters as characte3_11_1_, userprofil0_.city as city4_11_1_, userprofil0_.description as descript5_11_1_, userprofil0_.hobby as hobby6_11_1_, userprofil0_.language as language7_11_1_, userprofil0_.last_name as last_nam8_11_1_, userprofil0_.name as name9_11_1_, userprofil0_.number as number10_11_1_, userprofil0_.sex as sex11_11_1_, userprofil0_.who_search as who_sea12_11_1_, allgroups1_.user_id as user_id1_4_3_, allgroup2_.group_id as group_id2_4_3_, allgroup2_.group_id as group_id1_0_0_, allgroup2_.common_physical_activities as common_p2_0_0_, allgroup2_.common_city as common_c3_0_0_, allgroup2_.common_free_time as common_f4_0_0_, allgroup2_.name as name5_0_0_ from user_profile userprofil0_ left outer join group_user allgroups1_ on userprofil0_.user_profile_id=allgroups1_.user_id left outer join all_group allgroup2_ on allgroups1_.group_id=allgroup2_.group_id where userprofil0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e72d342]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ef5c140]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48a85dca]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ca12ea1]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6921c060]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ccc00ee]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.FreeTime.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.FreeTime.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.FreeTime.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.FreeTime.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.FreeTime.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {free_tim2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.FreeTime.userProfiles: select userprofil0_.free_time_id as free_tim2_3_0_, userprofil0_.user_profile_id as user_pro1_3_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from free_time_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.free_time_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ca197ec]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559e96b4]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b714b48]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afb4da4]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5819b347]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e99c7b3]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:2>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:3>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.allGroups.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:4>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:5>, path=[dawid.app.user.userProfile.PhysicalActivity.userProfiles].<elements>.freeTimes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.PhysicalActivity.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {physical2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.PhysicalActivity.userProfiles: select userprofil0_.physical_activity_id as physical2_7_0_, userprofil0_.user_profile_id as user_pro1_7_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from physical_activity_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_profile_id=userprofil1_.user_profile_id where userprofil0_.physical_activity_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fe3e823]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd51616]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.physicalActivities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.physicalActivities)
          - SQL table alias mapping - physicalac0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - physical1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.PhysicalActivity)
                - SQL table alias mapping - physicalac1_
                - alias suffix - 1_
                - suffixed key columns - {physical1_6_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.physicalActivities: select physicalac0_.user_profile_id as user_pro1_7_0_, physicalac0_.physical_activity_id as physical2_7_0_, physicalac1_.physical_activity_id as physical1_6_1_, physicalac1_.physical_activity_name as physical2_6_1_ from physical_activity_user physicalac0_ inner join physical_activity physicalac1_ on physicalac0_.physical_activity_id=physicalac1_.physical_activity_id where physicalac0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a45b01d]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0760e5]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.freeTimes)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.freeTimes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.freeTimes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.freeTimes)
          - SQL table alias mapping - freetimes0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - free_tim1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.FreeTime)
                - SQL table alias mapping - freetime1_
                - alias suffix - 1_
                - suffixed key columns - {free_tim1_2_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.freeTimes: select freetimes0_.user_profile_id as user_pro1_3_0_, freetimes0_.free_time_id as free_tim2_3_0_, freetime1_.free_time_id as free_tim1_2_1_, freetime1_.free_time_name as free_tim2_2_1_ from free_time_user freetimes0_ inner join free_time freetime1_ on freetimes0_.free_time_id=freetime1_.free_time_id where freetimes0_.user_profile_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1db36143]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b352a58]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : role
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.roles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.roles, querySpaceUid=<gen:0>, path=[dawid.app.user.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.Role, querySpaceUid=<gen:1>, path=[dawid.app.user.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.roles: select roles0_.user_id as user_id1_12_0_, roles0_.role_id as role_id2_12_0_, role1_.role_id as role_id1_9_1_, role1_.role as role2_9_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79c9411e]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b9cd395]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : allGroups
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : birthDate
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : character
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : city
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : description
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : freeTimes
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2959ac55]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@474c290]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : hobby
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : language
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : lastName
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : number
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : physicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@551dc9aa]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118f3291]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : sex
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : whoSearch
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.group.AllGroup.userProfiles)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.group.AllGroup.userProfiles, querySpaceUid=<gen:0>, path=[dawid.app.user.group.AllGroup.userProfiles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.UserProfile, querySpaceUid=<gen:1>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.freeTimes, querySpaceUid=<gen:2>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.FreeTime, querySpaceUid=<gen:3>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.freeTimes.<elements>)
             - CollectionAttributeFetchImpl(collection=dawid.app.user.userProfile.UserProfile.physicalActivities, querySpaceUid=<gen:4>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities)
                - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.userProfile.PhysicalActivity, querySpaceUid=<gen:5>, path=[dawid.app.user.group.AllGroup.userProfiles].<elements>.physicalActivities.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.group.AllGroup.userProfiles)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {group_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_pro1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.userProfile.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_11_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.group.AllGroup.userProfiles: select userprofil0_.group_id as group_id2_4_0_, userprofil0_.user_id as user_id1_4_0_, userprofil1_.user_profile_id as user_pro1_11_1_, userprofil1_.birth_date as birth_da2_11_1_, userprofil1_.characters as characte3_11_1_, userprofil1_.city as city4_11_1_, userprofil1_.description as descript5_11_1_, userprofil1_.hobby as hobby6_11_1_, userprofil1_.language as language7_11_1_, userprofil1_.last_name as last_nam8_11_1_, userprofil1_.name as name9_11_1_, userprofil1_.number as number10_11_1_, userprofil1_.sex as sex11_11_1_, userprofil1_.who_search as who_sea12_11_1_ from group_user userprofil0_ inner join user_profile userprofil1_ on userprofil0_.user_id=userprofil1_.user_profile_id where userprofil0_.group_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75d00ff1]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57922399]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.userProfile.UserProfile.allGroups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.userProfile.UserProfile.allGroups, querySpaceUid=<gen:0>, path=[dawid.app.user.userProfile.UserProfile.allGroups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.userProfile.UserProfile.allGroups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.userProfile.UserProfile.allGroups)
          - SQL table alias mapping - allgroups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.userProfile.UserProfile.allGroups: select allgroups0_.user_id as user_id1_4_0_, allgroups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user allgroups0_ inner join all_group allgroup1_ on allgroups0_.group_id=allgroup1_.group_id where allgroups0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7150640b]
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [main] [174] [DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37180f53]
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : CommonPhysicalActivities
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonCity
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : commonFreeTime
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : name
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [139] [DEBUG] Visiting attribute path : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.persister.walking.spi.MetamodelGraphWalker] [main] [147] [DEBUG] Property path deemed to be circular : userProfiles
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [main] [150] [DEBUG] Building LoadPlan...
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [main] [102] [DEBUG] processing queryspace <gen:0>
[2019-06-05 16:46:53 ] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [main] [55] [DEBUG] LoadPlan(collection=dawid.app.user.User.groups)
    - Returns
       - CollectionReturnImpl(collection=dawid.app.user.User.groups, querySpaceUid=<gen:0>, path=[dawid.app.user.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dawid.app.user.group.AllGroup, querySpaceUid=<gen:1>, path=[dawid.app.user.User.groups].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dawid.app.user.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - group_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dawid.app.user.group.AllGroup)
                - SQL table alias mapping - allgroup1_
                - alias suffix - 1_
                - suffixed key columns - {group_id1_0_1_}

[2019-06-05 16:46:53 ] [org.hibernate.loader.collection.plan.CollectionLoader] [main] [83] [DEBUG] Static select for collection dawid.app.user.User.groups: select groups0_.user_id as user_id1_4_0_, groups0_.group_id as group_id2_4_0_, allgroup1_.group_id as group_id1_0_1_, allgroup1_.common_physical_activities as common_p2_0_1_, allgroup1_.common_city as common_c3_0_1_, allgroup1_.common_free_time as common_f4_0_1_, allgroup1_.name as name5_0_1_ from group_user groups0_ inner join all_group allgroup1_ on groups0_.group_id=allgroup1_.group_id where groups0_.user_id=?
[2019-06-05 16:46:53 ] [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator] [main] [56] [DEBUG] No actions specified; doing nothing
[2019-06-05 16:46:53 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [151] [DEBUG] Checking 0 named HQL queries
[2019-06-05 16:46:53 ] [org.hibernate.query.spi.NamedQueryRepository] [main] [167] [DEBUG] Checking 0 named SQL queries
[2019-06-05 16:46:53 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [52] [DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e72f6fd
[2019-06-05 16:46:53 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [74] [DEBUG] Registering SessionFactory: 50428c29-74ab-4b12-a5d3-3726a3acc106 (<unnamed>)
[2019-06-05 16:46:53 ] [org.hibernate.internal.SessionFactoryRegistry] [main] [81] [DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[2019-06-05 16:46:53 ] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [415] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2019-06-05 16:46:53 ] [org.hibernate.stat.internal.StatisticsInitiator] [main] [82] [DEBUG] Statistics initialized [enabled=false]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [45] [DEBUG] QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7fd36809
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] [main] [47] [INFO ] HHH000397: Using ASTQueryTranslatorFactory
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :intActive WHERE u.id = :id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'intActive'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=intActive, expectedType=org.hibernate.type.IntegerType@51c3253f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@51c3253f}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.password = :newPassword WHERE u.email= :email
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'password'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newPassword'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : password -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.password -> password
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'password' {originalText=password}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newPassword, expectedType=org.hibernate.type.StringType@5f9f032e}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@5f9f032e}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.email = :newEmail WHERE u.id= :id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newEmail'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : email -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.email -> email
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newEmail, expectedType=org.hibernate.type.StringType@5f9f032e}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@51c3253f}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.User u SET u.active = :activeParam WHERE u.activationCode = :activationCode
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  \-[IDENT] Node: 'app'
    |     |  |  \-[IDENT] Node: 'user'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'active'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'activeParam'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'activationCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'activationCode'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.User (u) -> user0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : active -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.active -> active
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : activationCode -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.activationCode -> activation_code
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=dawid.app.user.User}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'active' {originalText=active}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=activeParam, expectedType=org.hibernate.type.IntegerType@51c3253f}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'activation_code' {propertyName=activationCode,dereferenceType=PRIMITIVE,getPropertyPath=activationCode,path=u.activationCode,tableAlias=user0_,className=dawid.app.user.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=u, className=dawid.app.user.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'activationCode' {originalText=activationCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=activationCode, expectedType=org.hibernate.type.StringType@5f9f032e}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.whoSearch = :newWhoSearch, u.description = :newDescription WHERE u.id= :id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'whoSearch'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newWhoSearch'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDescription'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : whoSearch -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.whoSearch -> who_search
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.description -> description
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'who_search' {propertyName=whoSearch,dereferenceType=PRIMITIVE,getPropertyPath=whoSearch,path=u.whoSearch,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'whoSearch' {originalText=whoSearch}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newWhoSearch, expectedType=org.hibernate.type.StringType@5f9f032e}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=u.description,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@5f9f032e}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@51c3253f}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.userProfile.UserProfile u SET u.language = :newlanguage, u.number = :newnumber, u.character = :newcharacter, u.birthDate = :newbirthDate WHERE u.id= :id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'userProfile'
    |     |  \-[IDENT] Node: 'UserProfile'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'language'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newlanguage'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'number'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newnumber'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'u'
    |  |  |  \-[IDENT] Node: 'character'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newcharacter'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'birthDate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newbirthDate'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.userProfile.UserProfile (u) -> userprofil0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : language -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.language -> language
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : number -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.number -> number
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : character -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.character -> characters
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : birthDate -> org.hibernate.type.DateType@315714a3
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.birthDate -> birth_date
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : u.id -> user_profile_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (user_profile)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userprofil0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_profile' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_profile,tableAlias=userprofil0_,origin=null,columns={,className=dawid.app.user.userProfile.UserProfile}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'language' {propertyName=language,dereferenceType=PRIMITIVE,getPropertyPath=language,path=u.language,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'language' {originalText=language}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newlanguage, expectedType=org.hibernate.type.StringType@5f9f032e}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'number' {propertyName=number,dereferenceType=PRIMITIVE,getPropertyPath=number,path=u.number,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'number' {originalText=number}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newnumber, expectedType=org.hibernate.type.IntegerType@51c3253f}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'characters' {propertyName=character,dereferenceType=PRIMITIVE,getPropertyPath=character,path=u.character,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |  |  |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |  |  |  \-[IDENT] IdentNode: 'character' {originalText=character}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newcharacter, expectedType=org.hibernate.type.StringType@5f9f032e}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'birth_date' {propertyName=birthDate,dereferenceType=PRIMITIVE,getPropertyPath=birthDate,path=u.birthDate,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
    |     |  \-[IDENT] IdentNode: 'birthDate' {originalText=birthDate}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newbirthDate, expectedType=org.hibernate.type.DateType@315714a3}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_profile_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=userprofil0_,className=dawid.app.user.userProfile.UserProfile,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user_profile_id' {alias=u, className=dawid.app.user.userProfile.UserProfile, tableAlias=userprofil0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@51c3253f}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=1 where p.userId = :checkProfilPhotoId
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'checkProfilPhotoId'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=checkProfilPhotoId, expectedType=org.hibernate.type.IntegerType@51c3253f}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: UPDATE dawid.app.user.photo.Photo p SET p.name = :newName, p.description = :newDescription, p.data = :newData WHERE p.id= :id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'SET'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'name'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newName'
    |  +-[EQ] Node: '='
    |  |  +-[DOT] Node: '.'
    |  |  |  +-[IDENT] Node: 'p'
    |  |  |  \-[IDENT] Node: 'description'
    |  |  \-[COLON] Node: ':'
    |  |     \-[IDENT] Node: 'newDescription'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'data'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newData'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : name -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.name -> name
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : description -> org.hibernate.type.StringType@5f9f032e
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.description -> description
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : data -> org.hibernate.type.BinaryType@2f2c1331
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.data -> data
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : id -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.id -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'SET'
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@5f9f032e}
    |  +-[EQ] BinaryLogicOperatorNode: '='
    |  |  +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=p.description,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |  |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |  |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=newDescription, expectedType=org.hibernate.type.StringType@5f9f032e}
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'data' {propertyName=data,dereferenceType=PRIMITIVE,getPropertyPath=data,path=p.data,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'data' {originalText=data}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newData, expectedType=org.hibernate.type.BinaryType@2f2c1331}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'photo_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@51c3253f}

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [282] [DEBUG] parse() - HQL: Update dawid.app.user.photo.Photo p Set p.profilePhoto=0 where p.userId = :uncheckProfilPhotoId AND p.profilePhoto=1
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [305] [DEBUG] --- HQL AST ---
 \-[UPDATE] Node: 'Update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'dawid'
    |     |  |  |  |  \-[IDENT] Node: 'app'
    |     |  |  |  \-[IDENT] Node: 'user'
    |     |  |  \-[IDENT] Node: 'photo'
    |     |  \-[IDENT] Node: 'Photo'
    |     \-[ALIAS] Node: 'p'
    +-[SET] Node: 'Set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'p'
    |     |  \-[IDENT] Node: 'profilePhoto'
    |     \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'uncheckProfilPhotoId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'p'
             |  \-[IDENT] Node: 'profilePhoto'
             \-[NUM_INT] Node: '1'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [124] [DEBUG] update << begin [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromElement] [main] [147] [DEBUG] FromClause{level=1} : dawid.app.user.photo.Photo (p) -> photo0_
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : userId -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.userId -> user_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p -> photo_id
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.DotNode] [main] [688] [DEBUG] getDataType() : profilePhoto -> org.hibernate.type.IntegerType@51c3253f
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.tree.FromReferenceNode] [main] [60] [DEBUG] Resolved : p.profilePhoto -> profile_photo
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [128] [DEBUG] update : finishing up [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] [main] [132] [DEBUG] update >> end [level=1, statement=update]
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.QueryTranslatorImpl] [main] [269] [DEBUG] --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'Update'  querySpaces (photo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[photo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'photo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=photo,tableAlias=photo0_,origin=null,columns={,className=dawid.app.user.photo.Photo}}
    +-[SET] SqlNode: 'Set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
    |     |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
    |     |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
    |     \-[NUM_INT] LiteralNode: '0'
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=p.userId,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=uncheckProfilPhotoId, expectedType=org.hibernate.type.IntegerType@51c3253f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'profile_photo' {propertyName=profilePhoto,dereferenceType=PRIMITIVE,getPropertyPath=profilePhoto,path=p.profilePhoto,tableAlias=photo0_,className=dawid.app.user.photo.Photo,classAlias=p}
             |  +-[ALIAS_REF] IdentNode: 'photo_id' {alias=p, className=dawid.app.user.photo.Photo, tableAlias=photo0_}
             |  \-[IDENT] IdentNode: 'profilePhoto' {originalText=profilePhoto}
             \-[NUM_INT] LiteralNode: '1'

[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:54 ] [org.hibernate.hql.internal.ast.ErrorCounter] [main] [95] [DEBUG] throwQueryException() : no errors
[2019-06-05 16:46:55 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/resources/**'], []
[2019-06-05 16:46:55 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/statics/**'], []
[2019-06-05 16:46:55 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/css/**'], []
[2019-06-05 16:46:55 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/js/**'], []
[2019-06-05 16:46:55 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/images/**'], []
[2019-06-05 16:46:55 ] [org.springframework.security.web.DefaultSecurityFilterChain] [main] [43] [INFO ] Creating filter chain: Ant [pattern='/incl/**'], []
